Running automated test file(s):

Go packages: cipher 


===============================================================================

Running: ../../.github/citools/go/go-lint-golangci-lint

Running GoLangCi-Lint

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.020s
user	0m0.015s
sys	0m0.017s


 ==============================================================================

Running: golangci-lint run --enable-all ./...

level=warning msg="[runner] The linter 'deadcode' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'ifshort' is deprecated (since v1.48.0) due to: The repository of the linter has been deprecated by the owner. "
level=warning msg="[runner] The linter 'structcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'scopelint' is deprecated (since v1.39.0) due to: The repository of the linter has been deprecated by the owner. Replaced by exportloopref."
level=warning msg="[runner] The linter 'exhaustivestruct' is deprecated (since v1.46.0) due to: The owner seems to have abandoned the linter. Replaced by exhaustruct."
level=warning msg="[runner] The linter 'varcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'nosnakecase' is deprecated (since v1.48.1) due to: The repository of the linter has been deprecated by the owner. Replaced by revive(var-naming)."
level=warning msg="[runner] The linter 'golint' is deprecated (since v1.41.0) due to: The repository of the linter has been archived by the owner. Replaced by revive."
level=warning msg="[runner] The linter 'interfacer' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. "
level=warning msg="[runner] The linter 'maligned' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. Replaced by govet 'fieldalignment'."
simple_cipher_test.go:8:60: Comment should end in a period (godot)
// type for testing implementations of the Cipher interface
                                                           ^
simple_cipher_test.go:49:23: Using the variable on range scope `test` in function literal (scopelint)
			if enc := c.Encode(test.source); enc != test.cipher {
			                   ^
simple_cipher_test.go:50:47: Using the variable on range scope `test` in function literal (scopelint)
				tt.Errorf("Encode(%s): got %q, want %q.", test.source, enc, test.cipher)
				                                          ^
simple_cipher_test.go:54:23: Using the variable on range scope `test` in function literal (scopelint)
			if dec := c.Decode(test.cipher); dec != test.plain {
			                   ^
simple_cipher.go:101:2: only one cuddle assignment allowed before if statement (wsl)
	if err != nil {
	^
simple_cipher.go:192:2: only one cuddle assignment allowed before if statement (wsl)
	if err != nil {
	^
simple_cipher_test.go:38:2: only cuddled expressions if assigning variable or using from line above (wsl)
	t.Run("no extra symbols", func(t *testing.T) {
	^
simple_cipher_test.go:155:2: assignments should only be cuddled with other assignments (wsl)
	c := NewCaesar()
	^
simple_cipher_test.go:156:2: only cuddled expressions if assigning variable or using from line above (wsl)
	b.ResetTimer()
	^
simple_cipher_test.go:157:2: only one cuddle assignment allowed before for statement (wsl)
	for i := 0; i < b.N; i++ {
	^
simple_cipher_test.go:168:2: assignments should only be cuddled with other assignments (wsl)
	c := NewCaesar()
	^
simple_cipher_test.go:169:2: only cuddled expressions if assigning variable or using from line above (wsl)
	b.ResetTimer()
	^
simple_cipher_test.go:170:2: only one cuddle assignment allowed before for statement (wsl)
	for i := 0; i < b.N; i++ {
	^
simple_cipher_test.go:181:2: for statements should only be cuddled with assignments used in the iteration (wsl)
	for i := 0; i < b.N; i++ {
	^
simple_cipher_test.go:192:2: assignments should only be cuddled with other assignments (wsl)
	s := NewShift(5)
	^
simple_cipher_test.go:196:2: only one cuddle assignment allowed before for statement (wsl)
	for i := 0; i < b.N; i++ {
	^
simple_cipher_test.go:222:2: for statements should only be cuddled with assignments used in the iteration (wsl)
	for i := 0; i < b.N; i++ {
	^
simple_cipher_test.go:234:2: only one cuddle assignment allowed before range statement (wsl)
	for i, test := range vtests {
	^
simple_cipher_test.go:240:2: expressions should not be cuddled with blocks (wsl)
	b.ResetTimer()
	^
simple_cipher_test.go:256:2: only one cuddle assignment allowed before range statement (wsl)
	for i, test := range vtests {
	^
simple_cipher_test.go:262:2: expressions should not be cuddled with blocks (wsl)
	b.ResetTimer()
	^
simple_cipher_test.go:15:5: caesarPrepped is a global variable (gochecknoglobals)
var caesarPrepped = []cipherTest{
    ^
simple_cipher_test.go:22:5: caesarTests is a global variable (gochecknoglobals)
var caesarTests = []cipherTest{
    ^
simple_cipher_test.go:61:5: NSATests is a global variable (gochecknoglobals)
var NSATests = []cipherTest{
    ^
simple_cipher_test.go:108:5: vtests is a global variable (gochecknoglobals)
var vtests = []struct {
    ^
simple_cipher.go:146:15: mnd: Magic number: 122, in <condition> detected (gomnd)
		if target > 122 {
		            ^
simple_cipher.go:173:15: mnd: Magic number: 97, in <condition> detected (gomnd)
		if target < 97 {
		            ^
simple_cipher.go:59:22: mnd: Magic number: 26, in <operation> detected (gomnd)
		letter = (letter % 26) + offset
		                   ^
simple_cipher.go:86:22: mnd: Magic number: 26, in <operation> detected (gomnd)
		letter = (letter % 26) + offset
		                   ^
simple_cipher.go:142:25: mnd: Magic number: 97, in <operation> detected (gomnd)
		offset := int(char) - 97
		                      ^
simple_cipher.go:169:25: mnd: Magic number: 97, in <operation> detected (gomnd)
		offset := int(char) - 97
		                      ^
simple_cipher.go:18:1: NewCaesar returns interface (cipher.Cipher) (ireturn)
func NewCaesar() Cipher {
^
simple_cipher.go:27:1: NewShift returns interface (cipher.Cipher) (ireturn)
func NewShift(distance int) Cipher {
^
simple_cipher.go:94:1: NewVigenere returns interface (cipher.Cipher) (ireturn)
func NewVigenere(key string) Cipher {
^
simple_cipher_examples_test.go:5:6: Example_normalizeText contains underscore. You should use mixedCap or MixedCap. (nosnakecase)
func Example_normalizeText() {
     ^
simple_cipher_examples_test.go:22:6: Example_fixKey contains underscore. You should use mixedCap or MixedCap. (nosnakecase)
func Example_fixKey() {
     ^
simple_cipher_examples_test.go:32:6: Example_ceasarCipher contains underscore. You should use mixedCap or MixedCap. (nosnakecase)
func Example_ceasarCipher() {
     ^
simple_cipher_examples_test.go:52:6: Example_shiftCipher contains underscore. You should use mixedCap or MixedCap. (nosnakecase)
func Example_shiftCipher() {
     ^
simple_cipher_examples_test.go:72:6: Example_vigenereCipher contains underscore. You should use mixedCap or MixedCap. (nosnakecase)
func Example_vigenereCipher() {
     ^
simple_cipher_test.go:36:1: Function TestCaesar missing the call to method parallel (paralleltest)
func TestCaesar(t *testing.T) {
^
simple_cipher_test.go:41:2: Function TestCaesar has missing the call to method parallel in the test run (paralleltest)
	t.Run("with extra symbols", func(t *testing.T) {
	^
simple_cipher_test.go:80:1: Function TestShift missing the call to method parallel (paralleltest)
func TestShift(t *testing.T) {
^
simple_cipher_test.go:82:2: Function TestShift has missing the call to method parallel in the test run (paralleltest)
	t.Run(fmt.Sprintf("key=%d", 3), func(t *testing.T) {
	^
simple_cipher_test.go:91:2: Function TestShift has missing the call to method parallel in the test run (paralleltest)
	t.Run(fmt.Sprintf("key=%d", -3), func(t *testing.T) {
	^
simple_cipher_test.go:100:1: Function TestWrongShiftKey missing the call to method parallel (paralleltest)
func TestWrongShiftKey(t *testing.T) {
^
simple_cipher_test.go:128:1: Function TestVigenere missing the call to method parallel (paralleltest)
func TestVigenere(t *testing.T) {
^
simple_cipher_test.go:129:2: Range statement for test TestVigenere missing the call to method parallel in test Run (paralleltest)
	for _, test := range vtests {
	^
simple_cipher_test.go:141:1: Function TestVigenereWrongKey missing the call to method parallel (paralleltest)
func TestVigenereWrongKey(t *testing.T) {
^
simple_cipher_examples_test.go:1:9: package should be `cipher_test` instead of `cipher` (testpackage)
package cipher
        ^
simple_cipher_test.go:1:9: package should be `cipher_test` instead of `cipher` (testpackage)
package cipher
        ^
simple_cipher_test.go:46:6: parameter *testing.T should be the first or after context.Context (thelper)
func testCipher(c Cipher, tests []cipherTest, t *testing.T) {
     ^

real	0m0.559s
user	0m0.967s
sys	0m0.539s


 ==============================================================================

Exit code: -1

real	0m0.598s
user	0m0.995s
sys	0m0.569s

real	0m0.600s
user	0m0.996s
sys	0m0.570s

===============================================================================

Running: ../../.github/citools/go/go-lint-revive

Running Go Lint Revive

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.020s
user	0m0.011s
sys	0m0.022s


 ==============================================================================

Running: revive -formatter=stylish ./...


real	0m0.045s
user	0m0.018s
sys	0m0.040s


 ==============================================================================

Exit code: 0

real	0m0.073s
user	0m0.034s
sys	0m0.068s

real	0m0.075s
user	0m0.034s
sys	0m0.070s

===============================================================================

Running: ../../.github/citools/go/go-lint-ineffassign
../run-tests: line 41: .github/citools/go/go-lint-ineffassign: No such file or directory

real	0m0.001s
user	0m0.000s
sys	0m0.000s

===============================================================================

Running: ../../.github/citools/go/go-lint-go-consistent

Running Go go-consistent

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.018s
user	0m0.015s
sys	0m0.014s


 ==============================================================================

Running: go-consistent -v ./...

	info: check "./."
internal error: package "regexp" without types was imported from "cipher"

real	0m0.091s
user	0m0.130s
sys	0m0.122s


 ==============================================================================

Exit code: -1

real	0m0.119s
user	0m0.151s
sys	0m0.144s

real	0m0.121s
user	0m0.153s
sys	0m0.144s

===============================================================================

Running: ../../.github/citools/go/go-lint-staticcheck

Running Go StaticCheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.025s
user	0m0.019s
sys	0m0.021s


 ==============================================================================

Running: staticcheck -checks=all ./...


real	0m0.161s
user	0m0.210s
sys	0m0.121s


 ==============================================================================

Exit code: 0

real	0m0.196s
user	0m0.234s
sys	0m0.149s

real	0m0.198s
user	0m0.236s
sys	0m0.149s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocritic

Running Go gocritic

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.018s
user	0m0.015s
sys	0m0.014s


 ==============================================================================

Running: gocritic check -enableAll ./...


real	0m0.840s
user	0m2.158s
sys	0m0.296s


 ==============================================================================

Exit code: 0

real	0m0.867s
user	0m2.177s
sys	0m0.317s

real	0m0.869s
user	0m2.178s
sys	0m0.319s

===============================================================================

Running: ../../.github/citools/go/go-lint-go_vet

Running Go Vet

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.021s
user	0m0.014s
sys	0m0.018s


 ==============================================================================

Running: go vet ./...


real	0m0.107s
user	0m0.177s
sys	0m0.142s


 ==============================================================================

Exit code: 0

real	0m0.137s
user	0m0.195s
sys	0m0.169s

real	0m0.139s
user	0m0.195s
sys	0m0.171s

===============================================================================

Running: ../../.github/citools/go/go-fixer-go_fix

Running go fix

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.021s
user	0m0.011s
sys	0m0.019s


 ==============================================================================

Running: go fix ./...


real	0m0.030s
user	0m0.022s
sys	0m0.026s


 ==============================================================================

Exit code: 0

real	0m0.069s
user	0m0.039s
sys	0m0.058s

real	0m0.071s
user	0m0.041s
sys	0m0.059s

===============================================================================

Running: ../../.github/citools/go/go-lint-errcheck

Running Go errcheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.026s
user	0m0.017s
sys	0m0.024s


 ==============================================================================

Running: errcheck ./...


real	0m0.501s
user	0m1.542s
sys	0m0.297s


 ==============================================================================

Exit code: 0

real	0m0.541s
user	0m1.564s
sys	0m0.332s

real	0m0.543s
user	0m1.564s
sys	0m0.334s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocyclo

Running Go gocyclo

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.022s
user	0m0.017s
sys	0m0.021s


 ==============================================================================

Running: gocyclo .

7 cipher BenchmarkDecVigenere simple_cipher_test.go:251:1
7 cipher BenchmarkEncVigenere simple_cipher_test.go:229:1
6 cipher NewVigenere simple_cipher.go:94:1
4 cipher BenchmarkNewVigenere simple_cipher_test.go:218:1
4 cipher BenchmarkDecodeShift simple_cipher_test.go:203:1
4 cipher BenchmarkEncodeShift simple_cipher_test.go:188:1
4 cipher BenchmarkNewShift simple_cipher_test.go:177:1
4 cipher BenchmarkDecodeCaesar simple_cipher_test.go:164:1
4 cipher BenchmarkEncodeCaesar simple_cipher_test.go:151:1
4 cipher testCipher simple_cipher_test.go:46:1
4 cipher (vigenere).Decode simple_cipher.go:157:1
4 cipher (vigenere).Encode simple_cipher.go:130:1
4 cipher (shift).Decode simple_cipher.go:67:1
4 cipher (shift).Encode simple_cipher.go:40:1
4 cipher NewShift simple_cipher.go:27:1
3 cipher TestVigenereWrongKey simple_cipher_test.go:141:1
3 cipher TestVigenere simple_cipher_test.go:128:1
3 cipher TestWrongShiftKey simple_cipher_test.go:100:1
3 cipher TestShift simple_cipher_test.go:80:1
3 cipher fixKey simple_cipher.go:202:1
3 cipher normalize simple_cipher.go:183:1
2 cipher Example_vigenereCipher simple_cipher_examples_test.go:72:1
2 cipher Example_shiftCipher simple_cipher_examples_test.go:52:1
2 cipher Example_ceasarCipher simple_cipher_examples_test.go:32:1
2 cipher Example_normalizeText simple_cipher_examples_test.go:5:1
1 cipher TestCaesar simple_cipher_test.go:36:1
1 cipher Example_fixKey simple_cipher_examples_test.go:22:1
1 cipher NewCaesar simple_cipher.go:18:1

real	0m0.005s
user	0m0.002s
sys	0m0.003s


 ==============================================================================

Exit code: 0

real	0m0.038s
user	0m0.025s
sys	0m0.032s

real	0m0.039s
user	0m0.027s
sys	0m0.032s

===============================================================================

Running: ../../.github/citools/go/go-lint-misspell

Running Go misspell

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: misspell .


real	0m0.027s
user	0m0.036s
sys	0m0.009s


 ==============================================================================

Exit code: 0

real	0m0.039s
user	0m0.043s
sys	0m0.019s

real	0m0.043s
user	0m0.045s
sys	0m0.020s

===============================================================================

Running: ../../.github/citools/go/go-lint-gosec

Running Go GoSec

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.018s
user	0m0.017s
sys	0m0.011s


 ==============================================================================

Running: gosec ./...

[gosec] 2023/09/10 22:02:47 Including rules: default
[gosec] 2023/09/10 22:02:47 Excluding rules: default
[gosec] 2023/09/10 22:02:47 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/simple-cipher
[gosec] 2023/09/10 22:02:47 Checking package: cipher
[gosec] 2023/09/10 22:02:47 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/simple-cipher/cipher.go
[gosec] 2023/09/10 22:02:47 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/simple-cipher/simple_cipher.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 2
  Lines  : 223
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.110s
user	0m0.112s
sys	0m0.090s


 ==============================================================================

Exit code: 0

real	0m0.139s
user	0m0.134s
sys	0m0.110s

real	0m0.141s
user	0m0.135s
sys	0m0.111s

===============================================================================

Running: ../../.github/citools/go/go-test-cover-report

Running Go Test, Coverage & Reports

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.025s
user	0m0.012s
sys	0m0.030s


 ==============================================================================

Running: gotest -v -covermode=count -coverprofile coverage.out ./...

=== RUN   TestCaesar
=== RUN   TestCaesar/no_extra_symbols
=== RUN   TestCaesar/no_extra_symbols/Encode(iamapandabear)
=== RUN   TestCaesar/no_extra_symbols/Decode(ldpdsdqgdehdu)
=== RUN   TestCaesar/no_extra_symbols/Encode(programmingisawesome)
=== RUN   TestCaesar/no_extra_symbols/Decode(surjudpplqjlvdzhvrph)
=== RUN   TestCaesar/no_extra_symbols/Encode(todayisholiday)
=== RUN   TestCaesar/no_extra_symbols/Decode(wrgdblvkrolgdb)
=== RUN   TestCaesar/no_extra_symbols/Encode(venividivici)
=== RUN   TestCaesar/no_extra_symbols/Decode(yhqlylglylfl)
=== RUN   TestCaesar/with_extra_symbols
=== RUN   TestCaesar/with_extra_symbols/Encode(Go,_go,_gophers)
=== RUN   TestCaesar/with_extra_symbols/Decode(jrjrjrskhuv)
=== RUN   TestCaesar/with_extra_symbols/Encode(I_am_a_panda_bear.)
=== RUN   TestCaesar/with_extra_symbols/Decode(ldpdsdqgdehdu)
=== RUN   TestCaesar/with_extra_symbols/Encode(Programming_is_AWESOME!)
=== RUN   TestCaesar/with_extra_symbols/Decode(surjudpplqjlvdzhvrph)
=== RUN   TestCaesar/with_extra_symbols/Encode(today_is_holiday)
=== RUN   TestCaesar/with_extra_symbols/Decode(wrgdblvkrolgdb)
=== RUN   TestCaesar/with_extra_symbols/Encode(Twas_the_night_before_Christmas)
=== RUN   TestCaesar/with_extra_symbols/Decode(wzdvwkhqljkwehiruhfkulvwpdv)
=== RUN   TestCaesar/with_extra_symbols/Encode(_--_@#!)
=== RUN   TestCaesar/with_extra_symbols/Decode()
=== RUN   TestCaesar/with_extra_symbols/Encode()
=== RUN   TestCaesar/with_extra_symbols/Decode()#01
--- PASS: TestCaesar (0.00s)
    --- PASS: TestCaesar/no_extra_symbols (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(iamapandabear) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(ldpdsdqgdehdu) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(programmingisawesome) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(surjudpplqjlvdzhvrph) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(todayisholiday) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(wrgdblvkrolgdb) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(venividivici) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(yhqlylglylfl) (0.00s)
    --- PASS: TestCaesar/with_extra_symbols (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(Go,_go,_gophers) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(jrjrjrskhuv) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(I_am_a_panda_bear.) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(ldpdsdqgdehdu) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(Programming_is_AWESOME!) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(surjudpplqjlvdzhvrph) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(today_is_holiday) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(wrgdblvkrolgdb) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(Twas_the_night_before_Christmas) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(wzdvwkhqljkwehiruhfkulvwpdv) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(_--_@#!) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode() (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode() (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode()#01 (0.00s)
=== RUN   TestShift
=== RUN   TestShift/key=3
=== RUN   TestShift/key=3/Encode(Go,_go,_gophers)
=== RUN   TestShift/key=3/Decode(jrjrjrskhuv)
=== RUN   TestShift/key=3/Encode(I_am_a_panda_bear.)
=== RUN   TestShift/key=3/Decode(ldpdsdqgdehdu)
=== RUN   TestShift/key=3/Encode(Programming_is_AWESOME!)
=== RUN   TestShift/key=3/Decode(surjudpplqjlvdzhvrph)
=== RUN   TestShift/key=3/Encode(today_is_holiday)
=== RUN   TestShift/key=3/Decode(wrgdblvkrolgdb)
=== RUN   TestShift/key=3/Encode(Twas_the_night_before_Christmas)
=== RUN   TestShift/key=3/Decode(wzdvwkhqljkwehiruhfkulvwpdv)
=== RUN   TestShift/key=3/Encode(_--_@#!)
=== RUN   TestShift/key=3/Decode()
=== RUN   TestShift/key=3/Encode()
=== RUN   TestShift/key=3/Decode()#01
=== RUN   TestShift/key=-3
=== RUN   TestShift/key=-3/Encode(THE_ENEMY_IS_NEAR)
=== RUN   TestShift/key=-3/Decode(qebbkbjvfpkbxo)
=== RUN   TestShift/key=-3/Encode(SPIES_SEND_SECRET_MESSAGES)
=== RUN   TestShift/key=-3/Decode(pmfbppbkapbzobqjbppxdbp)
=== RUN   TestShift/key=-3/Encode(THOMAS_JEFFERSON_DESIGNED_A_SUBSTITUTION_CIPHER)
=== RUN   TestShift/key=-3/Decode(qeljxpgbccboplkabpfdkbaxprypqfqrqflkzfmebo)
=== RUN   TestShift/key=-3/Encode(the_quick_brown_fox_jumps_over_the_lazy_dog)
=== RUN   TestShift/key=-3/Decode(qebnrfzhyoltkclugrjmplsboqebixwvald)
--- PASS: TestShift (0.00s)
    --- PASS: TestShift/key=3 (0.00s)
        --- PASS: TestShift/key=3/Encode(Go,_go,_gophers) (0.00s)
        --- PASS: TestShift/key=3/Decode(jrjrjrskhuv) (0.00s)
        --- PASS: TestShift/key=3/Encode(I_am_a_panda_bear.) (0.00s)
        --- PASS: TestShift/key=3/Decode(ldpdsdqgdehdu) (0.00s)
        --- PASS: TestShift/key=3/Encode(Programming_is_AWESOME!) (0.00s)
        --- PASS: TestShift/key=3/Decode(surjudpplqjlvdzhvrph) (0.00s)
        --- PASS: TestShift/key=3/Encode(today_is_holiday) (0.00s)
        --- PASS: TestShift/key=3/Decode(wrgdblvkrolgdb) (0.00s)
        --- PASS: TestShift/key=3/Encode(Twas_the_night_before_Christmas) (0.00s)
        --- PASS: TestShift/key=3/Decode(wzdvwkhqljkwehiruhfkulvwpdv) (0.00s)
        --- PASS: TestShift/key=3/Encode(_--_@#!) (0.00s)
        --- PASS: TestShift/key=3/Decode() (0.00s)
        --- PASS: TestShift/key=3/Encode() (0.00s)
        --- PASS: TestShift/key=3/Decode()#01 (0.00s)
    --- PASS: TestShift/key=-3 (0.00s)
        --- PASS: TestShift/key=-3/Encode(THE_ENEMY_IS_NEAR) (0.00s)
        --- PASS: TestShift/key=-3/Decode(qebbkbjvfpkbxo) (0.00s)
        --- PASS: TestShift/key=-3/Encode(SPIES_SEND_SECRET_MESSAGES) (0.00s)
        --- PASS: TestShift/key=-3/Decode(pmfbppbkapbzobqjbppxdbp) (0.00s)
        --- PASS: TestShift/key=-3/Encode(THOMAS_JEFFERSON_DESIGNED_A_SUBSTITUTION_CIPHER) (0.00s)
        --- PASS: TestShift/key=-3/Decode(qeljxpgbccboplkabpfdkbaxprypqfqrqflkzfmebo) (0.00s)
        --- PASS: TestShift/key=-3/Encode(the_quick_brown_fox_jumps_over_the_lazy_dog) (0.00s)
        --- PASS: TestShift/key=-3/Decode(qebnrfzhyoltkclugrjmplsboqebixwvald) (0.00s)
=== RUN   TestWrongShiftKey
--- PASS: TestWrongShiftKey (0.00s)
=== RUN   TestVigenere
=== RUN   TestVigenere/key=lemon
=== RUN   TestVigenere/key=lemon/Encode(ATTACKATDAWN)
=== RUN   TestVigenere/key=lemon/Decode(lxfopvefrnhr)
=== RUN   TestVigenere/key=abcdefghij
=== RUN   TestVigenere/key=abcdefghij/Encode(aaaaaaaaaa)
=== RUN   TestVigenere/key=abcdefghij/Decode(abcdefghij)
=== RUN   TestVigenere/key=abcdefghij/Encode(zzzzzzzzzz)
=== RUN   TestVigenere/key=abcdefghij/Decode(zabcdefghi)
=== RUN   TestVigenere/key=iamapandabear
=== RUN   TestVigenere/key=iamapandabear/Encode(I_am_a_panda_bear.)
=== RUN   TestVigenere/key=iamapandabear/Decode(qayaeaagaciai)
=== RUN   TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu
=== RUN   TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Encode(Diffie_Hellman)
=== RUN   TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Decode(gccwkixcltycv)
=== RUN   TestVigenere/key=qgbvno
=== RUN   TestVigenere/key=qgbvno/Encode(cof-FEE,_123!)
=== RUN   TestVigenere/key=qgbvno/Decode(sugars)
--- PASS: TestVigenere (0.00s)
    --- PASS: TestVigenere/key=lemon (0.00s)
        --- PASS: TestVigenere/key=lemon/Encode(ATTACKATDAWN) (0.00s)
        --- PASS: TestVigenere/key=lemon/Decode(lxfopvefrnhr) (0.00s)
    --- PASS: TestVigenere/key=abcdefghij (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Encode(aaaaaaaaaa) (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Decode(abcdefghij) (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Encode(zzzzzzzzzz) (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Decode(zabcdefghi) (0.00s)
    --- PASS: TestVigenere/key=iamapandabear (0.00s)
        --- PASS: TestVigenere/key=iamapandabear/Encode(I_am_a_panda_bear.) (0.00s)
        --- PASS: TestVigenere/key=iamapandabear/Decode(qayaeaagaciai) (0.00s)
    --- PASS: TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu (0.00s)
        --- PASS: TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Encode(Diffie_Hellman) (0.00s)
        --- PASS: TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Decode(gccwkixcltycv) (0.00s)
    --- PASS: TestVigenere/key=qgbvno (0.00s)
        --- PASS: TestVigenere/key=qgbvno/Encode(cof-FEE,_123!) (0.00s)
        --- PASS: TestVigenere/key=qgbvno/Decode(sugars) (0.00s)
=== RUN   TestVigenereWrongKey
--- PASS: TestVigenereWrongKey (0.00s)
=== RUN   Example_normalizeText
--- PASS: Example_normalizeText (0.00s)
=== RUN   Example_fixKey
--- PASS: Example_fixKey (0.00s)
=== RUN   Example_ceasarCipher
--- PASS: Example_ceasarCipher (0.00s)
=== RUN   Example_shiftCipher
--- PASS: Example_shiftCipher (0.00s)
=== RUN   Example_vigenereCipher
--- PASS: Example_vigenereCipher (0.00s)
PASS
coverage: 92.1% of statements
ok  	cipher	0.006s	coverage: 92.1% of statements

real	0m0.223s
user	0m0.322s
sys	0m0.171s


 ==============================================================================

Running: go tool cover -func=coverage.out

cipher/simple_cipher.go:18:	NewCaesar	100.0%
cipher/simple_cipher.go:27:	NewShift	100.0%
cipher/simple_cipher.go:40:	Encode		100.0%
cipher/simple_cipher.go:67:	Decode		100.0%
cipher/simple_cipher.go:94:	NewVigenere	87.5%
cipher/simple_cipher.go:130:	Encode		91.7%
cipher/simple_cipher.go:157:	Decode		91.7%
cipher/simple_cipher.go:183:	normalize	80.0%
cipher/simple_cipher.go:202:	fixKey		85.7%
total:				(statements)	92.1%

real	0m0.046s
user	0m0.063s
sys	0m0.064s


 ==============================================================================

Running: go tool cover -html coverage.out -o coverage.html


real	0m0.049s
user	0m0.059s
sys	0m0.066s


 ==============================================================================

Running: cover_annotate

Running: gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

 94     	func NewVigenere(key string) Cipher {
 95     		if key == "" {
 96     			return nil
 97     		}
 98     	
 99     		reStr := `^a+$`
100     		match, err := regexp.MatchString(reStr, key)
101     		if err != nil {
102 MISS			panic(err)
103     		}
104     	
105     		// a+ key not allowed
106     		if match {
107     			return nil
108     		}
109     	
110     		reStr = `^[a-z]+$`
111     		match, err = regexp.MatchString(reStr, key)
112     	
113     		if err != nil {
114 MISS			panic(err)
115     		}
116     	
117     		// key doesn't consist of just a-z letters
118     		if !match {
119     			return nil
120     		}
121     	
122     		cipher := vigenere{
123     			key: key,
124     		}
125     	
126     		return cipher
127     	}


202     	func fixKey(oldKey string, size int) string {
203     		if size <= 0 {
204 MISS			return ""
205     		}
206     	
207     		newKey := oldKey
208     	
209     		for len(newKey) < size {
210     			newKey += oldKey
211     		}
212     	
213     		newKey = newKey[:size]
214     	
215     		return newKey
216     	}


183     	func normalize(text string) string {
184     		if text == "" {
185 MISS			return ""
186     		}
187     	
188     		var output string
189     	
190     		reStr := `[[:^alpha:]]`
191     		re, err := regexp.Compile(reStr)
192     		if err != nil {
193 MISS			panic(err)
194     		}
195     	
196     		output = re.ReplaceAllString(text, "")
197     		output = strings.ToLower(output)
198     	
199     		return output
200     	}


157     	func (v vigenere) Decode(cipher string) string {
158     		if cipher == "" {
159 MISS			return ""
160     		}
161     	
162     		input := cipher
163     	
164     		key := fixKey(v.key, len(input))
165     	
166     		var plain strings.Builder
167     	
168     		for i, char := range key {
169     			offset := int(char) - 97
170     			target := int(input[i]) - offset
171     	
172     			// Chars below A need to roll back to top of the range.
173     			if target < 97 {
174     				target += 26
175     			}
176     	
177     			plain.WriteRune(rune(target))
178     		}
179     	
180     		return plain.String()
181     	}


130     	func (v vigenere) Encode(plain string) string {
131     		if plain == "" {
132 MISS			return ""
133     		}
134     	
135     		input := normalize(plain)
136     	
137     		key := fixKey(v.key, len(input))
138     	
139     		var cipher strings.Builder
140     	
141     		for i, char := range key {
142     			offset := int(char) - 97
143     			target := int(input[i]) + offset
144     	
145     			// Chars above Z need to roll back to bottom of the range.
146     			if target > 122 {
147     				target -= 26
148     			}
149     	
150     			cipher.WriteRune(rune(target))
151     		}
152     	
153     		return cipher.String()
154     	}


real	0m0.015s
user	0m0.013s
sys	0m0.016s

real	0m0.015s
user	0m0.013s
sys	0m0.016s


 ==============================================================================

Running: gotest -v -race -covermode=atomic ./...

=== RUN   TestCaesar
=== RUN   TestCaesar/no_extra_symbols
=== RUN   TestCaesar/no_extra_symbols/Encode(iamapandabear)
=== RUN   TestCaesar/no_extra_symbols/Decode(ldpdsdqgdehdu)
=== RUN   TestCaesar/no_extra_symbols/Encode(programmingisawesome)
=== RUN   TestCaesar/no_extra_symbols/Decode(surjudpplqjlvdzhvrph)
=== RUN   TestCaesar/no_extra_symbols/Encode(todayisholiday)
=== RUN   TestCaesar/no_extra_symbols/Decode(wrgdblvkrolgdb)
=== RUN   TestCaesar/no_extra_symbols/Encode(venividivici)
=== RUN   TestCaesar/no_extra_symbols/Decode(yhqlylglylfl)
=== RUN   TestCaesar/with_extra_symbols
=== RUN   TestCaesar/with_extra_symbols/Encode(Go,_go,_gophers)
=== RUN   TestCaesar/with_extra_symbols/Decode(jrjrjrskhuv)
=== RUN   TestCaesar/with_extra_symbols/Encode(I_am_a_panda_bear.)
=== RUN   TestCaesar/with_extra_symbols/Decode(ldpdsdqgdehdu)
=== RUN   TestCaesar/with_extra_symbols/Encode(Programming_is_AWESOME!)
=== RUN   TestCaesar/with_extra_symbols/Decode(surjudpplqjlvdzhvrph)
=== RUN   TestCaesar/with_extra_symbols/Encode(today_is_holiday)
=== RUN   TestCaesar/with_extra_symbols/Decode(wrgdblvkrolgdb)
=== RUN   TestCaesar/with_extra_symbols/Encode(Twas_the_night_before_Christmas)
=== RUN   TestCaesar/with_extra_symbols/Decode(wzdvwkhqljkwehiruhfkulvwpdv)
=== RUN   TestCaesar/with_extra_symbols/Encode(_--_@#!)
=== RUN   TestCaesar/with_extra_symbols/Decode()
=== RUN   TestCaesar/with_extra_symbols/Encode()
=== RUN   TestCaesar/with_extra_symbols/Decode()#01
--- PASS: TestCaesar (0.00s)
    --- PASS: TestCaesar/no_extra_symbols (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(iamapandabear) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(ldpdsdqgdehdu) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(programmingisawesome) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(surjudpplqjlvdzhvrph) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(todayisholiday) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(wrgdblvkrolgdb) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(venividivici) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(yhqlylglylfl) (0.00s)
    --- PASS: TestCaesar/with_extra_symbols (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(Go,_go,_gophers) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(jrjrjrskhuv) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(I_am_a_panda_bear.) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(ldpdsdqgdehdu) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(Programming_is_AWESOME!) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(surjudpplqjlvdzhvrph) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(today_is_holiday) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(wrgdblvkrolgdb) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(Twas_the_night_before_Christmas) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(wzdvwkhqljkwehiruhfkulvwpdv) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(_--_@#!) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode() (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode() (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode()#01 (0.00s)
=== RUN   TestShift
=== RUN   TestShift/key=3
=== RUN   TestShift/key=3/Encode(Go,_go,_gophers)
=== RUN   TestShift/key=3/Decode(jrjrjrskhuv)
=== RUN   TestShift/key=3/Encode(I_am_a_panda_bear.)
=== RUN   TestShift/key=3/Decode(ldpdsdqgdehdu)
=== RUN   TestShift/key=3/Encode(Programming_is_AWESOME!)
=== RUN   TestShift/key=3/Decode(surjudpplqjlvdzhvrph)
=== RUN   TestShift/key=3/Encode(today_is_holiday)
=== RUN   TestShift/key=3/Decode(wrgdblvkrolgdb)
=== RUN   TestShift/key=3/Encode(Twas_the_night_before_Christmas)
=== RUN   TestShift/key=3/Decode(wzdvwkhqljkwehiruhfkulvwpdv)
=== RUN   TestShift/key=3/Encode(_--_@#!)
=== RUN   TestShift/key=3/Decode()
=== RUN   TestShift/key=3/Encode()
=== RUN   TestShift/key=3/Decode()#01
=== RUN   TestShift/key=-3
=== RUN   TestShift/key=-3/Encode(THE_ENEMY_IS_NEAR)
=== RUN   TestShift/key=-3/Decode(qebbkbjvfpkbxo)
=== RUN   TestShift/key=-3/Encode(SPIES_SEND_SECRET_MESSAGES)
=== RUN   TestShift/key=-3/Decode(pmfbppbkapbzobqjbppxdbp)
=== RUN   TestShift/key=-3/Encode(THOMAS_JEFFERSON_DESIGNED_A_SUBSTITUTION_CIPHER)
=== RUN   TestShift/key=-3/Decode(qeljxpgbccboplkabpfdkbaxprypqfqrqflkzfmebo)
=== RUN   TestShift/key=-3/Encode(the_quick_brown_fox_jumps_over_the_lazy_dog)
=== RUN   TestShift/key=-3/Decode(qebnrfzhyoltkclugrjmplsboqebixwvald)
--- PASS: TestShift (0.00s)
    --- PASS: TestShift/key=3 (0.00s)
        --- PASS: TestShift/key=3/Encode(Go,_go,_gophers) (0.00s)
        --- PASS: TestShift/key=3/Decode(jrjrjrskhuv) (0.00s)
        --- PASS: TestShift/key=3/Encode(I_am_a_panda_bear.) (0.00s)
        --- PASS: TestShift/key=3/Decode(ldpdsdqgdehdu) (0.00s)
        --- PASS: TestShift/key=3/Encode(Programming_is_AWESOME!) (0.00s)
        --- PASS: TestShift/key=3/Decode(surjudpplqjlvdzhvrph) (0.00s)
        --- PASS: TestShift/key=3/Encode(today_is_holiday) (0.00s)
        --- PASS: TestShift/key=3/Decode(wrgdblvkrolgdb) (0.00s)
        --- PASS: TestShift/key=3/Encode(Twas_the_night_before_Christmas) (0.00s)
        --- PASS: TestShift/key=3/Decode(wzdvwkhqljkwehiruhfkulvwpdv) (0.00s)
        --- PASS: TestShift/key=3/Encode(_--_@#!) (0.00s)
        --- PASS: TestShift/key=3/Decode() (0.00s)
        --- PASS: TestShift/key=3/Encode() (0.00s)
        --- PASS: TestShift/key=3/Decode()#01 (0.00s)
    --- PASS: TestShift/key=-3 (0.00s)
        --- PASS: TestShift/key=-3/Encode(THE_ENEMY_IS_NEAR) (0.00s)
        --- PASS: TestShift/key=-3/Decode(qebbkbjvfpkbxo) (0.00s)
        --- PASS: TestShift/key=-3/Encode(SPIES_SEND_SECRET_MESSAGES) (0.00s)
        --- PASS: TestShift/key=-3/Decode(pmfbppbkapbzobqjbppxdbp) (0.00s)
        --- PASS: TestShift/key=-3/Encode(THOMAS_JEFFERSON_DESIGNED_A_SUBSTITUTION_CIPHER) (0.00s)
        --- PASS: TestShift/key=-3/Decode(qeljxpgbccboplkabpfdkbaxprypqfqrqflkzfmebo) (0.00s)
        --- PASS: TestShift/key=-3/Encode(the_quick_brown_fox_jumps_over_the_lazy_dog) (0.00s)
        --- PASS: TestShift/key=-3/Decode(qebnrfzhyoltkclugrjmplsboqebixwvald) (0.00s)
=== RUN   TestWrongShiftKey
--- PASS: TestWrongShiftKey (0.00s)
=== RUN   TestVigenere
=== RUN   TestVigenere/key=lemon
=== RUN   TestVigenere/key=lemon/Encode(ATTACKATDAWN)
=== RUN   TestVigenere/key=lemon/Decode(lxfopvefrnhr)
=== RUN   TestVigenere/key=abcdefghij
=== RUN   TestVigenere/key=abcdefghij/Encode(aaaaaaaaaa)
=== RUN   TestVigenere/key=abcdefghij/Decode(abcdefghij)
=== RUN   TestVigenere/key=abcdefghij/Encode(zzzzzzzzzz)
=== RUN   TestVigenere/key=abcdefghij/Decode(zabcdefghi)
=== RUN   TestVigenere/key=iamapandabear
=== RUN   TestVigenere/key=iamapandabear/Encode(I_am_a_panda_bear.)
=== RUN   TestVigenere/key=iamapandabear/Decode(qayaeaagaciai)
=== RUN   TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu
=== RUN   TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Encode(Diffie_Hellman)
=== RUN   TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Decode(gccwkixcltycv)
=== RUN   TestVigenere/key=qgbvno
=== RUN   TestVigenere/key=qgbvno/Encode(cof-FEE,_123!)
=== RUN   TestVigenere/key=qgbvno/Decode(sugars)
--- PASS: TestVigenere (0.00s)
    --- PASS: TestVigenere/key=lemon (0.00s)
        --- PASS: TestVigenere/key=lemon/Encode(ATTACKATDAWN) (0.00s)
        --- PASS: TestVigenere/key=lemon/Decode(lxfopvefrnhr) (0.00s)
    --- PASS: TestVigenere/key=abcdefghij (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Encode(aaaaaaaaaa) (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Decode(abcdefghij) (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Encode(zzzzzzzzzz) (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Decode(zabcdefghi) (0.00s)
    --- PASS: TestVigenere/key=iamapandabear (0.00s)
        --- PASS: TestVigenere/key=iamapandabear/Encode(I_am_a_panda_bear.) (0.00s)
        --- PASS: TestVigenere/key=iamapandabear/Decode(qayaeaagaciai) (0.00s)
    --- PASS: TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu (0.00s)
        --- PASS: TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Encode(Diffie_Hellman) (0.00s)
        --- PASS: TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Decode(gccwkixcltycv) (0.00s)
    --- PASS: TestVigenere/key=qgbvno (0.00s)
        --- PASS: TestVigenere/key=qgbvno/Encode(cof-FEE,_123!) (0.00s)
        --- PASS: TestVigenere/key=qgbvno/Decode(sugars) (0.00s)
=== RUN   TestVigenereWrongKey
--- PASS: TestVigenereWrongKey (0.00s)
=== RUN   Example_normalizeText
--- PASS: Example_normalizeText (0.00s)
=== RUN   Example_fixKey
--- PASS: Example_fixKey (0.00s)
=== RUN   Example_ceasarCipher
--- PASS: Example_ceasarCipher (0.00s)
=== RUN   Example_shiftCipher
--- PASS: Example_shiftCipher (0.00s)
=== RUN   Example_vigenereCipher
--- PASS: Example_vigenereCipher (0.00s)
PASS
coverage: 92.1% of statements
ok  	cipher	1.024s	coverage: 92.1% of statements

real	0m1.293s
user	0m0.358s
sys	0m0.195s


 ==============================================================================

Exit code: 0

real	0m1.660s
user	0m0.833s
sys	0m0.549s

real	0m1.663s
user	0m0.836s
sys	0m0.549s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

gotest -v --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: cipher
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
BenchmarkEncodeCaesar
BenchmarkEncodeCaesar-8   	  123675	      9189 ns/op	    5513 B/op	     104 allocs/op
BenchmarkDecodeCaesar
BenchmarkDecodeCaesar-8   	 1879539	       560.3 ns/op	     184 B/op	      12 allocs/op
BenchmarkNewShift
BenchmarkNewShift-8       	59023688	        20.04 ns/op	       0 B/op	       0 allocs/op
BenchmarkEncodeShift
BenchmarkEncodeShift-8    	   67670	     19611 ns/op	    9699 B/op	     185 allocs/op
BenchmarkDecodeShift
BenchmarkDecodeShift-8    	  828325	      1341 ns/op	     504 B/op	      25 allocs/op
BenchmarkNewVigenere
BenchmarkNewVigenere-8    	   47727	     26811 ns/op	   23766 B/op	     345 allocs/op
BenchmarkEncVigenere
BenchmarkEncVigenere-8    	  148969	      8024 ns/op	    5372 B/op	     103 allocs/op
BenchmarkDecVigenere
BenchmarkDecVigenere-8    	 2327863	       511.6 ns/op	     160 B/op	      13 allocs/op
PASS
ok  	cipher	12.298s

real	0m12.462s
user	0m12.877s
sys	0m0.388s

===============================================================================

gotest -v -tags bonus
=== RUN   TestCaesar
=== RUN   TestCaesar/no_extra_symbols
=== RUN   TestCaesar/no_extra_symbols/Encode(iamapandabear)
=== RUN   TestCaesar/no_extra_symbols/Decode(ldpdsdqgdehdu)
=== RUN   TestCaesar/no_extra_symbols/Encode(programmingisawesome)
=== RUN   TestCaesar/no_extra_symbols/Decode(surjudpplqjlvdzhvrph)
=== RUN   TestCaesar/no_extra_symbols/Encode(todayisholiday)
=== RUN   TestCaesar/no_extra_symbols/Decode(wrgdblvkrolgdb)
=== RUN   TestCaesar/no_extra_symbols/Encode(venividivici)
=== RUN   TestCaesar/no_extra_symbols/Decode(yhqlylglylfl)
=== RUN   TestCaesar/with_extra_symbols
=== RUN   TestCaesar/with_extra_symbols/Encode(Go,_go,_gophers)
=== RUN   TestCaesar/with_extra_symbols/Decode(jrjrjrskhuv)
=== RUN   TestCaesar/with_extra_symbols/Encode(I_am_a_panda_bear.)
=== RUN   TestCaesar/with_extra_symbols/Decode(ldpdsdqgdehdu)
=== RUN   TestCaesar/with_extra_symbols/Encode(Programming_is_AWESOME!)
=== RUN   TestCaesar/with_extra_symbols/Decode(surjudpplqjlvdzhvrph)
=== RUN   TestCaesar/with_extra_symbols/Encode(today_is_holiday)
=== RUN   TestCaesar/with_extra_symbols/Decode(wrgdblvkrolgdb)
=== RUN   TestCaesar/with_extra_symbols/Encode(Twas_the_night_before_Christmas)
=== RUN   TestCaesar/with_extra_symbols/Decode(wzdvwkhqljkwehiruhfkulvwpdv)
=== RUN   TestCaesar/with_extra_symbols/Encode(_--_@#!)
=== RUN   TestCaesar/with_extra_symbols/Decode()
=== RUN   TestCaesar/with_extra_symbols/Encode()
=== RUN   TestCaesar/with_extra_symbols/Decode()#01
--- PASS: TestCaesar (0.00s)
    --- PASS: TestCaesar/no_extra_symbols (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(iamapandabear) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(ldpdsdqgdehdu) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(programmingisawesome) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(surjudpplqjlvdzhvrph) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(todayisholiday) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(wrgdblvkrolgdb) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(venividivici) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(yhqlylglylfl) (0.00s)
    --- PASS: TestCaesar/with_extra_symbols (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(Go,_go,_gophers) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(jrjrjrskhuv) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(I_am_a_panda_bear.) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(ldpdsdqgdehdu) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(Programming_is_AWESOME!) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(surjudpplqjlvdzhvrph) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(today_is_holiday) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(wrgdblvkrolgdb) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(Twas_the_night_before_Christmas) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(wzdvwkhqljkwehiruhfkulvwpdv) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(_--_@#!) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode() (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode() (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode()#01 (0.00s)
=== RUN   TestShift
=== RUN   TestShift/key=3
=== RUN   TestShift/key=3/Encode(Go,_go,_gophers)
=== RUN   TestShift/key=3/Decode(jrjrjrskhuv)
=== RUN   TestShift/key=3/Encode(I_am_a_panda_bear.)
=== RUN   TestShift/key=3/Decode(ldpdsdqgdehdu)
=== RUN   TestShift/key=3/Encode(Programming_is_AWESOME!)
=== RUN   TestShift/key=3/Decode(surjudpplqjlvdzhvrph)
=== RUN   TestShift/key=3/Encode(today_is_holiday)
=== RUN   TestShift/key=3/Decode(wrgdblvkrolgdb)
=== RUN   TestShift/key=3/Encode(Twas_the_night_before_Christmas)
=== RUN   TestShift/key=3/Decode(wzdvwkhqljkwehiruhfkulvwpdv)
=== RUN   TestShift/key=3/Encode(_--_@#!)
=== RUN   TestShift/key=3/Decode()
=== RUN   TestShift/key=3/Encode()
=== RUN   TestShift/key=3/Decode()#01
=== RUN   TestShift/key=-3
=== RUN   TestShift/key=-3/Encode(THE_ENEMY_IS_NEAR)
=== RUN   TestShift/key=-3/Decode(qebbkbjvfpkbxo)
=== RUN   TestShift/key=-3/Encode(SPIES_SEND_SECRET_MESSAGES)
=== RUN   TestShift/key=-3/Decode(pmfbppbkapbzobqjbppxdbp)
=== RUN   TestShift/key=-3/Encode(THOMAS_JEFFERSON_DESIGNED_A_SUBSTITUTION_CIPHER)
=== RUN   TestShift/key=-3/Decode(qeljxpgbccboplkabpfdkbaxprypqfqrqflkzfmebo)
=== RUN   TestShift/key=-3/Encode(the_quick_brown_fox_jumps_over_the_lazy_dog)
=== RUN   TestShift/key=-3/Decode(qebnrfzhyoltkclugrjmplsboqebixwvald)
--- PASS: TestShift (0.00s)
    --- PASS: TestShift/key=3 (0.00s)
        --- PASS: TestShift/key=3/Encode(Go,_go,_gophers) (0.00s)
        --- PASS: TestShift/key=3/Decode(jrjrjrskhuv) (0.00s)
        --- PASS: TestShift/key=3/Encode(I_am_a_panda_bear.) (0.00s)
        --- PASS: TestShift/key=3/Decode(ldpdsdqgdehdu) (0.00s)
        --- PASS: TestShift/key=3/Encode(Programming_is_AWESOME!) (0.00s)
        --- PASS: TestShift/key=3/Decode(surjudpplqjlvdzhvrph) (0.00s)
        --- PASS: TestShift/key=3/Encode(today_is_holiday) (0.00s)
        --- PASS: TestShift/key=3/Decode(wrgdblvkrolgdb) (0.00s)
        --- PASS: TestShift/key=3/Encode(Twas_the_night_before_Christmas) (0.00s)
        --- PASS: TestShift/key=3/Decode(wzdvwkhqljkwehiruhfkulvwpdv) (0.00s)
        --- PASS: TestShift/key=3/Encode(_--_@#!) (0.00s)
        --- PASS: TestShift/key=3/Decode() (0.00s)
        --- PASS: TestShift/key=3/Encode() (0.00s)
        --- PASS: TestShift/key=3/Decode()#01 (0.00s)
    --- PASS: TestShift/key=-3 (0.00s)
        --- PASS: TestShift/key=-3/Encode(THE_ENEMY_IS_NEAR) (0.00s)
        --- PASS: TestShift/key=-3/Decode(qebbkbjvfpkbxo) (0.00s)
        --- PASS: TestShift/key=-3/Encode(SPIES_SEND_SECRET_MESSAGES) (0.00s)
        --- PASS: TestShift/key=-3/Decode(pmfbppbkapbzobqjbppxdbp) (0.00s)
        --- PASS: TestShift/key=-3/Encode(THOMAS_JEFFERSON_DESIGNED_A_SUBSTITUTION_CIPHER) (0.00s)
        --- PASS: TestShift/key=-3/Decode(qeljxpgbccboplkabpfdkbaxprypqfqrqflkzfmebo) (0.00s)
        --- PASS: TestShift/key=-3/Encode(the_quick_brown_fox_jumps_over_the_lazy_dog) (0.00s)
        --- PASS: TestShift/key=-3/Decode(qebnrfzhyoltkclugrjmplsboqebixwvald) (0.00s)
=== RUN   TestWrongShiftKey
--- PASS: TestWrongShiftKey (0.00s)
=== RUN   TestVigenere
=== RUN   TestVigenere/key=lemon
=== RUN   TestVigenere/key=lemon/Encode(ATTACKATDAWN)
=== RUN   TestVigenere/key=lemon/Decode(lxfopvefrnhr)
=== RUN   TestVigenere/key=abcdefghij
=== RUN   TestVigenere/key=abcdefghij/Encode(aaaaaaaaaa)
=== RUN   TestVigenere/key=abcdefghij/Decode(abcdefghij)
=== RUN   TestVigenere/key=abcdefghij/Encode(zzzzzzzzzz)
=== RUN   TestVigenere/key=abcdefghij/Decode(zabcdefghi)
=== RUN   TestVigenere/key=iamapandabear
=== RUN   TestVigenere/key=iamapandabear/Encode(I_am_a_panda_bear.)
=== RUN   TestVigenere/key=iamapandabear/Decode(qayaeaagaciai)
=== RUN   TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu
=== RUN   TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Encode(Diffie_Hellman)
=== RUN   TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Decode(gccwkixcltycv)
=== RUN   TestVigenere/key=qgbvno
=== RUN   TestVigenere/key=qgbvno/Encode(cof-FEE,_123!)
=== RUN   TestVigenere/key=qgbvno/Decode(sugars)
--- PASS: TestVigenere (0.00s)
    --- PASS: TestVigenere/key=lemon (0.00s)
        --- PASS: TestVigenere/key=lemon/Encode(ATTACKATDAWN) (0.00s)
        --- PASS: TestVigenere/key=lemon/Decode(lxfopvefrnhr) (0.00s)
    --- PASS: TestVigenere/key=abcdefghij (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Encode(aaaaaaaaaa) (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Decode(abcdefghij) (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Encode(zzzzzzzzzz) (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Decode(zabcdefghi) (0.00s)
    --- PASS: TestVigenere/key=iamapandabear (0.00s)
        --- PASS: TestVigenere/key=iamapandabear/Encode(I_am_a_panda_bear.) (0.00s)
        --- PASS: TestVigenere/key=iamapandabear/Decode(qayaeaagaciai) (0.00s)
    --- PASS: TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu (0.00s)
        --- PASS: TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Encode(Diffie_Hellman) (0.00s)
        --- PASS: TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Decode(gccwkixcltycv) (0.00s)
    --- PASS: TestVigenere/key=qgbvno (0.00s)
        --- PASS: TestVigenere/key=qgbvno/Encode(cof-FEE,_123!) (0.00s)
        --- PASS: TestVigenere/key=qgbvno/Decode(sugars) (0.00s)
=== RUN   TestVigenereWrongKey
--- PASS: TestVigenereWrongKey (0.00s)
=== RUN   Example_normalizeText
--- PASS: Example_normalizeText (0.00s)
=== RUN   Example_fixKey
--- PASS: Example_fixKey (0.00s)
=== RUN   Example_ceasarCipher
--- PASS: Example_ceasarCipher (0.00s)
=== RUN   Example_shiftCipher
--- PASS: Example_shiftCipher (0.00s)
=== RUN   Example_vigenereCipher
--- PASS: Example_vigenereCipher (0.00s)
PASS
ok  	cipher	0.002s

real	0m0.137s
user	0m0.191s
sys	0m0.148s

===============================================================================

benchstat benchstat-old.txt benchstat-new.txt
benchstat-old.txt:5: missing iteration count
benchstat-old.txt:7: missing iteration count
benchstat-old.txt:9: missing iteration count
benchstat-old.txt:11: missing iteration count
benchstat-old.txt:13: missing iteration count
benchstat-old.txt:15: missing iteration count
benchstat-old.txt:17: missing iteration count
benchstat-old.txt:19: missing iteration count
benchstat-new.txt:5: missing iteration count
benchstat-new.txt:7: missing iteration count
benchstat-new.txt:9: missing iteration count
benchstat-new.txt:11: missing iteration count
benchstat-new.txt:13: missing iteration count
benchstat-new.txt:15: missing iteration count
benchstat-new.txt:17: missing iteration count
benchstat-new.txt:19: missing iteration count
goos: linux
goarch: amd64
pkg: cipher
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
               │ benchstat-old.txt │          benchstat-new.txt           │
               │      sec/op       │    sec/op     vs base                │
EncodeCaesar-8        9.154µ ± ∞ ¹   9.189µ ± ∞ ¹       ~ (p=1.000 n=1) ²
DecodeCaesar-8        547.1n ± ∞ ¹   560.3n ± ∞ ¹       ~ (p=1.000 n=1) ²
NewShift-8            20.51n ± ∞ ¹   20.04n ± ∞ ¹       ~ (p=1.000 n=1) ²
EncodeShift-8         18.42µ ± ∞ ¹   19.61µ ± ∞ ¹       ~ (p=1.000 n=1) ²
DecodeShift-8         1.345µ ± ∞ ¹   1.341µ ± ∞ ¹       ~ (p=1.000 n=1) ²
NewVigenere-8         22.23µ ± ∞ ¹   26.81µ ± ∞ ¹       ~ (p=1.000 n=1) ²
EncVigenere-8         7.620µ ± ∞ ¹   8.024µ ± ∞ ¹       ~ (p=1.000 n=1) ²
DecVigenere-8         499.6n ± ∞ ¹   511.6n ± ∞ ¹       ~ (p=1.000 n=1) ²
geomean               1.957µ         2.039µ        +4.17%
¹ need >= 6 samples for confidence interval at level 0.95
² need >= 4 samples to detect a difference at alpha level 0.05

               │ benchstat-old.txt │           benchstat-new.txt           │
               │       B/op        │     B/op       vs base                │
EncodeCaesar-8       5.386Ki ± ∞ ¹   5.384Ki ± ∞ ¹       ~ (p=1.000 n=1) ²
DecodeCaesar-8         184.0 ± ∞ ¹     184.0 ± ∞ ¹       ~ (p=1.000 n=1) ³
NewShift-8             0.000 ± ∞ ¹     0.000 ± ∞ ¹       ~ (p=1.000 n=1) ³
EncodeShift-8        9.467Ki ± ∞ ¹   9.472Ki ± ∞ ¹       ~ (p=1.000 n=1) ²
DecodeShift-8          504.0 ± ∞ ¹     504.0 ± ∞ ¹       ~ (p=1.000 n=1) ³
NewVigenere-8        23.21Ki ± ∞ ¹   23.21Ki ± ∞ ¹       ~ (p=1.000 n=1) ³
EncVigenere-8        5.248Ki ± ∞ ¹   5.246Ki ± ∞ ¹       ~ (p=1.000 n=1) ²
DecVigenere-8          160.0 ± ∞ ¹     160.0 ± ∞ ¹       ~ (p=1.000 n=1) ³
geomean                          ⁴                  -0.00%               ⁴
¹ need >= 6 samples for confidence interval at level 0.95
² need >= 4 samples to detect a difference at alpha level 0.05
³ all samples are equal
⁴ summaries must be >0 to compute geomean

               │ benchstat-old.txt │          benchstat-new.txt          │
               │     allocs/op     │  allocs/op   vs base                │
EncodeCaesar-8         104.0 ± ∞ ¹   104.0 ± ∞ ¹       ~ (p=1.000 n=1) ²
DecodeCaesar-8         12.00 ± ∞ ¹   12.00 ± ∞ ¹       ~ (p=1.000 n=1) ²
NewShift-8             0.000 ± ∞ ¹   0.000 ± ∞ ¹       ~ (p=1.000 n=1) ²
EncodeShift-8          185.0 ± ∞ ¹   185.0 ± ∞ ¹       ~ (p=1.000 n=1) ²
DecodeShift-8          25.00 ± ∞ ¹   25.00 ± ∞ ¹       ~ (p=1.000 n=1) ²
NewVigenere-8          345.0 ± ∞ ¹   345.0 ± ∞ ¹       ~ (p=1.000 n=1) ²
EncVigenere-8          103.0 ± ∞ ¹   103.0 ± ∞ ¹       ~ (p=1.000 n=1) ²
DecVigenere-8          13.00 ± ∞ ¹   13.00 ± ∞ ¹       ~ (p=1.000 n=1) ²
geomean                          ³                +0.00%               ³
¹ need >= 6 samples for confidence interval at level 0.95
² all samples are equal
³ summaries must be >0 to compute geomean

real	0m0.002s
user	0m0.001s
sys	0m0.001s

===============================================================================

gomarkdoc --output cipher-doc.md

real	0m0.010s
user	0m0.004s
sys	0m0.006s

===============================================================================

go doc -all cipher
package cipher // import "cipher"

Package cipher is comprised of multiple cipher implementations.

TYPES

type Cipher interface {
	Encode(string) string
	Decode(string) string
}
    The Cipher interface describes the Encode() and Decode() functions.

func NewCaesar() Cipher
    NewCaesar returns a Cipher.

func NewShift(distance int) Cipher
    NewShift returns a Cipher.

func NewVigenere(key string) Cipher
    NewVigenere returns a Cipher.


real	0m0.032s
user	0m0.023s
sys	0m0.028s


===============================================================================

