Running automated test file(s):

Go packages: cipher 


===============================================================================

golint ./...

real	0m0.107s
user	0m0.110s
sys	0m0.074s

===============================================================================

revive ./...

real	0m0.033s
user	0m0.034s
sys	0m0.016s

===============================================================================

ineffassign ./...

real	0m0.239s
user	0m0.276s
sys	0m0.253s

===============================================================================

go-consistent -v ./...
	info: check "./."

real	0m0.510s
user	0m0.587s
sys	0m0.487s

===============================================================================

staticcheck ./...

real	0m0.489s
user	0m0.648s
sys	0m0.442s

===============================================================================

gocritic check -enableAll ./...

real	0m2.467s
user	0m4.126s
sys	0m1.079s

===============================================================================

gotest -v -covermode=count -coverprofile coverage.out ./...
=== RUN   TestCaesar
=== RUN   TestCaesar/no_extra_symbols
=== RUN   TestCaesar/no_extra_symbols/Encode(iamapandabear)
=== RUN   TestCaesar/no_extra_symbols/Decode(ldpdsdqgdehdu)
=== RUN   TestCaesar/no_extra_symbols/Encode(programmingisawesome)
=== RUN   TestCaesar/no_extra_symbols/Decode(surjudpplqjlvdzhvrph)
=== RUN   TestCaesar/no_extra_symbols/Encode(todayisholiday)
=== RUN   TestCaesar/no_extra_symbols/Decode(wrgdblvkrolgdb)
=== RUN   TestCaesar/no_extra_symbols/Encode(venividivici)
=== RUN   TestCaesar/no_extra_symbols/Decode(yhqlylglylfl)
=== RUN   TestCaesar/with_extra_symbols
=== RUN   TestCaesar/with_extra_symbols/Encode(Go,_go,_gophers)
=== RUN   TestCaesar/with_extra_symbols/Decode(jrjrjrskhuv)
=== RUN   TestCaesar/with_extra_symbols/Encode(I_am_a_panda_bear.)
=== RUN   TestCaesar/with_extra_symbols/Decode(ldpdsdqgdehdu)
=== RUN   TestCaesar/with_extra_symbols/Encode(Programming_is_AWESOME!)
=== RUN   TestCaesar/with_extra_symbols/Decode(surjudpplqjlvdzhvrph)
=== RUN   TestCaesar/with_extra_symbols/Encode(today_is_holiday)
=== RUN   TestCaesar/with_extra_symbols/Decode(wrgdblvkrolgdb)
=== RUN   TestCaesar/with_extra_symbols/Encode(Twas_the_night_before_Christmas)
=== RUN   TestCaesar/with_extra_symbols/Decode(wzdvwkhqljkwehiruhfkulvwpdv)
=== RUN   TestCaesar/with_extra_symbols/Encode(_--_@#!)
=== RUN   TestCaesar/with_extra_symbols/Decode()
=== RUN   TestCaesar/with_extra_symbols/Encode()
=== RUN   TestCaesar/with_extra_symbols/Decode()#01
--- PASS: TestCaesar (0.01s)
    --- PASS: TestCaesar/no_extra_symbols (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(iamapandabear) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(ldpdsdqgdehdu) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(programmingisawesome) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(surjudpplqjlvdzhvrph) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(todayisholiday) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(wrgdblvkrolgdb) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(venividivici) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(yhqlylglylfl) (0.00s)
    --- PASS: TestCaesar/with_extra_symbols (0.01s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(Go,_go,_gophers) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(jrjrjrskhuv) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(I_am_a_panda_bear.) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(ldpdsdqgdehdu) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(Programming_is_AWESOME!) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(surjudpplqjlvdzhvrph) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(today_is_holiday) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(wrgdblvkrolgdb) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(Twas_the_night_before_Christmas) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(wzdvwkhqljkwehiruhfkulvwpdv) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(_--_@#!) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode() (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode() (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode()#01 (0.00s)
=== RUN   TestShift
=== RUN   TestShift/key=3
=== RUN   TestShift/key=3/Encode(Go,_go,_gophers)
=== RUN   TestShift/key=3/Decode(jrjrjrskhuv)
=== RUN   TestShift/key=3/Encode(I_am_a_panda_bear.)
=== RUN   TestShift/key=3/Decode(ldpdsdqgdehdu)
=== RUN   TestShift/key=3/Encode(Programming_is_AWESOME!)
=== RUN   TestShift/key=3/Decode(surjudpplqjlvdzhvrph)
=== RUN   TestShift/key=3/Encode(today_is_holiday)
=== RUN   TestShift/key=3/Decode(wrgdblvkrolgdb)
=== RUN   TestShift/key=3/Encode(Twas_the_night_before_Christmas)
=== RUN   TestShift/key=3/Decode(wzdvwkhqljkwehiruhfkulvwpdv)
=== RUN   TestShift/key=3/Encode(_--_@#!)
=== RUN   TestShift/key=3/Decode()
=== RUN   TestShift/key=3/Encode()
=== RUN   TestShift/key=3/Decode()#01
=== RUN   TestShift/key=-3
=== RUN   TestShift/key=-3/Encode(THE_ENEMY_IS_NEAR)
=== RUN   TestShift/key=-3/Decode(qebbkbjvfpkbxo)
=== RUN   TestShift/key=-3/Encode(SPIES_SEND_SECRET_MESSAGES)
=== RUN   TestShift/key=-3/Decode(pmfbppbkapbzobqjbppxdbp)
=== RUN   TestShift/key=-3/Encode(THOMAS_JEFFERSON_DESIGNED_A_SUBSTITUTION_CIPHER)
=== RUN   TestShift/key=-3/Decode(qeljxpgbccboplkabpfdkbaxprypqfqrqflkzfmebo)
=== RUN   TestShift/key=-3/Encode(the_quick_brown_fox_jumps_over_the_lazy_dog)
=== RUN   TestShift/key=-3/Decode(qebnrfzhyoltkclugrjmplsboqebixwvald)
--- PASS: TestShift (0.00s)
    --- PASS: TestShift/key=3 (0.00s)
        --- PASS: TestShift/key=3/Encode(Go,_go,_gophers) (0.00s)
        --- PASS: TestShift/key=3/Decode(jrjrjrskhuv) (0.00s)
        --- PASS: TestShift/key=3/Encode(I_am_a_panda_bear.) (0.00s)
        --- PASS: TestShift/key=3/Decode(ldpdsdqgdehdu) (0.00s)
        --- PASS: TestShift/key=3/Encode(Programming_is_AWESOME!) (0.00s)
        --- PASS: TestShift/key=3/Decode(surjudpplqjlvdzhvrph) (0.00s)
        --- PASS: TestShift/key=3/Encode(today_is_holiday) (0.00s)
        --- PASS: TestShift/key=3/Decode(wrgdblvkrolgdb) (0.00s)
        --- PASS: TestShift/key=3/Encode(Twas_the_night_before_Christmas) (0.00s)
        --- PASS: TestShift/key=3/Decode(wzdvwkhqljkwehiruhfkulvwpdv) (0.00s)
        --- PASS: TestShift/key=3/Encode(_--_@#!) (0.00s)
        --- PASS: TestShift/key=3/Decode() (0.00s)
        --- PASS: TestShift/key=3/Encode() (0.00s)
        --- PASS: TestShift/key=3/Decode()#01 (0.00s)
    --- PASS: TestShift/key=-3 (0.00s)
        --- PASS: TestShift/key=-3/Encode(THE_ENEMY_IS_NEAR) (0.00s)
        --- PASS: TestShift/key=-3/Decode(qebbkbjvfpkbxo) (0.00s)
        --- PASS: TestShift/key=-3/Encode(SPIES_SEND_SECRET_MESSAGES) (0.00s)
        --- PASS: TestShift/key=-3/Decode(pmfbppbkapbzobqjbppxdbp) (0.00s)
        --- PASS: TestShift/key=-3/Encode(THOMAS_JEFFERSON_DESIGNED_A_SUBSTITUTION_CIPHER) (0.00s)
        --- PASS: TestShift/key=-3/Decode(qeljxpgbccboplkabpfdkbaxprypqfqrqflkzfmebo) (0.00s)
        --- PASS: TestShift/key=-3/Encode(the_quick_brown_fox_jumps_over_the_lazy_dog) (0.00s)
        --- PASS: TestShift/key=-3/Decode(qebnrfzhyoltkclugrjmplsboqebixwvald) (0.00s)
=== RUN   TestWrongShiftKey
--- PASS: TestWrongShiftKey (0.00s)
=== RUN   TestVigenere
=== RUN   TestVigenere/key=lemon
=== RUN   TestVigenere/key=lemon/Encode(ATTACKATDAWN)
=== RUN   TestVigenere/key=lemon/Decode(lxfopvefrnhr)
=== RUN   TestVigenere/key=abcdefghij
=== RUN   TestVigenere/key=abcdefghij/Encode(aaaaaaaaaa)
=== RUN   TestVigenere/key=abcdefghij/Decode(abcdefghij)
=== RUN   TestVigenere/key=abcdefghij/Encode(zzzzzzzzzz)
=== RUN   TestVigenere/key=abcdefghij/Decode(zabcdefghi)
=== RUN   TestVigenere/key=iamapandabear
=== RUN   TestVigenere/key=iamapandabear/Encode(I_am_a_panda_bear.)
=== RUN   TestVigenere/key=iamapandabear/Decode(qayaeaagaciai)
=== RUN   TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu
=== RUN   TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Encode(Diffie_Hellman)
=== RUN   TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Decode(gccwkixcltycv)
=== RUN   TestVigenere/key=qgbvno
=== RUN   TestVigenere/key=qgbvno/Encode(cof-FEE,_123!)
=== RUN   TestVigenere/key=qgbvno/Decode(sugars)
--- PASS: TestVigenere (0.00s)
    --- PASS: TestVigenere/key=lemon (0.00s)
        --- PASS: TestVigenere/key=lemon/Encode(ATTACKATDAWN) (0.00s)
        --- PASS: TestVigenere/key=lemon/Decode(lxfopvefrnhr) (0.00s)
    --- PASS: TestVigenere/key=abcdefghij (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Encode(aaaaaaaaaa) (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Decode(abcdefghij) (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Encode(zzzzzzzzzz) (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Decode(zabcdefghi) (0.00s)
    --- PASS: TestVigenere/key=iamapandabear (0.00s)
        --- PASS: TestVigenere/key=iamapandabear/Encode(I_am_a_panda_bear.) (0.00s)
        --- PASS: TestVigenere/key=iamapandabear/Decode(qayaeaagaciai) (0.00s)
    --- PASS: TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu (0.00s)
        --- PASS: TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Encode(Diffie_Hellman) (0.00s)
        --- PASS: TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Decode(gccwkixcltycv) (0.00s)
    --- PASS: TestVigenere/key=qgbvno (0.00s)
        --- PASS: TestVigenere/key=qgbvno/Encode(cof-FEE,_123!) (0.00s)
        --- PASS: TestVigenere/key=qgbvno/Decode(sugars) (0.00s)
=== RUN   TestVigenereWrongKey
--- PASS: TestVigenereWrongKey (0.00s)
=== RUN   ExampleNormalizeText
--- PASS: ExampleNormalizeText (0.00s)
=== RUN   ExampleFixKey
--- PASS: ExampleFixKey (0.00s)
=== RUN   ExampleCeasarCipher
--- PASS: ExampleCeasarCipher (0.00s)
=== RUN   ExampleShiftCipher
--- PASS: ExampleShiftCipher (0.00s)
=== RUN   ExampleVigenereCipher
--- PASS: ExampleVigenereCipher (0.00s)
PASS
coverage: 92.1% of statements
ok  	cipher	0.040s	coverage: 92.1% of statements

real	0m0.828s
user	0m1.020s
sys	0m0.733s

===============================================================================

go tool cover -func=coverage.out
cipher/simple_cipher.go:18:	NewCaesar	100.0%
cipher/simple_cipher.go:27:	NewShift	100.0%
cipher/simple_cipher.go:40:	Encode		100.0%
cipher/simple_cipher.go:67:	Decode		100.0%
cipher/simple_cipher.go:94:	NewVigenere	87.5%
cipher/simple_cipher.go:131:	Encode		91.7%
cipher/simple_cipher.go:158:	Decode		91.7%
cipher/simple_cipher.go:184:	normalize	80.0%
cipher/simple_cipher.go:204:	fixKey		85.7%
total:				(statements)	92.1%

real	0m0.300s
user	0m0.223s
sys	0m0.349s

===============================================================================

go tool cover -html coverage.out -o coverage.html

real	0m0.167s
user	0m0.139s
sys	0m0.206s

===============================================================================

gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

 94     	func NewVigenere(key string) Cipher {
 95     		if key == "" {
 96     			return nil
 97     		}
 98     	
 99     		reStr := `^a+$`
100     		match, err := regexp.MatchString(reStr, key)
101     	
102     		if err != nil {
103 MISS			panic(err)
104     		}
105     	
106     		// a+ key not allowed
107     		if match {
108     			return nil
109     		}
110     	
111     		reStr = `^[a-z]+$`
112     		match, err = regexp.MatchString(reStr, key)
113     	
114     		if err != nil {
115 MISS			panic(err)
116     		}
117     	
118     		// key doesn't consist of just a-z letters
119     		if !match {
120     			return nil
121     		}
122     	
123     		cipher := vigenere{
124     			key: key,
125     		}
126     	
127     		return cipher
128     	}


204     	func fixKey(oldKey string, size int) string {
205     		if size <= 0 {
206 MISS			return ""
207     		}
208     	
209     		newKey := oldKey
210     	
211     		for len(newKey) < size {
212     			newKey += oldKey
213     		}
214     	
215     		newKey = newKey[:size]
216     	
217     		return newKey
218     	}


184     	func normalize(text string) string {
185     		if text == "" {
186 MISS			return ""
187     		}
188     	
189     		var output string
190     	
191     		reStr := `[[:^alpha:]]`
192     		re, err := regexp.Compile(reStr)
193     	
194     		if err != nil {
195 MISS			panic(err)
196     		}
197     	
198     		output = re.ReplaceAllString(text, "")
199     		output = strings.ToLower(output)
200     	
201     		return output
202     	}


158     	func (v vigenere) Decode(cipher string) string {
159     		if cipher == "" {
160 MISS			return ""
161     		}
162     	
163     		input := cipher
164     	
165     		key := fixKey(v.key, len(input))
166     	
167     		var plain strings.Builder
168     	
169     		for i, char := range key {
170     			offset := int(char) - 97
171     			target := int(input[i]) - offset
172     	
173     			// Chars below A need to roll back to top of the range.
174     			if target < 97 {
175     				target += 26
176     			}
177     	
178     			plain.WriteRune(rune(target))
179     		}
180     	
181     		return plain.String()
182     	}


131     	func (v vigenere) Encode(plain string) string {
132     		if plain == "" {
133 MISS			return ""
134     		}
135     	
136     		input := normalize(plain)
137     	
138     		key := fixKey(v.key, len(input))
139     	
140     		var cipher strings.Builder
141     	
142     		for i, char := range key {
143     			offset := int(char) - 97
144     			target := int(input[i]) + offset
145     	
146     			// Chars above Z need to roll back to bottom of the range.
147     			if target > 122 {
148     				target -= 26
149     			}
150     	
151     			cipher.WriteRune(rune(target))
152     		}
153     	
154     		return cipher.String()
155     	}


real	0m0.063s
user	0m0.038s
sys	0m0.066s

===============================================================================

gotest -v -race -covermode=atomic ./...
=== RUN   TestCaesar
=== RUN   TestCaesar/no_extra_symbols
=== RUN   TestCaesar/no_extra_symbols/Encode(iamapandabear)
=== RUN   TestCaesar/no_extra_symbols/Decode(ldpdsdqgdehdu)
=== RUN   TestCaesar/no_extra_symbols/Encode(programmingisawesome)
=== RUN   TestCaesar/no_extra_symbols/Decode(surjudpplqjlvdzhvrph)
=== RUN   TestCaesar/no_extra_symbols/Encode(todayisholiday)
=== RUN   TestCaesar/no_extra_symbols/Decode(wrgdblvkrolgdb)
=== RUN   TestCaesar/no_extra_symbols/Encode(venividivici)
=== RUN   TestCaesar/no_extra_symbols/Decode(yhqlylglylfl)
=== RUN   TestCaesar/with_extra_symbols
=== RUN   TestCaesar/with_extra_symbols/Encode(Go,_go,_gophers)
=== RUN   TestCaesar/with_extra_symbols/Decode(jrjrjrskhuv)
=== RUN   TestCaesar/with_extra_symbols/Encode(I_am_a_panda_bear.)
=== RUN   TestCaesar/with_extra_symbols/Decode(ldpdsdqgdehdu)
=== RUN   TestCaesar/with_extra_symbols/Encode(Programming_is_AWESOME!)
=== RUN   TestCaesar/with_extra_symbols/Decode(surjudpplqjlvdzhvrph)
=== RUN   TestCaesar/with_extra_symbols/Encode(today_is_holiday)
=== RUN   TestCaesar/with_extra_symbols/Decode(wrgdblvkrolgdb)
=== RUN   TestCaesar/with_extra_symbols/Encode(Twas_the_night_before_Christmas)
=== RUN   TestCaesar/with_extra_symbols/Decode(wzdvwkhqljkwehiruhfkulvwpdv)
=== RUN   TestCaesar/with_extra_symbols/Encode(_--_@#!)
=== RUN   TestCaesar/with_extra_symbols/Decode()
=== RUN   TestCaesar/with_extra_symbols/Encode()
=== RUN   TestCaesar/with_extra_symbols/Decode()#01
--- PASS: TestCaesar (0.01s)
    --- PASS: TestCaesar/no_extra_symbols (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(iamapandabear) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(ldpdsdqgdehdu) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(programmingisawesome) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(surjudpplqjlvdzhvrph) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(todayisholiday) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(wrgdblvkrolgdb) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Encode(venividivici) (0.00s)
        --- PASS: TestCaesar/no_extra_symbols/Decode(yhqlylglylfl) (0.00s)
    --- PASS: TestCaesar/with_extra_symbols (0.01s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(Go,_go,_gophers) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(jrjrjrskhuv) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(I_am_a_panda_bear.) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(ldpdsdqgdehdu) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(Programming_is_AWESOME!) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(surjudpplqjlvdzhvrph) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(today_is_holiday) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(wrgdblvkrolgdb) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(Twas_the_night_before_Christmas) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode(wzdvwkhqljkwehiruhfkulvwpdv) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode(_--_@#!) (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode() (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Encode() (0.00s)
        --- PASS: TestCaesar/with_extra_symbols/Decode()#01 (0.00s)
=== RUN   TestShift
=== RUN   TestShift/key=3
=== RUN   TestShift/key=3/Encode(Go,_go,_gophers)
=== RUN   TestShift/key=3/Decode(jrjrjrskhuv)
=== RUN   TestShift/key=3/Encode(I_am_a_panda_bear.)
=== RUN   TestShift/key=3/Decode(ldpdsdqgdehdu)
=== RUN   TestShift/key=3/Encode(Programming_is_AWESOME!)
=== RUN   TestShift/key=3/Decode(surjudpplqjlvdzhvrph)
=== RUN   TestShift/key=3/Encode(today_is_holiday)
=== RUN   TestShift/key=3/Decode(wrgdblvkrolgdb)
=== RUN   TestShift/key=3/Encode(Twas_the_night_before_Christmas)
=== RUN   TestShift/key=3/Decode(wzdvwkhqljkwehiruhfkulvwpdv)
=== RUN   TestShift/key=3/Encode(_--_@#!)
=== RUN   TestShift/key=3/Decode()
=== RUN   TestShift/key=3/Encode()
=== RUN   TestShift/key=3/Decode()#01
=== RUN   TestShift/key=-3
=== RUN   TestShift/key=-3/Encode(THE_ENEMY_IS_NEAR)
=== RUN   TestShift/key=-3/Decode(qebbkbjvfpkbxo)
=== RUN   TestShift/key=-3/Encode(SPIES_SEND_SECRET_MESSAGES)
=== RUN   TestShift/key=-3/Decode(pmfbppbkapbzobqjbppxdbp)
=== RUN   TestShift/key=-3/Encode(THOMAS_JEFFERSON_DESIGNED_A_SUBSTITUTION_CIPHER)
=== RUN   TestShift/key=-3/Decode(qeljxpgbccboplkabpfdkbaxprypqfqrqflkzfmebo)
=== RUN   TestShift/key=-3/Encode(the_quick_brown_fox_jumps_over_the_lazy_dog)
=== RUN   TestShift/key=-3/Decode(qebnrfzhyoltkclugrjmplsboqebixwvald)
--- PASS: TestShift (0.01s)
    --- PASS: TestShift/key=3 (0.01s)
        --- PASS: TestShift/key=3/Encode(Go,_go,_gophers) (0.00s)
        --- PASS: TestShift/key=3/Decode(jrjrjrskhuv) (0.00s)
        --- PASS: TestShift/key=3/Encode(I_am_a_panda_bear.) (0.00s)
        --- PASS: TestShift/key=3/Decode(ldpdsdqgdehdu) (0.00s)
        --- PASS: TestShift/key=3/Encode(Programming_is_AWESOME!) (0.00s)
        --- PASS: TestShift/key=3/Decode(surjudpplqjlvdzhvrph) (0.00s)
        --- PASS: TestShift/key=3/Encode(today_is_holiday) (0.00s)
        --- PASS: TestShift/key=3/Decode(wrgdblvkrolgdb) (0.00s)
        --- PASS: TestShift/key=3/Encode(Twas_the_night_before_Christmas) (0.00s)
        --- PASS: TestShift/key=3/Decode(wzdvwkhqljkwehiruhfkulvwpdv) (0.00s)
        --- PASS: TestShift/key=3/Encode(_--_@#!) (0.00s)
        --- PASS: TestShift/key=3/Decode() (0.00s)
        --- PASS: TestShift/key=3/Encode() (0.00s)
        --- PASS: TestShift/key=3/Decode()#01 (0.00s)
    --- PASS: TestShift/key=-3 (0.01s)
        --- PASS: TestShift/key=-3/Encode(THE_ENEMY_IS_NEAR) (0.00s)
        --- PASS: TestShift/key=-3/Decode(qebbkbjvfpkbxo) (0.00s)
        --- PASS: TestShift/key=-3/Encode(SPIES_SEND_SECRET_MESSAGES) (0.00s)
        --- PASS: TestShift/key=-3/Decode(pmfbppbkapbzobqjbppxdbp) (0.00s)
        --- PASS: TestShift/key=-3/Encode(THOMAS_JEFFERSON_DESIGNED_A_SUBSTITUTION_CIPHER) (0.01s)
        --- PASS: TestShift/key=-3/Decode(qeljxpgbccboplkabpfdkbaxprypqfqrqflkzfmebo) (0.00s)
        --- PASS: TestShift/key=-3/Encode(the_quick_brown_fox_jumps_over_the_lazy_dog) (0.00s)
        --- PASS: TestShift/key=-3/Decode(qebnrfzhyoltkclugrjmplsboqebixwvald) (0.00s)
=== RUN   TestWrongShiftKey
--- PASS: TestWrongShiftKey (0.00s)
=== RUN   TestVigenere
=== RUN   TestVigenere/key=lemon
=== RUN   TestVigenere/key=lemon/Encode(ATTACKATDAWN)
=== RUN   TestVigenere/key=lemon/Decode(lxfopvefrnhr)
=== RUN   TestVigenere/key=abcdefghij
=== RUN   TestVigenere/key=abcdefghij/Encode(aaaaaaaaaa)
=== RUN   TestVigenere/key=abcdefghij/Decode(abcdefghij)
=== RUN   TestVigenere/key=abcdefghij/Encode(zzzzzzzzzz)
=== RUN   TestVigenere/key=abcdefghij/Decode(zabcdefghi)
=== RUN   TestVigenere/key=iamapandabear
=== RUN   TestVigenere/key=iamapandabear/Encode(I_am_a_panda_bear.)
=== RUN   TestVigenere/key=iamapandabear/Decode(qayaeaagaciai)
=== RUN   TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu
=== RUN   TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Encode(Diffie_Hellman)
=== RUN   TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Decode(gccwkixcltycv)
=== RUN   TestVigenere/key=qgbvno
=== RUN   TestVigenere/key=qgbvno/Encode(cof-FEE,_123!)
=== RUN   TestVigenere/key=qgbvno/Decode(sugars)
--- PASS: TestVigenere (0.01s)
    --- PASS: TestVigenere/key=lemon (0.00s)
        --- PASS: TestVigenere/key=lemon/Encode(ATTACKATDAWN) (0.00s)
        --- PASS: TestVigenere/key=lemon/Decode(lxfopvefrnhr) (0.00s)
    --- PASS: TestVigenere/key=abcdefghij (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Encode(aaaaaaaaaa) (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Decode(abcdefghij) (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Encode(zzzzzzzzzz) (0.00s)
        --- PASS: TestVigenere/key=abcdefghij/Decode(zabcdefghi) (0.00s)
    --- PASS: TestVigenere/key=iamapandabear (0.00s)
        --- PASS: TestVigenere/key=iamapandabear/Encode(I_am_a_panda_bear.) (0.00s)
        --- PASS: TestVigenere/key=iamapandabear/Decode(qayaeaagaciai) (0.00s)
    --- PASS: TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu (0.00s)
        --- PASS: TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Encode(Diffie_Hellman) (0.00s)
        --- PASS: TestVigenere/key=duxrceqyaimciuucnelkeoxjhdyduu/Decode(gccwkixcltycv) (0.00s)
    --- PASS: TestVigenere/key=qgbvno (0.00s)
        --- PASS: TestVigenere/key=qgbvno/Encode(cof-FEE,_123!) (0.00s)
        --- PASS: TestVigenere/key=qgbvno/Decode(sugars) (0.00s)
=== RUN   TestVigenereWrongKey
--- PASS: TestVigenereWrongKey (0.00s)
=== RUN   ExampleNormalizeText
--- PASS: ExampleNormalizeText (0.00s)
=== RUN   ExampleFixKey
--- PASS: ExampleFixKey (0.00s)
=== RUN   ExampleCeasarCipher
--- PASS: ExampleCeasarCipher (0.00s)
=== RUN   ExampleShiftCipher
--- PASS: ExampleShiftCipher (0.00s)
=== RUN   ExampleVigenereCipher
--- PASS: ExampleVigenereCipher (0.00s)
PASS
coverage: 92.1% of statements
ok  	cipher	0.089s	coverage: 92.1% of statements

real	0m0.893s
user	0m0.954s
sys	0m0.611s

===============================================================================

go test --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: cipher
cpu: Intel(R) Core(TM) i7-7Y75 CPU @ 1.30GHz
BenchmarkEncodeCaesar-4   	   46074	     28353 ns/op	    5440 B/op	     104 allocs/op
BenchmarkDecodeCaesar-4   	 1000000	      1650 ns/op	     184 B/op	      12 allocs/op
BenchmarkNewShift-4       	42856383	        25.17 ns/op	       0 B/op	       0 allocs/op
BenchmarkEncodeShift-4    	   23102	     51998 ns/op	    9571 B/op	     185 allocs/op
BenchmarkDecodeShift-4    	  309681	      4083 ns/op	     504 B/op	      25 allocs/op
BenchmarkNewVigenere-4    	   13005	     82509 ns/op	   23604 B/op	     345 allocs/op
BenchmarkEncVigenere-4    	   45820	     26012 ns/op	    5298 B/op	     103 allocs/op
BenchmarkDecVigenere-4    	  994320	      1497 ns/op	     160 B/op	      13 allocs/op
PASS
ok  	cipher	13.694s

real	0m14.245s
user	0m21.001s
sys	0m1.933s

===============================================================================

go test -tags bonus
PASS
ok  	cipher	0.017s

real	0m0.495s
user	0m0.542s
sys	0m0.357s

===============================================================================

No old benchmarks to run benchstat against.

===============================================================================

go vet ./...
# cipher
./simple_cipher_examples_test.go:5:1: ExampleNormalizeText refers to unknown identifier: NormalizeText
./simple_cipher_examples_test.go:22:1: ExampleFixKey refers to unknown identifier: FixKey
./simple_cipher_examples_test.go:32:1: ExampleCeasarCipher refers to unknown identifier: CeasarCipher
./simple_cipher_examples_test.go:52:1: ExampleShiftCipher refers to unknown identifier: ShiftCipher
./simple_cipher_examples_test.go:72:1: ExampleVigenereCipher refers to unknown identifier: VigenereCipher

real	0m0.311s
user	0m0.326s
sys	0m0.310s

===============================================================================

go fix ./...

real	0m0.095s
user	0m0.068s
sys	0m0.093s

===============================================================================

gocyclo .
7 cipher BenchmarkDecVigenere simple_cipher_test.go:242:1
7 cipher BenchmarkEncVigenere simple_cipher_test.go:220:1
6 cipher NewVigenere simple_cipher.go:94:1
4 cipher BenchmarkNewVigenere simple_cipher_test.go:209:1
4 cipher BenchmarkDecodeShift simple_cipher_test.go:194:1
4 cipher BenchmarkEncodeShift simple_cipher_test.go:179:1
4 cipher BenchmarkNewShift simple_cipher_test.go:168:1
4 cipher BenchmarkDecodeCaesar simple_cipher_test.go:155:1
4 cipher BenchmarkEncodeCaesar simple_cipher_test.go:142:1
4 cipher testCipher simple_cipher_test.go:42:1
4 cipher (vigenere).Decode simple_cipher.go:158:1
4 cipher (vigenere).Encode simple_cipher.go:131:1
4 cipher (shift).Decode simple_cipher.go:67:1
4 cipher (shift).Encode simple_cipher.go:40:1
4 cipher NewShift simple_cipher.go:27:1
3 cipher TestVigenereWrongKey simple_cipher_test.go:132:1
3 cipher TestVigenere simple_cipher_test.go:119:1
3 cipher TestWrongShiftKey simple_cipher_test.go:91:1
3 cipher TestShift simple_cipher_test.go:70:1
3 cipher fixKey simple_cipher.go:204:1
3 cipher normalize simple_cipher.go:184:1
2 cipher ExampleVigenereCipher simple_cipher_examples_test.go:72:1
2 cipher ExampleShiftCipher simple_cipher_examples_test.go:52:1
2 cipher ExampleCeasarCipher simple_cipher_examples_test.go:32:1
2 cipher ExampleNormalizeText simple_cipher_examples_test.go:5:1
1 cipher TestCaesar simple_cipher_test.go:32:1
1 cipher ExampleFixKey simple_cipher_examples_test.go:22:1
1 cipher NewCaesar simple_cipher.go:18:1

real	0m0.012s
user	0m0.005s
sys	0m0.009s

===============================================================================

misspell .

real	0m0.080s
user	0m0.080s
sys	0m0.040s

===============================================================================

gosec ./...
[gosec] 2022/08/20 18:45:39 Including rules: default
[gosec] 2022/08/20 18:45:39 Excluding rules: default
[gosec] 2022/08/20 18:45:39 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/simple-cipher
2022/08/20 18:45:39 internal error: package "regexp" without types was imported from "command-line-arguments"

real	0m0.479s
user	0m0.530s
sys	0m0.527s

===============================================================================

gomarkdoc --output cipher-doc.md

real	0m0.079s
user	0m0.089s
sys	0m0.031s

===============================================================================

go doc -all cipher
package cipher // import "cipher"

Package cipher is comprised of multiple cipher implementations.

TYPES

type Cipher interface {
	Encode(string) string
	Decode(string) string
}
    The Cipher interface describes the Encode() and Decode() functions.

func NewCaesar() Cipher
    NewCaesar returns a Cipher.

func NewShift(distance int) Cipher
    NewShift returns a Cipher.

func NewVigenere(key string) Cipher
    NewVigenere returns a Cipher.


real	0m0.191s
user	0m0.083s
sys	0m0.194s


===============================================================================

