Running automated test file(s):

Go packages: isogram 


===============================================================================

golint isogram

real	0m0.314s
user	0m0.353s
sys	0m0.358s

===============================================================================

go test -v -covermode=count -coverprofile coverage.out isogram
=== RUN   TestIsIsogram
=== RUN   TestIsIsogram/empty_string
=== RUN   TestIsIsogram/isogram_with_only_lower_case_characters
=== RUN   TestIsIsogram/word_with_one_duplicated_character
=== RUN   TestIsIsogram/word_with_one_duplicated_character_from_the_end_of_the_alphabet
=== RUN   TestIsIsogram/longest_reported_english_isogram
=== RUN   TestIsIsogram/word_with_duplicated_character_in_mixed_case
=== RUN   TestIsIsogram/word_with_duplicated_character_in_mixed_case,_lowercase_first
=== RUN   TestIsIsogram/hypothetical_isogrammic_word_with_hyphen
=== RUN   TestIsIsogram/hypothetical_word_with_duplicated_character_following_hyphen
=== RUN   TestIsIsogram/isogram_with_duplicated_hyphen
=== RUN   TestIsIsogram/made-up_name_that_is_an_isogram
=== RUN   TestIsIsogram/duplicated_character_in_the_middle
=== RUN   TestIsIsogram/same_first_and_last_characters
=== RUN   TestIsIsogram/word_with_duplicated_character_and_with_two_hyphens
--- PASS: TestIsIsogram (0.00s)
    --- PASS: TestIsIsogram/empty_string (0.00s)
    --- PASS: TestIsIsogram/isogram_with_only_lower_case_characters (0.00s)
    --- PASS: TestIsIsogram/word_with_one_duplicated_character (0.00s)
    --- PASS: TestIsIsogram/word_with_one_duplicated_character_from_the_end_of_the_alphabet (0.00s)
    --- PASS: TestIsIsogram/longest_reported_english_isogram (0.00s)
    --- PASS: TestIsIsogram/word_with_duplicated_character_in_mixed_case (0.00s)
    --- PASS: TestIsIsogram/word_with_duplicated_character_in_mixed_case,_lowercase_first (0.00s)
    --- PASS: TestIsIsogram/hypothetical_isogrammic_word_with_hyphen (0.00s)
    --- PASS: TestIsIsogram/hypothetical_word_with_duplicated_character_following_hyphen (0.00s)
    --- PASS: TestIsIsogram/isogram_with_duplicated_hyphen (0.00s)
    --- PASS: TestIsIsogram/made-up_name_that_is_an_isogram (0.00s)
    --- PASS: TestIsIsogram/duplicated_character_in_the_middle (0.00s)
    --- PASS: TestIsIsogram/same_first_and_last_characters (0.00s)
    --- PASS: TestIsIsogram/word_with_duplicated_character_and_with_two_hyphens (0.00s)
=== RUN   ExampleIsIsogram
--- PASS: ExampleIsIsogram (0.00s)
PASS
coverage: 93.3% of statements
ok  	isogram	0.010s	coverage: 93.3% of statements

real	0m1.120s
user	0m1.309s
sys	0m0.897s

===============================================================================

go tool cover -func=coverage.out
isogram/isogram.go:11:	IsIsogram	93.3%
total:			(statements)	93.3%

real	0m0.348s
user	0m0.436s
sys	0m0.314s

===============================================================================

go tool cover -html coverage.out -o coverage.html

real	0m0.499s
user	0m0.509s
sys	0m0.395s

===============================================================================

go test -v -race -covermode=atomic isogram
=== RUN   TestIsIsogram
=== RUN   TestIsIsogram/empty_string
=== RUN   TestIsIsogram/isogram_with_only_lower_case_characters
=== RUN   TestIsIsogram/word_with_one_duplicated_character
=== RUN   TestIsIsogram/word_with_one_duplicated_character_from_the_end_of_the_alphabet
=== RUN   TestIsIsogram/longest_reported_english_isogram
=== RUN   TestIsIsogram/word_with_duplicated_character_in_mixed_case
=== RUN   TestIsIsogram/word_with_duplicated_character_in_mixed_case,_lowercase_first
=== RUN   TestIsIsogram/hypothetical_isogrammic_word_with_hyphen
=== RUN   TestIsIsogram/hypothetical_word_with_duplicated_character_following_hyphen
=== RUN   TestIsIsogram/isogram_with_duplicated_hyphen
=== RUN   TestIsIsogram/made-up_name_that_is_an_isogram
=== RUN   TestIsIsogram/duplicated_character_in_the_middle
=== RUN   TestIsIsogram/same_first_and_last_characters
=== RUN   TestIsIsogram/word_with_duplicated_character_and_with_two_hyphens
--- PASS: TestIsIsogram (0.03s)
    --- PASS: TestIsIsogram/empty_string (0.00s)
    --- PASS: TestIsIsogram/isogram_with_only_lower_case_characters (0.00s)
    --- PASS: TestIsIsogram/word_with_one_duplicated_character (0.00s)
    --- PASS: TestIsIsogram/word_with_one_duplicated_character_from_the_end_of_the_alphabet (0.00s)
    --- PASS: TestIsIsogram/longest_reported_english_isogram (0.00s)
    --- PASS: TestIsIsogram/word_with_duplicated_character_in_mixed_case (0.00s)
    --- PASS: TestIsIsogram/word_with_duplicated_character_in_mixed_case,_lowercase_first (0.00s)
    --- PASS: TestIsIsogram/hypothetical_isogrammic_word_with_hyphen (0.00s)
    --- PASS: TestIsIsogram/hypothetical_word_with_duplicated_character_following_hyphen (0.00s)
    --- PASS: TestIsIsogram/isogram_with_duplicated_hyphen (0.00s)
    --- PASS: TestIsIsogram/made-up_name_that_is_an_isogram (0.00s)
    --- PASS: TestIsIsogram/duplicated_character_in_the_middle (0.00s)
    --- PASS: TestIsIsogram/same_first_and_last_characters (0.00s)
    --- PASS: TestIsIsogram/word_with_duplicated_character_and_with_two_hyphens (0.00s)
=== RUN   ExampleIsIsogram
--- PASS: ExampleIsIsogram (0.01s)
PASS
coverage: 93.3% of statements
ok  	isogram	0.094s	coverage: 93.3% of statements

real	0m1.551s
user	0m1.476s
sys	0m1.019s

===============================================================================

go test --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: isogram
cpu: Intel(R) Core(TM) i7-7Y75 CPU @ 1.30GHz
BenchmarkIsIsogram-4   	   13100	     76355 ns/op	   11375 B/op	     190 allocs/op
PASS
ok  	isogram	1.984s

real	0m2.859s
user	0m3.916s
sys	0m0.990s

===============================================================================

go test -tags bonus
PASS
ok  	isogram	0.005s

real	0m1.191s
user	0m1.161s
sys	0m0.626s

===============================================================================

No old benchmarks to run benchstat against.

===============================================================================

go vet isogram

real	0m0.596s
user	0m0.754s
sys	0m0.570s

===============================================================================

go fix isogram

real	0m0.217s
user	0m0.238s
sys	0m0.193s

===============================================================================

gosec ./isogram
[gosec] 2022/07/27 12:27:07 Including rules: default
[gosec] 2022/07/27 12:27:07 Excluding rules: default
[gosec] 2022/07/27 12:27:07 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/isogram
2022/07/27 12:27:08 internal error: package "regexp" without types was imported from "command-line-arguments"

real	0m0.595s
user	0m0.630s
sys	0m0.427s

===============================================================================

gomarkdoc --output isogram-doc.md

real	0m0.045s
user	0m0.032s
sys	0m0.024s

===============================================================================

go doc -all isogram
package isogram // import "isogram"

Package isogram Determines if a word or phrase is an isogram.

FUNCTIONS

func IsIsogram(word string) bool
    IsIsogram returns true when a word is an isogram. An isogram (also known as
    a "non-pattern word") is a word or phrase without a repeating letter,
    however spaces and hyphens are allowed to appear multiple times.


real	0m0.421s
user	0m0.287s
sys	0m0.313s


===============================================================================

