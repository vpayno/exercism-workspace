Running automated test file(s):

Go packages: weather 


===============================================================================

Running: ../../.github/citools/go/go-lint-golangci-lint

Running GoLangCi-Lint

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.016s
user	0m0.007s
sys	0m0.014s


 ==============================================================================

Running: golangci-lint run --enable-all ./...

level=warning msg="[runner] The linter 'varcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'golint' is deprecated (since v1.41.0) due to: The repository of the linter has been archived by the owner. Replaced by revive."
level=warning msg="[runner] The linter 'deadcode' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'interfacer' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. "
level=warning msg="[runner] The linter 'structcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'scopelint' is deprecated (since v1.39.0) due to: The repository of the linter has been deprecated by the owner. Replaced by exportloopref."
level=warning msg="[runner] The linter 'ifshort' is deprecated (since v1.48.0) due to: The repository of the linter has been deprecated by the owner. "
level=warning msg="[runner] The linter 'maligned' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. Replaced by govet 'fieldalignment'."
level=warning msg="[runner] The linter 'nosnakecase' is deprecated (since v1.48.1) due to: The repository of the linter has been deprecated by the owner. Replaced by revive(var-naming)."
level=warning msg="[runner] The linter 'exhaustivestruct' is deprecated (since v1.46.0) due to: The owner seems to have abandoned the linter. Replaced by exhaustruct."
weather_forecast_test.go:58: File is not `gofumpt`-ed (gofumpt)
	}
weather_forecast_test.go:60: File is not `gofumpt`-ed (gofumpt)
}
weather_forecast_test.go:91: File is not `gofumpt`-ed (gofumpt)

weather_forecast_test.go:59: unnecessary trailing newline (whitespace)

}
weather_forecast_test.go:109: unnecessary leading newline (whitespace)
func testComment(entityKind, entityName, comment, wantedPrefix string) (ok bool, errString string) {

weather_forecast_test.go:17:2: only one cuddle assignment allowed before if statement (wsl)
	if err != nil {
	^
weather_forecast_test.go:23:2: only one cuddle assignment allowed before if statement (wsl)
	if got != wantedComments {
	^
weather_forecast_test.go:48:2: if statements should only be cuddled with assignments (wsl)
	if node.Doc == nil {
	^
weather_forecast_test.go:92:1: block should not end with a whitespace (or comment) (wsl)
}
^
weather_forecast_test.go:96:2: assignments should only be cuddled with other assignments (wsl)
	funcName := node.Name.Name
	^
weather_forecast_test.go:97:2: only one cuddle assignment allowed before if statement (wsl)
	if node.Doc == nil {
	^
weather_forecast_test.go:130:3: return statements should not be cuddled if block has more than two lines (wsl)
		return false, errorString
		^
weather_forecast_test.go:34:36: type assertion must be checked (forcetypeassert)
					testBlockIdentifierComment(t, v.(*ast.ValueSpec))
					                              ^
weather_forecast_test.go:64:2: type assertion must be checked (forcetypeassert)
	identifierName := node.Specs[0].(*ast.ValueSpec).Names[0].Name
	^
weather_forecast.go:5:5: CurrentCondition is a global variable (gochecknoglobals)
var CurrentCondition string
    ^
weather_forecast.go:8:5: CurrentLocation is a global variable (gochecknoglobals)
var CurrentLocation string
    ^
weather_forecast_test.go:21:2: variable 'wantedComments' is only used in the if-statement (weather_forecast_test.go:23:2); consider using short syntax (ifshort)
	wantedComments := 4
	^
weather_forecast_test.go:22:2: variable 'got' is only used in the if-statement (weather_forecast_test.go:23:2); consider using short syntax (ifshort)
	got := len(f.Comments)
	^
weather_forecast.go:13:2: return with no blank line before (nlreturn)
	return CurrentLocation + " - current weather condition: " + CurrentCondition
	^
weather_forecast_test.go:42:3: return with no blank line before (nlreturn)
		return true
		^
weather_forecast_test.go:118:3: return with no blank line before (nlreturn)
		return false, errorString
		^
weather_forecast_test.go:12:1: Function TestComments missing the call to method parallel (paralleltest)
func TestComments(t *testing.T) {
^
weather_forecast_examples_test.go:1:9: package should be `weather_test` instead of `weather` (testpackage)
package weather
        ^
weather_forecast_test.go:1:9: package should be `weather_test` instead of `weather` (testpackage)
package weather
        ^
weather_forecast_test.go:30:10: variable name 'n' is too short for the scope of its usage (varnamelen)
		switch n := node.(type) {
		       ^
weather_forecast_test.go:16:2: variable name 'f' is too short for the scope of its usage (varnamelen)
	f, err := parser.ParseFile(fs, filename, nil, parser.ParseComments)
	^

real	0m0.841s
user	0m1.382s
sys	0m0.679s


 ==============================================================================

Exit code: -1

real	0m0.871s
user	0m1.396s
sys	0m0.703s

real	0m0.873s
user	0m1.397s
sys	0m0.705s

===============================================================================

Running: ../../.github/citools/go/go-lint-revive

Running Go Lint Revive

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.011s
user	0m0.002s
sys	0m0.012s


 ==============================================================================

Running: revive -formatter=stylish ./...


real	0m0.107s
user	0m0.044s
sys	0m0.072s


 ==============================================================================

Exit code: 0

real	0m0.128s
user	0m0.053s
sys	0m0.091s

real	0m0.130s
user	0m0.055s
sys	0m0.092s

===============================================================================

Running: ../../.github/citools/go/go-lint-ineffassign
../run-tests: line 41: .github/citools/go/go-lint-ineffassign: No such file or directory

real	0m0.001s
user	0m0.001s
sys	0m0.000s

===============================================================================

Running: ../../.github/citools/go/go-lint-go-consistent

Running Go go-consistent

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.020s
user	0m0.008s
sys	0m0.017s


 ==============================================================================

Running: go-consistent -v ./...

	info: check "./."
internal error: package "fmt" without types was imported from "weather [weather.test]"

real	0m0.096s
user	0m0.122s
sys	0m0.114s


 ==============================================================================

Exit code: -1

real	0m0.131s
user	0m0.133s
sys	0m0.148s

real	0m0.133s
user	0m0.134s
sys	0m0.149s

===============================================================================

Running: ../../.github/citools/go/go-lint-staticcheck

Running Go StaticCheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.015s
user	0m0.003s
sys	0m0.017s


 ==============================================================================

Running: staticcheck -checks=all ./...


real	0m0.163s
user	0m0.187s
sys	0m0.120s


 ==============================================================================

Exit code: 0

real	0m0.191s
user	0m0.197s
sys	0m0.147s

real	0m0.194s
user	0m0.197s
sys	0m0.149s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocritic

Running Go gocritic

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.012s
user	0m0.009s
sys	0m0.006s


 ==============================================================================

Running: gocritic check -enableAll ./...


real	0m0.841s
user	0m2.049s
sys	0m0.286s


 ==============================================================================

Exit code: 0

real	0m0.864s
user	0m2.065s
sys	0m0.302s

real	0m0.866s
user	0m2.065s
sys	0m0.302s

===============================================================================

Running: ../../.github/citools/go/go-lint-go_vet

Running Go Vet

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.015s
user	0m0.004s
sys	0m0.015s


 ==============================================================================

Running: go vet ./...


real	0m0.150s
user	0m0.222s
sys	0m0.142s


 ==============================================================================

Exit code: 0

real	0m0.175s
user	0m0.230s
sys	0m0.166s

real	0m0.177s
user	0m0.231s
sys	0m0.167s

===============================================================================

Running: ../../.github/citools/go/go-fixer-go_fix

Running go fix

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.017s
user	0m0.005s
sys	0m0.015s


 ==============================================================================

Running: go fix ./...


real	0m0.020s
user	0m0.009s
sys	0m0.016s


 ==============================================================================

Exit code: 0

real	0m0.051s
user	0m0.023s
sys	0m0.041s

real	0m0.053s
user	0m0.025s
sys	0m0.041s

===============================================================================

Running: ../../.github/citools/go/go-lint-errcheck

Running Go errcheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.013s
user	0m0.008s
sys	0m0.008s


 ==============================================================================

Running: errcheck ./...


real	0m0.452s
user	0m1.271s
sys	0m0.253s


 ==============================================================================

Exit code: 0

real	0m0.476s
user	0m1.284s
sys	0m0.272s

real	0m0.478s
user	0m1.284s
sys	0m0.274s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocyclo

Running Go gocyclo

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.018s
user	0m0.007s
sys	0m0.015s


 ==============================================================================

Running: gocyclo .

7 weather TestComments weather_forecast_test.go:12:1
4 weather testComment weather_forecast_test.go:109:1
3 weather testFunctionComment weather_forecast_test.go:94:1
3 weather testBlockIdentifierComment weather_forecast_test.go:77:1
3 weather testIdentifierComment weather_forecast_test.go:61:1
3 weather testPackageComment weather_forecast_test.go:46:1
1 weather ExampleForecast weather_forecast_examples_test.go:7:1
1 weather Forecast weather_forecast.go:11:1

real	0m0.004s
user	0m0.001s
sys	0m0.003s


 ==============================================================================

Exit code: 0

real	0m0.033s
user	0m0.016s
sys	0m0.025s

real	0m0.036s
user	0m0.017s
sys	0m0.026s

===============================================================================

Running: ../../.github/citools/go/go-lint-misspell

Running Go misspell

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: misspell .


real	0m0.028s
user	0m0.029s
sys	0m0.018s


 ==============================================================================

Exit code: 0

real	0m0.044s
user	0m0.037s
sys	0m0.034s

real	0m0.046s
user	0m0.039s
sys	0m0.034s

===============================================================================

Running: ../../.github/citools/go/go-lint-gosec

Running Go GoSec

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.020s
user	0m0.011s
sys	0m0.015s


 ==============================================================================

Running: gosec ./...

[gosec] 2023/09/07 00:32:14 Including rules: default
[gosec] 2023/09/07 00:32:14 Excluding rules: default
[gosec] 2023/09/07 00:32:14 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/weather-forecast
[gosec] 2023/09/07 00:32:14 Checking package: weather
[gosec] 2023/09/07 00:32:14 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/weather-forecast/weather_forecast.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 1
  Lines  : 14
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.077s
user	0m0.064s
sys	0m0.045s


 ==============================================================================

Exit code: 0

real	0m0.115s
user	0m0.088s
sys	0m0.072s

real	0m0.117s
user	0m0.090s
sys	0m0.073s

===============================================================================

Running: ../../.github/citools/go/go-test-cover-report

Running Go Test, Coverage & Reports

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.012s
user	0m0.006s
sys	0m0.009s


 ==============================================================================

Running: gotest -v -covermode=count -coverprofile coverage.out ./...

=== RUN   TestComments
--- PASS: TestComments (0.00s)
=== RUN   ExampleForecast
--- PASS: ExampleForecast (0.00s)
PASS
coverage: 100.0% of statements
ok  	weather	0.003s	coverage: 100.0% of statements

real	0m0.187s
user	0m0.366s
sys	0m0.167s


 ==============================================================================

Running: go tool cover -func=coverage.out

weather/weather_forecast.go:11:	Forecast	100.0%
total:				(statements)	100.0%

real	0m0.022s
user	0m0.015s
sys	0m0.011s


 ==============================================================================

Running: go tool cover -html coverage.out -o coverage.html


real	0m0.022s
user	0m0.010s
sys	0m0.017s


 ==============================================================================

Running: cover_annotate

Running: gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

real	0m0.011s
user	0m0.003s
sys	0m0.012s

real	0m0.011s
user	0m0.003s
sys	0m0.012s


 ==============================================================================

Running: gotest -v -race -covermode=atomic ./...

=== RUN   TestComments
--- PASS: TestComments (0.00s)
=== RUN   ExampleForecast
--- PASS: ExampleForecast (0.00s)
PASS
coverage: 100.0% of statements
ok  	weather	1.018s	coverage: 100.0% of statements

real	0m1.281s
user	0m0.423s
sys	0m0.227s


 ==============================================================================

Exit code: 0

real	0m1.547s
user	0m0.833s
sys	0m0.452s

real	0m1.549s
user	0m0.833s
sys	0m0.454s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

gotest -v --run=xxx --bench . --benchmem |& tee benchstat-new.txt
PASS
ok  	weather	0.002s

real	0m0.158s
user	0m0.182s
sys	0m0.138s

===============================================================================

gotest -v -tags bonus
=== RUN   TestComments
--- PASS: TestComments (0.00s)
=== RUN   ExampleForecast
--- PASS: ExampleForecast (0.00s)
PASS
ok  	weather	0.003s

real	0m0.128s
user	0m0.181s
sys	0m0.111s

===============================================================================

benchstat benchstat-old.txt benchstat-new.txt

real	0m0.002s
user	0m0.000s
sys	0m0.002s

===============================================================================

gomarkdoc --output weather-doc.md

real	0m0.013s
user	0m0.007s
sys	0m0.006s

===============================================================================

go doc -all weather
package weather // import "weather"

Package weather is a library for forcasting weather conditions in various cities
in Goblinocus.

VARIABLES

var CurrentCondition string
    CurrentCondition stores the current weather conditions for a city.

var CurrentLocation string
    CurrentLocation stores the current city we're forcasting for.


FUNCTIONS

func Forecast(city, condition string) string
    Forecast returns a string with the weather conditions for a city.


real	0m0.036s
user	0m0.021s
sys	0m0.023s


===============================================================================

