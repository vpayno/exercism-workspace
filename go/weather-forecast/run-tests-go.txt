Running automated test file(s):

Go packages: weather 


===============================================================================

golint weather

real	0m0.116s
user	0m0.067s
sys	0m0.080s

===============================================================================

go test -v -covermode=count -coverprofile coverage.out weather
=== RUN   TestComments
--- PASS: TestComments (0.00s)
=== RUN   ExampleForecast
--- PASS: ExampleForecast (0.00s)
PASS
coverage: 100.0% of statements
ok  	weather	0.029s	coverage: 100.0% of statements

real	0m0.638s
user	0m0.785s
sys	0m0.516s

===============================================================================

go tool cover -func=coverage.out
weather/weather_forecast.go:11:	Forecast	100.0%
total:				(statements)	100.0%

real	0m0.083s
user	0m0.049s
sys	0m0.083s

===============================================================================

go test -v -race -covermode=atomic weather
=== RUN   TestComments
--- PASS: TestComments (0.00s)
=== RUN   ExampleForecast
--- PASS: ExampleForecast (0.00s)
PASS
coverage: 100.0% of statements
ok  	weather	0.033s	coverage: 100.0% of statements

real	0m0.726s
user	0m0.817s
sys	0m0.485s

===============================================================================

go test --bench . --benchmem
PASS
ok  	weather	0.026s

real	0m0.643s
user	0m0.698s
sys	0m0.454s

===============================================================================

go test -tags bonus
PASS
ok  	weather	0.004s

real	0m0.537s
user	0m0.575s
sys	0m0.388s

===============================================================================

go vet weather

real	0m0.384s
user	0m0.404s
sys	0m0.442s

===============================================================================

go fix weather

real	0m0.049s
user	0m0.023s
sys	0m0.037s

===============================================================================

gosec ./weather-forecast
[gosec] 2022/06/20 22:44:32 Including rules: default
[gosec] 2022/06/20 22:44:32 Excluding rules: default
[gosec] 2022/06/20 22:44:32 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/weather-forecast
[gosec] 2022/06/20 22:44:32 Checking package: weather
[gosec] 2022/06/20 22:44:32 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/weather-forecast/weather_forecast.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 1
  Lines  : 14
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.297s
user	0m0.279s
sys	0m0.209s

===============================================================================

gomarkdoc --output weather-doc.md

real	0m0.030s
user	0m0.016s
sys	0m0.023s

===============================================================================

go doc -all weather
package weather // import "weather"

Package weather is a library for forcasting weather conditions in various
cities in Goblinocus.

VARIABLES

var CurrentCondition string
    CurrentCondition stores the current weather conditions for a city.

var CurrentLocation string
    CurrentLocation stores the current city we're forcasting for.


FUNCTIONS

func Forecast(city, condition string) string
    Forecast returns a string with the weather conditions for a city.


real	0m0.139s
user	0m0.064s
sys	0m0.140s


===============================================================================

