Running automated test file(s):

Go packages: prime 


===============================================================================

golint prime

real	0m0.166s
user	0m0.111s
sys	0m0.142s

===============================================================================

go test -v -covermode=count -coverprofile coverage.out prime
=== RUN   TestNth
=== RUN   TestNth/first_prime
=== RUN   TestNth/second_prime
=== RUN   TestNth/sixth_prime
=== RUN   TestNth/big_prime
=== RUN   TestNth/there_is_no_zeroth_prime
--- PASS: TestNth (0.07s)
    --- PASS: TestNth/first_prime (0.00s)
    --- PASS: TestNth/second_prime (0.00s)
    --- PASS: TestNth/sixth_prime (0.00s)
    --- PASS: TestNth/big_prime (0.07s)
    --- PASS: TestNth/there_is_no_zeroth_prime (0.00s)
=== RUN   ExampleNth
--- PASS: ExampleNth (0.00s)
PASS
coverage: 100.0% of statements
ok  	prime	0.087s	coverage: 100.0% of statements

real	0m0.662s
user	0m0.774s
sys	0m0.445s

===============================================================================

go tool cover -func=coverage.out
prime/nth_prime.go:11:	Nth			100.0%
prime/nth_prime.go:35:	findPrimeWithSieve	100.0%
total:			(statements)		100.0%

real	0m0.197s
user	0m0.206s
sys	0m0.150s

===============================================================================

go tool cover -html coverage.out -o coverage.html

real	0m0.161s
user	0m0.135s
sys	0m0.161s

===============================================================================

go test -v -race -covermode=atomic prime
=== RUN   TestNth
=== RUN   TestNth/first_prime
=== RUN   TestNth/second_prime
=== RUN   TestNth/sixth_prime
=== RUN   TestNth/big_prime
=== RUN   TestNth/there_is_no_zeroth_prime
--- PASS: TestNth (0.33s)
    --- PASS: TestNth/first_prime (0.00s)
    --- PASS: TestNth/second_prime (0.00s)
    --- PASS: TestNth/sixth_prime (0.00s)
    --- PASS: TestNth/big_prime (0.33s)
    --- PASS: TestNth/there_is_no_zeroth_prime (0.00s)
=== RUN   ExampleNth
--- PASS: ExampleNth (0.00s)
PASS
coverage: 100.0% of statements
ok  	prime	0.368s	coverage: 100.0% of statements

real	0m1.010s
user	0m1.061s
sys	0m0.522s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

go test --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: prime
cpu: Intel(R) Core(TM) i7-7Y75 CPU @ 1.30GHz
BenchmarkNth-4   	      15	  99131219 ns/op	 7228028 B/op	    4761 allocs/op
PASS
ok  	prime	1.606s

real	0m2.119s
user	0m2.645s
sys	0m0.576s

===============================================================================

go test -tags bonus
PASS
ok  	prime	0.203s

real	0m1.725s
user	0m1.885s
sys	0m1.271s

===============================================================================

go install golang.org/x/perf/cmd/benchstat@latest

real	0m1.394s
user	0m1.416s
sys	0m0.747s

benchstat benchstat-old.txt benchstat-new.txt
name   old time/op    new time/op    delta
Nth-4     101ms ± 0%      99ms ± 0%   ~     (p=1.000 n=1+1)

name   old alloc/op   new alloc/op   delta
Nth-4    7.24MB ± 0%    7.23MB ± 0%   ~     (p=1.000 n=1+1)

name   old allocs/op  new allocs/op  delta
Nth-4     4.78k ± 0%     4.76k ± 0%   ~     (p=1.000 n=1+1)

real	0m0.023s
user	0m0.004s
sys	0m0.018s

===============================================================================

go vet prime

real	0m1.045s
user	0m1.105s
sys	0m0.768s

===============================================================================

go fix prime

real	0m0.239s
user	0m0.197s
sys	0m0.212s

===============================================================================

gosec ./nth-prime
[gosec] 2022/07/26 07:27:45 Including rules: default
[gosec] 2022/07/26 07:27:45 Excluding rules: default
[gosec] 2022/07/26 07:27:45 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/nth-prime
2022/07/26 07:27:46 internal error: package "errors" without types was imported from "command-line-arguments"

real	0m0.791s
user	0m0.867s
sys	0m0.618s

===============================================================================

gomarkdoc --output prime-doc.md

real	0m0.138s
user	0m0.079s
sys	0m0.050s

===============================================================================

go doc -all prime
package prime // import "prime"

Package prime determines the nth prime.

FUNCTIONS

func Nth(input int) (int, error)
    Nth returns the nth prime number. An error must be returned if the nth prime
    number can't be calculated ('n' is equal or less than zero)


real	0m0.374s
user	0m0.282s
sys	0m0.297s


===============================================================================

