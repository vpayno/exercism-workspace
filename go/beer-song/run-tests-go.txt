Running automated test file(s):

Go packages: beer 


===============================================================================

Running: ../../.github/citools/go/go-lint-golangci-lint

Running GoLangCi-Lint

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.027s
user	0m0.025s
sys	0m0.030s


 ==============================================================================

Running: golangci-lint run --enable-all ./...

level=warning msg="[runner] The linter 'golint' is deprecated (since v1.41.0) due to: The repository of the linter has been archived by the owner. Replaced by revive."
level=warning msg="[runner] The linter 'scopelint' is deprecated (since v1.39.0) due to: The repository of the linter has been deprecated by the owner. Replaced by exportloopref."
level=warning msg="[runner] The linter 'maligned' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. Replaced by govet 'fieldalignment'."
level=warning msg="[runner] The linter 'deadcode' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'exhaustivestruct' is deprecated (since v1.46.0) due to: The owner seems to have abandoned the linter. Replaced by exhaustruct."
level=warning msg="[runner] The linter 'ifshort' is deprecated (since v1.48.0) due to: The repository of the linter has been deprecated by the owner. "
level=warning msg="[runner] The linter 'interfacer' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. "
level=warning msg="[runner] The linter 'nosnakecase' is deprecated (since v1.48.1) due to: The repository of the linter has been deprecated by the owner. Replaced by revive(var-naming)."
level=warning msg="[runner] The linter 'structcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'varcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
beer_song_test.go:119:10: Error return value is not checked (errcheck)
			Verses(tt.upperBound, tt.lowerBound)
			      ^
beer_song_test.go:7: File is not `gofumpt`-ed (gofumpt)
const verse8 = "8 bottles of beer on the wall, 8 bottles of beer.\nTake one down and pass it around, 7 bottles of beer on the wall.\n"
const verse3 = "3 bottles of beer on the wall, 3 bottles of beer.\nTake one down and pass it around, 2 bottles of beer on the wall.\n"
const verse2 = "2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n"
const verse1 = "1 bottle of beer on the wall, 1 bottle of beer.\nTake it down and pass it around, no more bottles of beer on the wall.\n"
const verse0 = "No more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\n"
beer_song_test.go:88: File is not `gofumpt`-ed (gofumpt)

beer_song_test.go:117: File is not `gofumpt`-ed (gofumpt)

beer_song_test.go:8: line is 134 characters (lll)
const verse3 = "3 bottles of beer on the wall, 3 bottles of beer.\nTake one down and pass it around, 2 bottles of beer on the wall.\n"
beer_song_test.go:9: line is 133 characters (lll)
const verse2 = "2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n"
beer_song_test.go:10: line is 137 characters (lll)
const verse1 = "1 bottle of beer on the wall, 1 bottle of beer.\nTake it down and pass it around, no more bottles of beer on the wall.\n"
beer_song_test.go:11: line is 148 characters (lll)
const verse0 = "No more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\n"
beer_song.go:51:10: var-declaration: should omit type string from declaration of var fs1; it will be inferred from the right-hand side (revive)
	var fs1 string = "%[1]d bottle%[2]s of beer on the wall, %[1]d bottle%[2]s of beer.\n"
	        ^
beer_song.go:52:10: var-declaration: should omit type string from declaration of var fs2; it will be inferred from the right-hand side (revive)
	var fs2 string = "Take %[3]s down and pass it around, %[1]v bottle%[2]s of beer on the wall.\n"
	        ^
beer_song.go:53:16: var-declaration: should omit type string from declaration of var countWord; it will be inferred from the right-hand side (revive)
	var countWord string = "one"
	              ^
beer_song_test.go:87: unnecessary leading newline (whitespace)
func TestSeveralVerses(t *testing.T) {

beer_song_test.go:116: unnecessary leading newline (whitespace)
	for i := 0; i < b.N; i++ {

beer_song.go:54:2: declarations should never be cuddled (wsl)
	var plural string
	^
beer_song_test.go:52:3: if statements should only be cuddled with assignments used in the if statement itself (wsl)
		if tt.expectErr {
		^
beer_song_test.go:91:3: if statements should only be cuddled with assignments used in the if statement itself (wsl)
		if tt.expectErr {
		^
beer_song_test.go:122:2: block should not end with a whitespace (or comment) (wsl)
	}
	^
beer_song_test.go:127:2: declarations should never be cuddled (wsl)
	var _ error = err
	^
beer_song_test.go:128:2: only one cuddle assignment allowed before if statement (wsl)
	if err != nil {
	^
beer_song_test.go:131:2: assignments should only be cuddled with other assignments (wsl)
	actual := Song()
	^
beer_song_test.go:153:2: for statements should only be cuddled with assignments used in the iteration (wsl)
	for i := 0; i < b.N; i++ {
	^
beer_song_test.go:35:5: verseTestCases is a global variable (gochecknoglobals)
var verseTestCases = []struct {
    ^
beer_song_test.go:73:5: versesTestCases is a global variable (gochecknoglobals)
var versesTestCases = []struct {
    ^
beer_song.go:25:14: err113: do not define dynamic errors, use wrapped static errors instead: "fmt.Errorf(\n\t\"starting verse, %d, needs to be greater than or equal to the ending verse, %d\",\n\tstart,\n\tstop,\n)" (goerr113)
		return "", fmt.Errorf(
		           ^
beer_song.go:57:14: err113: do not define dynamic errors, use wrapped static errors instead: "errors.New(\"you can't have a negative amount of beer bottles\")" (goerr113)
		return "", errors.New("you can't have a negative amount of beer bottles")
		           ^
beer_song.go:61:14: err113: do not define dynamic errors, use wrapped static errors instead: "errors.New(\"you can't have more than 99 beer bottles\")" (goerr113)
		return "", errors.New("you can't have more than 99 beer bottles")
		           ^
beer_song.go:11:22: mnd: Magic number: 99, in <argument> detected (gomnd)
	lyrics, e := Verses(99, 0)
	                    ^
beer_song.go:60:17: mnd: Magic number: 99, in <condition> detected (gomnd)
	if beerCount > 99 {
	               ^
beer_song_test.go:49:1: Function TestBottlesVerse missing the call to method parallel (paralleltest)
func TestBottlesVerse(t *testing.T) {
^
beer_song_test.go:125:1: Function TestEntireSong missing the call to method parallel (paralleltest)
func TestEntireSong(t *testing.T) {
^
beer_song_examples_test.go:1:9: package should be `beer_test` instead of `beer` (testpackage)
package beer
        ^
beer_song_test.go:1:9: package should be `beer_test` instead of `beer` (testpackage)
package beer
        ^
beer_song_test.go:89:6: variable name 'tt' is too short for the scope of its usage (varnamelen)
	for _, tt := range versesTestCases {
	    ^
beer_song_test.go:50:6: variable name 'tt' is too short for the scope of its usage (varnamelen)
	for _, tt := range verseTestCases {
	    ^

real	0m0.481s
user	0m0.699s
sys	0m0.446s


 ==============================================================================

Exit code: -1

real	0m0.520s
user	0m0.730s
sys	0m0.485s

real	0m0.521s
user	0m0.731s
sys	0m0.486s

===============================================================================

Running: ../../.github/citools/go/go-lint-revive

Running Go Lint Revive

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.022s
user	0m0.016s
sys	0m0.029s


 ==============================================================================

Running: revive -formatter=stylish ./...

beer_song.go
  (51, 10)  https://revive.run/r#var-declaration  should omit type string from declaration of var fs1; it will be inferred from the right-hand side        
  (52, 10)  https://revive.run/r#var-declaration  should omit type string from declaration of var fs2; it will be inferred from the right-hand side        
  (53, 16)  https://revive.run/r#var-declaration  should omit type string from declaration of var countWord; it will be inferred from the right-hand side  


 âœ– 3 problems (0 errors) (3 warnings)

real	0m0.058s
user	0m0.025s
sys	0m0.047s


 ==============================================================================

Exit code: 0

real	0m0.091s
user	0m0.052s
sys	0m0.080s

real	0m0.093s
user	0m0.053s
sys	0m0.081s

===============================================================================

Running: ../../.github/citools/go/go-lint-ineffassign
../run-tests: line 41: .github/citools/go/go-lint-ineffassign: No such file or directory

real	0m0.001s
user	0m0.000s
sys	0m0.001s

===============================================================================

Running: ../../.github/citools/go/go-lint-go-consistent

Running Go go-consistent

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.050s
user	0m0.060s
sys	0m0.035s


 ==============================================================================

Running: go-consistent -v ./...

	info: check "./."
internal error: package "errors" without types was imported from "beer"

real	0m0.087s
user	0m0.118s
sys	0m0.101s


 ==============================================================================

Exit code: -1

real	0m0.148s
user	0m0.183s
sys	0m0.145s

real	0m0.149s
user	0m0.184s
sys	0m0.145s

===============================================================================

Running: ../../.github/citools/go/go-lint-staticcheck

Running Go StaticCheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.030s
user	0m0.029s
sys	0m0.022s


 ==============================================================================

Running: staticcheck -checks=all ./...

beer_song.go:51:10: should omit type string from declaration; it will be inferred from the right-hand side (ST1023)
beer_song.go:52:10: should omit type string from declaration; it will be inferred from the right-hand side (ST1023)
beer_song.go:53:16: should omit type string from declaration; it will be inferred from the right-hand side (ST1023)

real	0m0.160s
user	0m0.216s
sys	0m0.126s


 ==============================================================================

Exit code: -1

real	0m0.202s
user	0m0.255s
sys	0m0.156s

real	0m0.204s
user	0m0.255s
sys	0m0.157s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocritic

Running Go gocritic

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.022s
user	0m0.024s
sys	0m0.020s


 ==============================================================================

Running: gocritic check -enableAll ./...


real	0m0.799s
user	0m1.917s
sys	0m0.275s


 ==============================================================================

Exit code: 0

real	0m0.831s
user	0m1.945s
sys	0m0.305s

real	0m0.832s
user	0m1.945s
sys	0m0.307s

===============================================================================

Running: ../../.github/citools/go/go-lint-go_vet

Running Go Vet

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.021s
user	0m0.023s
sys	0m0.016s


 ==============================================================================

Running: go vet ./...


real	0m0.083s
user	0m0.136s
sys	0m0.094s


 ==============================================================================

Exit code: 0

real	0m0.124s
user	0m0.167s
sys	0m0.130s

real	0m0.126s
user	0m0.168s
sys	0m0.131s

===============================================================================

Running: ../../.github/citools/go/go-fixer-go_fix

Running go fix

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.031s
user	0m0.027s
sys	0m0.036s


 ==============================================================================

Running: go fix ./...


real	0m0.025s
user	0m0.019s
sys	0m0.025s


 ==============================================================================

Exit code: 0

real	0m0.069s
user	0m0.051s
sys	0m0.073s

real	0m0.071s
user	0m0.053s
sys	0m0.074s

===============================================================================

Running: ../../.github/citools/go/go-lint-errcheck

Running Go errcheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.025s
user	0m0.022s
sys	0m0.027s


 ==============================================================================

Running: errcheck ./...

beer_song_test.go:119:10:	Verses(tt.upperBound, tt.lowerBound)

real	0m0.444s
user	0m1.309s
sys	0m0.303s


 ==============================================================================

Exit code: -1

real	0m0.482s
user	0m1.336s
sys	0m0.341s

real	0m0.484s
user	0m1.337s
sys	0m0.342s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocyclo

Running Go gocyclo

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.029s
user	0m0.045s
sys	0m0.022s


 ==============================================================================

Running: gocyclo .

8 beer Verse beer_song.go:50:1
6 beer TestSeveralVerses beer_song_test.go:87:1
6 beer TestBottlesVerse beer_song_test.go:49:1
5 beer Verses beer_song.go:21:1
4 beer BenchmarkSeveralVerses beer_song_test.go:112:1
3 beer BenchmarkEntireSong beer_song_test.go:149:1
3 beer TestEntireSong beer_song_test.go:125:1
2 beer Song beer_song.go:10:1
1 beer ExampleVerses beer_song_examples_test.go:27:1
1 beer ExampleVerse beer_song_examples_test.go:7:1

real	0m0.003s
user	0m0.001s
sys	0m0.002s


 ==============================================================================

Exit code: 0

real	0m0.042s
user	0m0.053s
sys	0m0.031s

real	0m0.044s
user	0m0.054s
sys	0m0.032s

===============================================================================

Running: ../../.github/citools/go/go-lint-misspell

Running Go misspell

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: misspell .


real	0m0.028s
user	0m0.037s
sys	0m0.012s


 ==============================================================================

Exit code: 0

real	0m0.042s
user	0m0.042s
sys	0m0.026s

real	0m0.045s
user	0m0.044s
sys	0m0.028s

===============================================================================

Running: ../../.github/citools/go/go-lint-gosec

Running Go GoSec

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.031s
user	0m0.036s
sys	0m0.031s


 ==============================================================================

Running: gosec ./...

[gosec] 2023/09/07 00:20:48 Including rules: default
[gosec] 2023/09/07 00:20:48 Excluding rules: default
[gosec] 2023/09/07 00:20:48 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/beer-song
[gosec] 2023/09/07 00:20:48 Checking package: beer
[gosec] 2023/09/07 00:20:48 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/beer-song/beer_song.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 1
  Lines  : 96
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.118s
user	0m0.125s
sys	0m0.088s


 ==============================================================================

Exit code: 0

real	0m0.164s
user	0m0.168s
sys	0m0.133s

real	0m0.165s
user	0m0.170s
sys	0m0.133s

===============================================================================

Running: ../../.github/citools/go/go-test-cover-report

Running Go Test, Coverage & Reports

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.041s
user	0m0.044s
sys	0m0.041s


 ==============================================================================

Running: gotest -v -covermode=count -coverprofile coverage.out ./...

=== RUN   TestBottlesVerse
--- PASS: TestBottlesVerse (0.00s)
=== RUN   TestSeveralVerses
--- PASS: TestSeveralVerses (0.00s)
=== RUN   TestEntireSong
--- PASS: TestEntireSong (0.00s)
=== RUN   ExampleVerse
--- PASS: ExampleVerse (0.00s)
=== RUN   ExampleVerses
--- PASS: ExampleVerses (0.00s)
PASS
coverage: 97.6% of statements
ok  	beer	0.003s	coverage: 97.6% of statements

real	0m0.179s
user	0m0.242s
sys	0m0.152s


 ==============================================================================

Running: go tool cover -func=coverage.out

beer/beer_song.go:10:	Song		75.0%
beer/beer_song.go:21:	Verses		100.0%
beer/beer_song.go:50:	Verse		100.0%
total:			(statements)	97.6%

real	0m0.055s
user	0m0.080s
sys	0m0.088s


 ==============================================================================

Running: go tool cover -html coverage.out -o coverage.html


real	0m0.063s
user	0m0.065s
sys	0m0.059s


 ==============================================================================

Running: cover_annotate

Running: gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

10     	func Song() string {
11     		lyrics, e := Verses(99, 0)
12     	
13     		if e != nil {
14 MISS			panic(e)
15     		}
16     	
17     		return lyrics
18     	}


real	0m0.019s
user	0m0.019s
sys	0m0.025s

real	0m0.020s
user	0m0.019s
sys	0m0.025s


 ==============================================================================

Running: gotest -v -race -covermode=atomic ./...

=== RUN   TestBottlesVerse
--- PASS: TestBottlesVerse (0.00s)
=== RUN   TestSeveralVerses
--- PASS: TestSeveralVerses (0.00s)
=== RUN   TestEntireSong
--- PASS: TestEntireSong (0.00s)
=== RUN   ExampleVerse
--- PASS: ExampleVerse (0.00s)
=== RUN   ExampleVerses
--- PASS: ExampleVerses (0.00s)
PASS
coverage: 97.6% of statements
ok  	beer	1.022s	coverage: 97.6% of statements

real	0m1.236s
user	0m0.280s
sys	0m0.141s


 ==============================================================================

Exit code: 0

real	0m1.612s
user	0m0.739s
sys	0m0.524s

real	0m1.614s
user	0m0.740s
sys	0m0.525s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

gotest -v --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: beer
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
BenchmarkSeveralVerses
BenchmarkSeveralVerses-8   	    3944	    285156 ns/op	 1312498 B/op	    1038 allocs/op
BenchmarkEntireSong
BenchmarkEntireSong-8      	    6330	    192521 ns/op	  665309 B/op	     880 allocs/op
PASS
ok  	beer	3.079s

real	0m3.228s
user	0m3.625s
sys	0m0.762s

===============================================================================

gotest -v -tags bonus
=== RUN   TestBottlesVerse
--- PASS: TestBottlesVerse (0.00s)
=== RUN   TestSeveralVerses
--- PASS: TestSeveralVerses (0.00s)
=== RUN   TestEntireSong
--- PASS: TestEntireSong (0.00s)
=== RUN   ExampleVerse
--- PASS: ExampleVerse (0.00s)
=== RUN   ExampleVerses
--- PASS: ExampleVerses (0.00s)
PASS
ok  	beer	0.004s

real	0m0.158s
user	0m0.194s
sys	0m0.196s

===============================================================================

benchstat benchstat-old.txt benchstat-new.txt
benchstat-old.txt:5: missing iteration count
benchstat-old.txt:7: missing iteration count
benchstat-new.txt:5: missing iteration count
benchstat-new.txt:7: missing iteration count
goos: linux
goarch: amd64
pkg: beer
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
                â”‚ benchstat-old.txt â”‚          benchstat-new.txt           â”‚
                â”‚      sec/op       â”‚    sec/op     vs base                â”‚
SeveralVerses-8        323.3Âµ Â± âˆž Â¹   285.2Âµ Â± âˆž Â¹       ~ (p=1.000 n=1) Â²
EntireSong-8           195.6Âµ Â± âˆž Â¹   192.5Âµ Â± âˆž Â¹       ~ (p=1.000 n=1) Â²
geomean                251.5Âµ         234.3Âµ        -6.82%
Â¹ need >= 6 samples for confidence interval at level 0.95
Â² need >= 4 samples to detect a difference at alpha level 0.05

                â”‚ benchstat-old.txt â”‚           benchstat-new.txt           â”‚
                â”‚       B/op        â”‚     B/op       vs base                â”‚
SeveralVerses-8       1.252Mi Â± âˆž Â¹   1.252Mi Â± âˆž Â¹       ~ (p=1.000 n=1) Â²
EntireSong-8          649.7Ki Â± âˆž Â¹   649.7Ki Â± âˆž Â¹       ~ (p=1.000 n=1) Â²
geomean               912.5Ki         912.6Ki        +0.00%
Â¹ need >= 6 samples for confidence interval at level 0.95
Â² need >= 4 samples to detect a difference at alpha level 0.05

                â”‚ benchstat-old.txt â”‚          benchstat-new.txt           â”‚
                â”‚     allocs/op     â”‚  allocs/op    vs base                â”‚
SeveralVerses-8        1.037k Â± âˆž Â¹   1.038k Â± âˆž Â¹       ~ (p=1.000 n=1) Â²
EntireSong-8            880.0 Â± âˆž Â¹    880.0 Â± âˆž Â¹       ~ (p=1.000 n=1) Â³
geomean                 955.3          955.7        +0.05%
Â¹ need >= 6 samples for confidence interval at level 0.95
Â² need >= 4 samples to detect a difference at alpha level 0.05
Â³ all samples are equal

real	0m0.002s
user	0m0.002s
sys	0m0.001s

===============================================================================

gomarkdoc --output beer-doc.md

real	0m0.009s
user	0m0.004s
sys	0m0.005s

===============================================================================

go doc -all beer
package beer // import "beer"

Package beer generates the lrics to the 99 Bootles of Beer on the Wall.

FUNCTIONS

func Song() string
    Song returns the whole 99 Bottles of Beer on the Wall song.

func Verse(beerCount int) (string, error)
    Verse returns a single verse from 99 Bottles of Beer on the Wall song.

func Verses(start, stop int) (string, error)
    Verses returns select verselyricss 99 Bottles of Beer on the Wall song.


real	0m0.036s
user	0m0.020s
sys	0m0.041s


===============================================================================

