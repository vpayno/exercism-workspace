#!/bin/bash

if [[ ! -d .exercism ]]; then
	printf "ERROR: Run from inside a project directory.\n\n"
	exit 1
fi

declare package_name
declare project_dir

get_go_package_name() {
	awk '/^package / { print $NF }' ./*.go | head -n 1
} # get_go_package_name()

package_name="$(get_go_package_name)"
project_dir="$(basename "${PWD}")"

if ! grep -q ./"${project_dir}"/README.md ../README.md; then

	cat >>../README.md <<EOF
- [${project_dir}](./${project_dir}/README.md)
EOF

fi

if ! grep -q ./"${package_name}"-doc.md ./README.md; then

	# Two empty spaces because the file is missing a trailing new line.
	cat >>./README.md <<EOF


### My Solution

- [my solution](./$(printf "%s\n" *[.]go | grep -v "test[.]go"))
- [my examples](./$(printf "%s\n" *[.]go | grep "_examples_test[.]go"))
EOF

	if [[ -f cases_test.go ]]; then
		cat >>./README.md <<EOF
- [test cases](./$(printf "%s\n" *[.]go | grep "cases_test[.]go"))
EOF
	fi

	cat >>./README.md <<EOF
- [tests](./$(printf "%s\n" *[.]go | grep "_test[.]go" | grep -v -e "cases_" -e "_examples_test[.]go"))
- [run-tests](./run-tests-go.txt)
- [coverage](./coverage.html)
- [documentation](./${package_name}-doc.md)
EOF

fi

printf "\n"
git add ../README.md ./README.md
git diff --cached ../README.md ./README.md
