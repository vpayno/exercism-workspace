Running automated test file(s):

Go packages: markdown 


===============================================================================

golint ./...

real	0m0.195s
user	0m0.100s
sys	0m0.077s

===============================================================================

revive ./...

real	0m0.046s
user	0m0.014s
sys	0m0.020s

===============================================================================

ineffassign ./...

real	0m0.317s
user	0m0.319s
sys	0m0.319s

===============================================================================

go-consistent -v ./...
	info: check "./."

real	0m0.417s
user	0m0.406s
sys	0m0.353s

===============================================================================

staticcheck ./...

real	0m0.386s
user	0m0.306s
sys	0m0.445s

===============================================================================

gocritic check -enableAll ./...
./markdown.go:31:4: ifElseChain: rewrite if-else to switch statement

real	0m2.466s
user	0m3.850s
sys	0m1.242s

===============================================================================

gotest -v -covermode=count -coverprofile coverage.out ./...
=== RUN   TestMarkdown
=== RUN   TestMarkdown/parses_normal_text_as_a_paragraph
=== RUN   TestMarkdown/parsing_italics
=== RUN   TestMarkdown/parsing_bold_text
=== RUN   TestMarkdown/mixed_normal,_italics_and_bold_text
=== RUN   TestMarkdown/with_h1_header_level
=== RUN   TestMarkdown/with_h2_header_level
=== RUN   TestMarkdown/with_h3_header_level
=== RUN   TestMarkdown/with_h4_header_level
=== RUN   TestMarkdown/with_h5_header_level
=== RUN   TestMarkdown/with_h6_header_level
=== RUN   TestMarkdown/h7_header_level_is_a_paragraph
=== RUN   TestMarkdown/unordered_lists
=== RUN   TestMarkdown/With_a_little_bit_of_everything
=== RUN   TestMarkdown/with_markdown_symbols_in_the_header_text_that_should_not_be_interpreted
=== RUN   TestMarkdown/with_markdown_symbols_in_the_list_item_text_that_should_not_be_interpreted
=== RUN   TestMarkdown/with_markdown_symbols_in_the_paragraph_text_that_should_not_be_interpreted
=== RUN   TestMarkdown/unordered_lists_close_properly_with_preceding_and_following_lines
--- PASS: TestMarkdown (0.00s)
    --- PASS: TestMarkdown/parses_normal_text_as_a_paragraph (0.00s)
    --- PASS: TestMarkdown/parsing_italics (0.00s)
    --- PASS: TestMarkdown/parsing_bold_text (0.00s)
    --- PASS: TestMarkdown/mixed_normal,_italics_and_bold_text (0.00s)
    --- PASS: TestMarkdown/with_h1_header_level (0.00s)
    --- PASS: TestMarkdown/with_h2_header_level (0.00s)
    --- PASS: TestMarkdown/with_h3_header_level (0.00s)
    --- PASS: TestMarkdown/with_h4_header_level (0.00s)
    --- PASS: TestMarkdown/with_h5_header_level (0.00s)
    --- PASS: TestMarkdown/with_h6_header_level (0.00s)
    --- PASS: TestMarkdown/h7_header_level_is_a_paragraph (0.00s)
    --- PASS: TestMarkdown/unordered_lists (0.00s)
    --- PASS: TestMarkdown/With_a_little_bit_of_everything (0.00s)
    --- PASS: TestMarkdown/with_markdown_symbols_in_the_header_text_that_should_not_be_interpreted (0.00s)
    --- PASS: TestMarkdown/with_markdown_symbols_in_the_list_item_text_that_should_not_be_interpreted (0.00s)
    --- PASS: TestMarkdown/with_markdown_symbols_in_the_paragraph_text_that_should_not_be_interpreted (0.00s)
    --- PASS: TestMarkdown/unordered_lists_close_properly_with_preceding_and_following_lines (0.00s)
=== RUN   ExampleRender
--- PASS: ExampleRender (0.00s)
PASS
coverage: 100.0% of statements
ok  	markdown	0.013s	coverage: 100.0% of statements

real	0m0.742s
user	0m0.682s
sys	0m0.628s

===============================================================================

go tool cover -func=coverage.out
markdown/markdown.go:12:	Render		100.0%
total:				(statements)	100.0%

real	0m0.242s
user	0m0.275s
sys	0m0.263s

===============================================================================

go tool cover -html coverage.out -o coverage.html

real	0m0.325s
user	0m0.274s
sys	0m0.343s

===============================================================================

gocov convert coverage.out | gocov annotate -ceiling=100 -color - | tee coverage-annotations.txt

real	0m0.096s
user	0m0.080s
sys	0m0.116s

===============================================================================

gotest -v -race -covermode=atomic ./...
=== RUN   TestMarkdown
=== RUN   TestMarkdown/parses_normal_text_as_a_paragraph
=== RUN   TestMarkdown/parsing_italics
=== RUN   TestMarkdown/parsing_bold_text
=== RUN   TestMarkdown/mixed_normal,_italics_and_bold_text
=== RUN   TestMarkdown/with_h1_header_level
=== RUN   TestMarkdown/with_h2_header_level
=== RUN   TestMarkdown/with_h3_header_level
=== RUN   TestMarkdown/with_h4_header_level
=== RUN   TestMarkdown/with_h5_header_level
=== RUN   TestMarkdown/with_h6_header_level
=== RUN   TestMarkdown/h7_header_level_is_a_paragraph
=== RUN   TestMarkdown/unordered_lists
=== RUN   TestMarkdown/With_a_little_bit_of_everything
=== RUN   TestMarkdown/with_markdown_symbols_in_the_header_text_that_should_not_be_interpreted
=== RUN   TestMarkdown/with_markdown_symbols_in_the_list_item_text_that_should_not_be_interpreted
=== RUN   TestMarkdown/with_markdown_symbols_in_the_paragraph_text_that_should_not_be_interpreted
=== RUN   TestMarkdown/unordered_lists_close_properly_with_preceding_and_following_lines
--- PASS: TestMarkdown (0.00s)
    --- PASS: TestMarkdown/parses_normal_text_as_a_paragraph (0.00s)
    --- PASS: TestMarkdown/parsing_italics (0.00s)
    --- PASS: TestMarkdown/parsing_bold_text (0.00s)
    --- PASS: TestMarkdown/mixed_normal,_italics_and_bold_text (0.00s)
    --- PASS: TestMarkdown/with_h1_header_level (0.00s)
    --- PASS: TestMarkdown/with_h2_header_level (0.00s)
    --- PASS: TestMarkdown/with_h3_header_level (0.00s)
    --- PASS: TestMarkdown/with_h4_header_level (0.00s)
    --- PASS: TestMarkdown/with_h5_header_level (0.00s)
    --- PASS: TestMarkdown/with_h6_header_level (0.00s)
    --- PASS: TestMarkdown/h7_header_level_is_a_paragraph (0.00s)
    --- PASS: TestMarkdown/unordered_lists (0.00s)
    --- PASS: TestMarkdown/With_a_little_bit_of_everything (0.00s)
    --- PASS: TestMarkdown/with_markdown_symbols_in_the_header_text_that_should_not_be_interpreted (0.00s)
    --- PASS: TestMarkdown/with_markdown_symbols_in_the_list_item_text_that_should_not_be_interpreted (0.00s)
    --- PASS: TestMarkdown/with_markdown_symbols_in_the_paragraph_text_that_should_not_be_interpreted (0.00s)
    --- PASS: TestMarkdown/unordered_lists_close_properly_with_preceding_and_following_lines (0.00s)
=== RUN   ExampleRender
--- PASS: ExampleRender (0.00s)
PASS
coverage: 100.0% of statements
ok  	markdown	0.039s	coverage: 100.0% of statements

real	0m1.079s
user	0m0.884s
sys	0m0.684s

===============================================================================

go test --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: markdown
cpu: Intel(R) Core(TM) i7-7Y75 CPU @ 1.30GHz
BenchmarkMarkdown-4   	   14973	     90357 ns/op	   18388 B/op	    1042 allocs/op
PASS
ok  	markdown	2.235s

real	0m2.849s
user	0m4.093s
sys	0m0.758s

===============================================================================

go test -tags bonus
PASS
ok  	markdown	0.019s

real	0m0.500s
user	0m0.598s
sys	0m0.467s

===============================================================================

No old benchmarks to run benchstat against.

===============================================================================

go vet ./...

real	0m0.380s
user	0m0.374s
sys	0m0.371s

===============================================================================

go fix ./...

real	0m0.138s
user	0m0.109s
sys	0m0.132s

===============================================================================

gocyclo .
23 markdown Render markdown.go:12:1
4 markdown BenchmarkMarkdown markdown_test.go:15:1
3 markdown TestMarkdown markdown_test.go:5:1
1 markdown ExampleRender markdown_examples_test.go:5:1

real	0m0.018s
user	0m0.008s
sys	0m0.005s

===============================================================================

misspell .

real	0m0.080s
user	0m0.057s
sys	0m0.029s

===============================================================================

gosec ./...
[gosec] 2022/08/25 20:47:37 Including rules: default
[gosec] 2022/08/25 20:47:37 Excluding rules: default
[gosec] 2022/08/25 20:47:37 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/markdown
2022/08/25 20:47:38 internal error: package "fmt" without types was imported from "command-line-arguments"

real	0m0.515s
user	0m0.594s
sys	0m0.475s

===============================================================================

gomarkdoc --output markdown-doc.md

real	0m0.110s
user	0m0.048s
sys	0m0.043s

===============================================================================

go doc -all markdown
package markdown // import "markdown"

Package markdown renders markdown into HTML.

FUNCTIONS

func Render(markdown string) string
    Render translates markdown to HTML


real	0m0.220s
user	0m0.139s
sys	0m0.150s


===============================================================================

