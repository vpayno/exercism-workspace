Running automated test file(s):

Go packages: markdown 


===============================================================================

golint ./...

real	0m0.118s
user	0m0.054s
sys	0m0.062s

===============================================================================

revive ./...

real	0m0.062s
user	0m0.016s
sys	0m0.028s

===============================================================================

ineffassign ./...

real	0m0.294s
user	0m0.307s
sys	0m0.293s

===============================================================================

go-consistent -v ./...
	info: check "./."

real	0m0.442s
user	0m0.406s
sys	0m0.349s

===============================================================================

staticcheck ./...

real	0m0.368s
user	0m0.411s
sys	0m0.366s

===============================================================================

gocritic check -enableAll ./...

real	0m2.357s
user	0m3.981s
sys	0m1.059s

===============================================================================

gotest -v -covermode=count -coverprofile coverage.out ./...
=== RUN   TestMarkdown
=== RUN   TestMarkdown/parses_normal_text_as_a_paragraph
=== RUN   TestMarkdown/parsing_italics
=== RUN   TestMarkdown/parsing_bold_text
=== RUN   TestMarkdown/mixed_normal,_italics_and_bold_text
=== RUN   TestMarkdown/with_h1_header_level
=== RUN   TestMarkdown/with_h2_header_level
=== RUN   TestMarkdown/with_h3_header_level
=== RUN   TestMarkdown/with_h4_header_level
=== RUN   TestMarkdown/with_h5_header_level
=== RUN   TestMarkdown/with_h6_header_level
=== RUN   TestMarkdown/h7_header_level_is_a_paragraph
=== RUN   TestMarkdown/unordered_lists
=== RUN   TestMarkdown/With_a_little_bit_of_everything
=== RUN   TestMarkdown/with_markdown_symbols_in_the_header_text_that_should_not_be_interpreted
=== RUN   TestMarkdown/with_markdown_symbols_in_the_list_item_text_that_should_not_be_interpreted
=== RUN   TestMarkdown/with_markdown_symbols_in_the_paragraph_text_that_should_not_be_interpreted
=== RUN   TestMarkdown/unordered_lists_close_properly_with_preceding_and_following_lines
--- PASS: TestMarkdown (0.00s)
    --- PASS: TestMarkdown/parses_normal_text_as_a_paragraph (0.00s)
    --- PASS: TestMarkdown/parsing_italics (0.00s)
    --- PASS: TestMarkdown/parsing_bold_text (0.00s)
    --- PASS: TestMarkdown/mixed_normal,_italics_and_bold_text (0.00s)
    --- PASS: TestMarkdown/with_h1_header_level (0.00s)
    --- PASS: TestMarkdown/with_h2_header_level (0.00s)
    --- PASS: TestMarkdown/with_h3_header_level (0.00s)
    --- PASS: TestMarkdown/with_h4_header_level (0.00s)
    --- PASS: TestMarkdown/with_h5_header_level (0.00s)
    --- PASS: TestMarkdown/with_h6_header_level (0.00s)
    --- PASS: TestMarkdown/h7_header_level_is_a_paragraph (0.00s)
    --- PASS: TestMarkdown/unordered_lists (0.00s)
    --- PASS: TestMarkdown/With_a_little_bit_of_everything (0.00s)
    --- PASS: TestMarkdown/with_markdown_symbols_in_the_header_text_that_should_not_be_interpreted (0.00s)
    --- PASS: TestMarkdown/with_markdown_symbols_in_the_list_item_text_that_should_not_be_interpreted (0.00s)
    --- PASS: TestMarkdown/with_markdown_symbols_in_the_paragraph_text_that_should_not_be_interpreted (0.00s)
    --- PASS: TestMarkdown/unordered_lists_close_properly_with_preceding_and_following_lines (0.00s)
=== RUN   ExampleRender
--- PASS: ExampleRender (0.00s)
PASS
coverage: 100.0% of statements
ok  	markdown	0.013s	coverage: 100.0% of statements

real	0m0.693s
user	0m0.699s
sys	0m0.572s

===============================================================================

go tool cover -func=coverage.out
markdown/markdown.go:23:	Render		100.0%
total:				(statements)	100.0%

real	0m0.303s
user	0m0.299s
sys	0m0.227s

===============================================================================

go tool cover -html coverage.out -o coverage.html

real	0m0.276s
user	0m0.202s
sys	0m0.287s

===============================================================================

gocov convert coverage.out | gocov annotate -ceiling=100 -color - | tee coverage-annotations.txt

real	0m0.131s
user	0m0.073s
sys	0m0.169s

===============================================================================

gotest -v -race -covermode=atomic ./...
=== RUN   TestMarkdown
=== RUN   TestMarkdown/parses_normal_text_as_a_paragraph
=== RUN   TestMarkdown/parsing_italics
=== RUN   TestMarkdown/parsing_bold_text
=== RUN   TestMarkdown/mixed_normal,_italics_and_bold_text
=== RUN   TestMarkdown/with_h1_header_level
=== RUN   TestMarkdown/with_h2_header_level
=== RUN   TestMarkdown/with_h3_header_level
=== RUN   TestMarkdown/with_h4_header_level
=== RUN   TestMarkdown/with_h5_header_level
=== RUN   TestMarkdown/with_h6_header_level
=== RUN   TestMarkdown/h7_header_level_is_a_paragraph
=== RUN   TestMarkdown/unordered_lists
=== RUN   TestMarkdown/With_a_little_bit_of_everything
=== RUN   TestMarkdown/with_markdown_symbols_in_the_header_text_that_should_not_be_interpreted
=== RUN   TestMarkdown/with_markdown_symbols_in_the_list_item_text_that_should_not_be_interpreted
=== RUN   TestMarkdown/with_markdown_symbols_in_the_paragraph_text_that_should_not_be_interpreted
=== RUN   TestMarkdown/unordered_lists_close_properly_with_preceding_and_following_lines
--- PASS: TestMarkdown (0.02s)
    --- PASS: TestMarkdown/parses_normal_text_as_a_paragraph (0.00s)
    --- PASS: TestMarkdown/parsing_italics (0.00s)
    --- PASS: TestMarkdown/parsing_bold_text (0.00s)
    --- PASS: TestMarkdown/mixed_normal,_italics_and_bold_text (0.00s)
    --- PASS: TestMarkdown/with_h1_header_level (0.00s)
    --- PASS: TestMarkdown/with_h2_header_level (0.00s)
    --- PASS: TestMarkdown/with_h3_header_level (0.00s)
    --- PASS: TestMarkdown/with_h4_header_level (0.00s)
    --- PASS: TestMarkdown/with_h5_header_level (0.00s)
    --- PASS: TestMarkdown/with_h6_header_level (0.00s)
    --- PASS: TestMarkdown/h7_header_level_is_a_paragraph (0.01s)
    --- PASS: TestMarkdown/unordered_lists (0.00s)
    --- PASS: TestMarkdown/With_a_little_bit_of_everything (0.00s)
    --- PASS: TestMarkdown/with_markdown_symbols_in_the_header_text_that_should_not_be_interpreted (0.00s)
    --- PASS: TestMarkdown/with_markdown_symbols_in_the_list_item_text_that_should_not_be_interpreted (0.00s)
    --- PASS: TestMarkdown/with_markdown_symbols_in_the_paragraph_text_that_should_not_be_interpreted (0.00s)
    --- PASS: TestMarkdown/unordered_lists_close_properly_with_preceding_and_following_lines (0.00s)
=== RUN   ExampleRender
--- PASS: ExampleRender (0.00s)
PASS
coverage: 100.0% of statements
ok  	markdown	0.067s	coverage: 100.0% of statements

real	0m1.197s
user	0m0.966s
sys	0m0.690s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

go test --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: markdown
cpu: Intel(R) Core(TM) i7-7Y75 CPU @ 1.30GHz
BenchmarkMarkdown-4   	   56080	     20243 ns/op	    2896 B/op	     100 allocs/op
PASS
ok  	markdown	1.408s

real	0m1.914s
user	0m2.619s
sys	0m0.605s

===============================================================================

go test -tags bonus
PASS
ok  	markdown	0.014s

real	0m0.525s
user	0m0.592s
sys	0m0.444s

===============================================================================

benchstat benchstat-old.txt benchstat-new.txt
name        old time/op    new time/op    delta
Markdown-4    90.4µs ± 0%    20.2µs ± 0%   ~     (p=1.000 n=1+1)

name        old alloc/op   new alloc/op   delta
Markdown-4    18.4kB ± 0%     2.9kB ± 0%   ~     (p=1.000 n=1+1)

name        old allocs/op  new allocs/op  delta
Markdown-4     1.04k ± 0%     0.10k ± 0%   ~     (p=1.000 n=1+1)

real	0m0.052s
user	0m0.003s
sys	0m0.009s

===============================================================================

go vet ./...

real	0m0.342s
user	0m0.363s
sys	0m0.433s

===============================================================================

go fix ./...

real	0m0.142s
user	0m0.094s
sys	0m0.115s

===============================================================================

gocyclo .
21 markdown Render markdown.go:23:1
4 markdown BenchmarkMarkdown markdown_test.go:15:1
3 markdown TestMarkdown markdown_test.go:5:1
1 markdown ExampleRender markdown_examples_test.go:5:1

real	0m0.044s
user	0m0.009s
sys	0m0.020s

===============================================================================

misspell .

real	0m0.097s
user	0m0.091s
sys	0m0.035s

===============================================================================

gosec ./...
[gosec] 2022/08/25 22:30:02 Including rules: default
[gosec] 2022/08/25 22:30:02 Excluding rules: default
[gosec] 2022/08/25 22:30:02 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/markdown
2022/08/25 22:30:02 internal error: package "fmt" without types was imported from "command-line-arguments"

real	0m0.652s
user	0m0.660s
sys	0m0.500s

===============================================================================

gomarkdoc --output markdown-doc.md

real	0m0.095s
user	0m0.038s
sys	0m0.032s

===============================================================================

go doc -all markdown
package markdown // import "markdown"

Package markdown renders markdown into HTML.

FUNCTIONS

func Render(input string) string
    Render translates markdown to HTML


real	0m0.211s
user	0m0.129s
sys	0m0.243s


===============================================================================

