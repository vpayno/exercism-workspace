Running automated test file(s):

Go packages: sublist 


===============================================================================

golint sublist

real	0m0.219s
user	0m0.179s
sys	0m0.163s

===============================================================================

go test -v -covermode=count -coverprofile coverage.out sublist
=== RUN   TestSublist
    sublist_test.go:12: PASS: empty lists
    sublist_test.go:12: PASS: empty list within non empty list
    sublist_test.go:12: PASS: non empty list contains empty list
    sublist_test.go:12: PASS: list equals itself
    sublist_test.go:12: PASS: different lists
    sublist_test.go:12: PASS: false start
    sublist_test.go:12: PASS: consecutive
    sublist_test.go:12: PASS: sublist at start
    sublist_test.go:12: PASS: sublist in middle
    sublist_test.go:12: PASS: sublist at end
    sublist_test.go:12: PASS: at start of superlist
    sublist_test.go:12: PASS: in middle of superlist
    sublist_test.go:12: PASS: at end of superlist
    sublist_test.go:12: PASS: first list missing element from second list
    sublist_test.go:12: PASS: second list missing element from first list
    sublist_test.go:12: PASS: order matters to a list
    sublist_test.go:12: PASS: same digits but different numbers
    sublist_test.go:12: PASS: unfinished sequence
--- PASS: TestSublist (0.00s)
=== RUN   ExampleSublist
--- PASS: ExampleSublist (0.00s)
PASS
coverage: 100.0% of statements
ok  	sublist	0.023s	coverage: 100.0% of statements

real	0m0.686s
user	0m0.763s
sys	0m0.479s

===============================================================================

go tool cover -func=coverage.out
sublist/sublist.go:21:	ListToString	100.0%
sublist/sublist.go:30:	Sublist		100.0%
total:			(statements)	100.0%

real	0m0.241s
user	0m0.242s
sys	0m0.197s

===============================================================================

go tool cover -html coverage.out -o coverage.html

real	0m0.250s
user	0m0.226s
sys	0m0.266s

===============================================================================

go test -v -race -covermode=atomic sublist
=== RUN   TestSublist
    sublist_test.go:12: PASS: empty lists
    sublist_test.go:12: PASS: empty list within non empty list
    sublist_test.go:12: PASS: non empty list contains empty list
    sublist_test.go:12: PASS: list equals itself
    sublist_test.go:12: PASS: different lists
    sublist_test.go:12: PASS: false start
    sublist_test.go:12: PASS: consecutive
    sublist_test.go:12: PASS: sublist at start
    sublist_test.go:12: PASS: sublist in middle
    sublist_test.go:12: PASS: sublist at end
    sublist_test.go:12: PASS: at start of superlist
    sublist_test.go:12: PASS: in middle of superlist
    sublist_test.go:12: PASS: at end of superlist
    sublist_test.go:12: PASS: first list missing element from second list
    sublist_test.go:12: PASS: second list missing element from first list
    sublist_test.go:12: PASS: order matters to a list
    sublist_test.go:12: PASS: same digits but different numbers
    sublist_test.go:12: PASS: unfinished sequence
--- PASS: TestSublist (0.00s)
=== RUN   ExampleSublist
--- PASS: ExampleSublist (0.00s)
PASS
coverage: 100.0% of statements
ok  	sublist	0.025s	coverage: 100.0% of statements

real	0m0.662s
user	0m0.756s
sys	0m0.456s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

go test --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: sublist
cpu: Intel(R) Core(TM) i7-7Y75 CPU @ 1.30GHz
BenchmarkSublist-4   	   36650	     31194 ns/op	    2344 B/op	     220 allocs/op
PASS
ok  	sublist	1.576s

real	0m2.102s
user	0m2.522s
sys	0m0.453s

===============================================================================

go test -tags bonus
PASS
ok  	sublist	0.016s

real	0m0.620s
user	0m0.732s
sys	0m0.464s

===============================================================================

go install golang.org/x/perf/cmd/benchstat@latest

real	0m3.733s
user	0m0.701s
sys	0m0.349s

benchstat benchstat-old.txt benchstat-new.txt
name       old time/op    new time/op    delta
Sublist-4    34.8µs ± 0%    31.2µs ± 0%   ~     (p=1.000 n=1+1)

name       old alloc/op   new alloc/op   delta
Sublist-4    2.34kB ± 0%    2.34kB ± 0%   ~     (all equal)

name       old allocs/op  new allocs/op  delta
Sublist-4       220 ± 0%       220 ± 0%   ~     (all equal)

real	0m0.032s
user	0m0.012s
sys	0m0.031s

===============================================================================

go vet sublist

real	0m0.379s
user	0m0.369s
sys	0m0.404s

===============================================================================

go fix sublist

real	0m0.167s
user	0m0.190s
sys	0m0.212s

===============================================================================

gosec ./sublist
[gosec] 2022/07/03 23:25:06 Including rules: default
[gosec] 2022/07/03 23:25:06 Excluding rules: default
[gosec] 2022/07/03 23:25:06 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/sublist
2022/07/03 23:25:07 internal error: package "fmt" without types was imported from "command-line-arguments"

real	0m0.456s
user	0m0.545s
sys	0m0.445s

===============================================================================

gomarkdoc --output sublist-doc.md

real	0m0.023s
user	0m0.015s
sys	0m0.017s

===============================================================================

go doc -all sublist
package sublist // import "sublist"

Package sublist is used to compare two lists with each other.

CONSTANTS

const (
	EqualR     Relation = "equal"
	UnequalR            = "unequal"
	SuperlistR          = "superlist"
	SublistR            = "sublist"
)
    "Enum" of list relations.


FUNCTIONS

func ListToString(list []int) string
    ListToString returns a string representation of an int slice.


TYPES

type Relation string
    Relation is a string that shows the relationship between two lists.

func Sublist(l1, l2 []int) Relation
    Sublist returns the relationship between two lists.


real	0m0.199s
user	0m0.160s
sys	0m0.178s


===============================================================================

