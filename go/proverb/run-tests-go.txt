Running automated test file(s):

Go packages: proverb 


===============================================================================

Running: ../../.github/citools/go/go-lint-golangci-lint

Running GoLangCi-Lint

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.020s
user	0m0.016s
sys	0m0.028s


 ==============================================================================

Running: golangci-lint run --enable-all ./...

level=warning msg="[runner] The linter 'golint' is deprecated (since v1.41.0) due to: The repository of the linter has been archived by the owner. Replaced by revive."
level=warning msg="[runner] The linter 'varcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'maligned' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. Replaced by govet 'fieldalignment'."
level=warning msg="[runner] The linter 'scopelint' is deprecated (since v1.39.0) due to: The repository of the linter has been deprecated by the owner. Replaced by exportloopref."
level=warning msg="[runner] The linter 'exhaustivestruct' is deprecated (since v1.46.0) due to: The owner seems to have abandoned the linter. Replaced by exhaustruct."
level=warning msg="[runner] The linter 'interfacer' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. "
level=warning msg="[runner] The linter 'ifshort' is deprecated (since v1.48.0) due to: The repository of the linter has been deprecated by the owner. "
level=warning msg="[runner] The linter 'structcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'deadcode' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'nosnakecase' is deprecated (since v1.48.1) due to: The repository of the linter has been deprecated by the owner. Replaced by revive(var-naming)."
cases_test.go:33: line is 142 characters (lll)
		expected:    []string{"For want of a nail the shoe was lost.", "For want of a shoe the horse was lost.", "And all for the want of a nail."},
cases_test.go:38: line is 322 characters (lll)
		expected:    []string{"For want of a nail the shoe was lost.", "For want of a shoe the horse was lost.", "For want of a horse the rider was lost.", "For want of a rider the message was lost.", "For want of a message the battle was lost.", "For want of a battle the kingdom was lost.", "And all for the want of a nail."},
cases_test.go:43: line is 186 characters (lll)
		expected:    []string{"For want of a pin the gun was lost.", "For want of a gun the soldier was lost.", "For want of a soldier the battle was lost.", "And all for the want of a pin."},
proverb_test.go:11:22: Using the variable on range scope `tc` in function literal (scopelint)
			actual := Proverb(tc.input)
			                  ^
proverb_test.go:12:54: Using the variable on range scope `tc` in function literal (scopelint)
			if fmt.Sprintf("%q", actual) != fmt.Sprintf("%q", tc.expected) {
			                                                  ^
proverb_test.go:13:50: Using the variable on range scope `tc` in function literal (scopelint)
				t.Errorf("Proverb(%#v)\n got:%#v\nwant:%#v", tc.input, actual, tc.expected)
				                                             ^
proverb_test.go:23:2: for statements should only be cuddled with assignments used in the iteration (wsl)
	for i := 0; i < b.N; i++ {
	^
cases_test.go:14:5: testCases is a global variable (gochecknoglobals)
var testCases = []proverbTest{
    ^
proverb_test.go:8:1: Function TestProverb missing the call to method parallel (paralleltest)
func TestProverb(t *testing.T) {
^
proverb_test.go:9:2: Range statement for test TestProverb missing the call to method parallel in test Run (paralleltest)
	for _, tc := range testCases {
	^
cases_test.go:1:9: package should be `proverb_test` instead of `proverb` (testpackage)
package proverb
        ^
proverb_examples_test.go:1:9: package should be `proverb_test` instead of `proverb` (testpackage)
package proverb
        ^
proverb_test.go:1:9: package should be `proverb_test` instead of `proverb` (testpackage)
package proverb
        ^

real	0m0.509s
user	0m0.771s
sys	0m0.458s


 ==============================================================================

Exit code: -1

real	0m0.538s
user	0m0.790s
sys	0m0.496s

real	0m0.540s
user	0m0.791s
sys	0m0.497s

===============================================================================

Running: ../../.github/citools/go/go-lint-revive

Running Go Lint Revive

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.022s
user	0m0.015s
sys	0m0.024s


 ==============================================================================

Running: revive -formatter=stylish ./...


real	0m0.026s
user	0m0.013s
sys	0m0.018s


 ==============================================================================

Exit code: 0

real	0m0.058s
user	0m0.034s
sys	0m0.050s

real	0m0.060s
user	0m0.035s
sys	0m0.051s

===============================================================================

Running: ../../.github/citools/go/go-lint-ineffassign
../run-tests: line 41: .github/citools/go/go-lint-ineffassign: No such file or directory

real	0m0.001s
user	0m0.000s
sys	0m0.000s

===============================================================================

Running: ../../.github/citools/go/go-lint-go-consistent

Running Go go-consistent

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.022s
user	0m0.019s
sys	0m0.024s


 ==============================================================================

Running: go-consistent -v ./...

	info: check "./."
internal error: package "fmt" without types was imported from "proverb"

real	0m0.083s
user	0m0.108s
sys	0m0.102s


 ==============================================================================

Exit code: -1

real	0m0.115s
user	0m0.131s
sys	0m0.134s

real	0m0.117s
user	0m0.132s
sys	0m0.135s

===============================================================================

Running: ../../.github/citools/go/go-lint-staticcheck

Running Go StaticCheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.023s
user	0m0.019s
sys	0m0.023s


 ==============================================================================

Running: staticcheck -checks=all ./...


real	0m0.153s
user	0m0.178s
sys	0m0.109s


 ==============================================================================

Exit code: 0

real	0m0.186s
user	0m0.204s
sys	0m0.138s

real	0m0.188s
user	0m0.204s
sys	0m0.140s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocritic

Running Go gocritic

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.028s
user	0m0.018s
sys	0m0.033s


 ==============================================================================

Running: gocritic check -enableAll ./...


real	0m0.866s
user	0m2.065s
sys	0m0.300s


 ==============================================================================

Exit code: 0

real	0m0.908s
user	0m2.090s
sys	0m0.345s

real	0m0.910s
user	0m2.092s
sys	0m0.345s

===============================================================================

Running: ../../.github/citools/go/go-lint-go_vet

Running Go Vet

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.034s
user	0m0.026s
sys	0m0.035s


 ==============================================================================

Running: go vet ./...


real	0m0.085s
user	0m0.112s
sys	0m0.117s


 ==============================================================================

Exit code: 0

real	0m0.136s
user	0m0.148s
sys	0m0.165s

real	0m0.138s
user	0m0.149s
sys	0m0.165s

===============================================================================

Running: ../../.github/citools/go/go-fixer-go_fix

Running go fix

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.020s
user	0m0.014s
sys	0m0.019s


 ==============================================================================

Running: go fix ./...


real	0m0.024s
user	0m0.020s
sys	0m0.023s


 ==============================================================================

Exit code: 0

real	0m0.061s
user	0m0.039s
sys	0m0.060s

real	0m0.063s
user	0m0.039s
sys	0m0.062s

===============================================================================

Running: ../../.github/citools/go/go-lint-errcheck

Running Go errcheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.024s
user	0m0.016s
sys	0m0.020s


 ==============================================================================

Running: errcheck ./...


real	0m0.436s
user	0m1.350s
sys	0m0.286s


 ==============================================================================

Exit code: 0

real	0m0.472s
user	0m1.373s
sys	0m0.316s

real	0m0.474s
user	0m1.374s
sys	0m0.318s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocyclo

Running Go gocyclo

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.024s
user	0m0.022s
sys	0m0.019s


 ==============================================================================

Running: gocyclo .

4 proverb BenchmarkProverb proverb_test.go:19:1
3 proverb TestProverb proverb_test.go:8:1
3 proverb Proverb proverb.go:7:1
2 proverb ExampleProverb proverb_examples_test.go:7:1

real	0m0.003s
user	0m0.001s
sys	0m0.001s


 ==============================================================================

Exit code: 0

real	0m0.038s
user	0m0.031s
sys	0m0.028s

real	0m0.040s
user	0m0.033s
sys	0m0.028s

===============================================================================

Running: ../../.github/citools/go/go-lint-misspell

Running Go misspell

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: misspell .


real	0m0.028s
user	0m0.030s
sys	0m0.009s


 ==============================================================================

Exit code: 0

real	0m0.041s
user	0m0.037s
sys	0m0.020s

real	0m0.043s
user	0m0.039s
sys	0m0.020s

===============================================================================

Running: ../../.github/citools/go/go-lint-gosec

Running Go GoSec

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.021s
user	0m0.009s
sys	0m0.023s


 ==============================================================================

Running: gosec ./...

[gosec] 2023/09/07 00:26:48 Including rules: default
[gosec] 2023/09/07 00:26:48 Excluding rules: default
[gosec] 2023/09/07 00:26:48 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/proverb
[gosec] 2023/09/07 00:26:49 Checking package: proverb
[gosec] 2023/09/07 00:26:49 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/proverb/proverb.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 1
  Lines  : 27
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.110s
user	0m0.124s
sys	0m0.097s


 ==============================================================================

Exit code: 0

real	0m0.141s
user	0m0.137s
sys	0m0.128s

real	0m0.143s
user	0m0.138s
sys	0m0.129s

===============================================================================

Running: ../../.github/citools/go/go-test-cover-report

Running Go Test, Coverage & Reports

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.025s
user	0m0.019s
sys	0m0.022s


 ==============================================================================

Running: gotest -v -covermode=count -coverprofile coverage.out ./...

=== RUN   TestProverb
=== RUN   TestProverb/zero_pieces
=== RUN   TestProverb/one_piece
=== RUN   TestProverb/two_pieces
=== RUN   TestProverb/three_pieces
=== RUN   TestProverb/full_proverb
=== RUN   TestProverb/four_pieces_modernized
--- PASS: TestProverb (0.00s)
    --- PASS: TestProverb/zero_pieces (0.00s)
    --- PASS: TestProverb/one_piece (0.00s)
    --- PASS: TestProverb/two_pieces (0.00s)
    --- PASS: TestProverb/three_pieces (0.00s)
    --- PASS: TestProverb/full_proverb (0.00s)
    --- PASS: TestProverb/four_pieces_modernized (0.00s)
=== RUN   ExampleProverb
--- PASS: ExampleProverb (0.00s)
PASS
coverage: 100.0% of statements
ok  	proverb	0.003s	coverage: 100.0% of statements

real	0m0.162s
user	0m0.212s
sys	0m0.141s


 ==============================================================================

Running: go tool cover -func=coverage.out

proverb/proverb.go:7:	Proverb		100.0%
total:			(statements)	100.0%

real	0m0.052s
user	0m0.082s
sys	0m0.069s


 ==============================================================================

Running: go tool cover -html coverage.out -o coverage.html


real	0m0.053s
user	0m0.062s
sys	0m0.072s


 ==============================================================================

Running: cover_annotate

Running: gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

real	0m0.019s
user	0m0.020s
sys	0m0.016s

real	0m0.019s
user	0m0.020s
sys	0m0.016s


 ==============================================================================

Running: gotest -v -race -covermode=atomic ./...

=== RUN   TestProverb
=== RUN   TestProverb/zero_pieces
=== RUN   TestProverb/one_piece
=== RUN   TestProverb/two_pieces
=== RUN   TestProverb/three_pieces
=== RUN   TestProverb/full_proverb
=== RUN   TestProverb/four_pieces_modernized
--- PASS: TestProverb (0.00s)
    --- PASS: TestProverb/zero_pieces (0.00s)
    --- PASS: TestProverb/one_piece (0.00s)
    --- PASS: TestProverb/two_pieces (0.00s)
    --- PASS: TestProverb/three_pieces (0.00s)
    --- PASS: TestProverb/full_proverb (0.00s)
    --- PASS: TestProverb/four_pieces_modernized (0.00s)
=== RUN   ExampleProverb
--- PASS: ExampleProverb (0.00s)
PASS
coverage: 100.0% of statements
ok  	proverb	1.016s	coverage: 100.0% of statements

real	0m1.228s
user	0m0.284s
sys	0m0.177s


 ==============================================================================

Exit code: 0

real	0m1.554s
user	0m0.689s
sys	0m0.506s

real	0m1.557s
user	0m0.691s
sys	0m0.507s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

gotest -v --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: proverb
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
BenchmarkProverb
BenchmarkProverb-8   	  405014	      2912 ns/op	    1728 B/op	      59 allocs/op
PASS
ok  	proverb	2.123s

real	0m2.269s
user	0m2.360s
sys	0m0.157s

===============================================================================

gotest -v -tags bonus
=== RUN   TestProverb
=== RUN   TestProverb/zero_pieces
=== RUN   TestProverb/one_piece
=== RUN   TestProverb/two_pieces
=== RUN   TestProverb/three_pieces
=== RUN   TestProverb/full_proverb
=== RUN   TestProverb/four_pieces_modernized
--- PASS: TestProverb (0.00s)
    --- PASS: TestProverb/zero_pieces (0.00s)
    --- PASS: TestProverb/one_piece (0.00s)
    --- PASS: TestProverb/two_pieces (0.00s)
    --- PASS: TestProverb/three_pieces (0.00s)
    --- PASS: TestProverb/full_proverb (0.00s)
    --- PASS: TestProverb/four_pieces_modernized (0.00s)
=== RUN   ExampleProverb
--- PASS: ExampleProverb (0.00s)
PASS
ok  	proverb	0.002s

real	0m0.124s
user	0m0.165s
sys	0m0.108s

===============================================================================

benchstat benchstat-old.txt benchstat-new.txt
benchstat-new.txt:5: missing iteration count
goos: linux
goarch: amd64
pkg: proverb
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
          │ benchstat-new.txt │
          │      sec/op       │
Proverb-8        2.912µ ± ∞ ¹
¹ need >= 6 samples for confidence interval at level 0.95

          │ benchstat-new.txt │
          │       B/op        │
Proverb-8       1.688Ki ± ∞ ¹
¹ need >= 6 samples for confidence interval at level 0.95

          │ benchstat-new.txt │
          │     allocs/op     │
Proverb-8         59.00 ± ∞ ¹
¹ need >= 6 samples for confidence interval at level 0.95

cpu: Intel(R) Core(TM) i7-7Y75 CPU @ 1.30GHz
          │ benchstat-old.txt │
          │      sec/op       │
Proverb-4        8.278µ ± ∞ ¹
¹ need >= 6 samples for confidence interval at level 0.95

          │ benchstat-old.txt │
          │       B/op        │
Proverb-4       1.688Ki ± ∞ ¹
¹ need >= 6 samples for confidence interval at level 0.95

          │ benchstat-old.txt │
          │     allocs/op     │
Proverb-4         59.00 ± ∞ ¹
¹ need >= 6 samples for confidence interval at level 0.95

real	0m0.007s
user	0m0.001s
sys	0m0.003s

===============================================================================

gomarkdoc --output proverb-doc.md

real	0m0.008s
user	0m0.006s
sys	0m0.003s

===============================================================================

go doc -all proverb
package proverb // import "proverb"

Package proverb generates proverbial rhymes.

FUNCTIONS

func Proverb(words []string) []string
    Proverb returns a proverbial rhyme given a slice of words.


real	0m0.042s
user	0m0.025s
sys	0m0.042s


===============================================================================

