Running automated test file(s):

Go packages: raindrops 


===============================================================================

golint raindrops

real	0m0.224s
user	0m0.177s
sys	0m0.215s

===============================================================================

go test -v -covermode=count -coverprofile coverage.out raindrops
=== RUN   TestConvert
--- PASS: TestConvert (0.00s)
=== RUN   ExampleConvert
--- PASS: ExampleConvert (0.00s)
PASS
coverage: 100.0% of statements
ok  	raindrops	0.014s	coverage: 100.0% of statements

real	0m0.749s
user	0m0.792s
sys	0m0.603s

===============================================================================

go tool cover -func=coverage.out
raindrops/raindrops.go:7:	Convert		100.0%
total:				(statements)	100.0%

real	0m0.306s
user	0m0.249s
sys	0m0.269s

===============================================================================

go test -v -race -covermode=atomic raindrops
=== RUN   TestConvert
--- PASS: TestConvert (0.00s)
=== RUN   ExampleConvert
--- PASS: ExampleConvert (0.00s)
PASS
coverage: 100.0% of statements
ok  	raindrops	0.024s	coverage: 100.0% of statements

real	0m0.684s
user	0m0.752s
sys	0m0.470s

===============================================================================

go test --bench . --benchmem
goos: linux
goarch: amd64
pkg: raindrops
cpu: Intel(R) Core(TM) i7-7Y75 CPU @ 1.30GHz
BenchmarkConvert-4   	  951364	      1184 ns/op	      80 B/op	       6 allocs/op
PASS
ok  	raindrops	1.206s

real	0m2.010s
user	0m2.326s
sys	0m0.639s

===============================================================================

go test -tags bonus
PASS
ok  	raindrops	0.003s

real	0m0.591s
user	0m0.638s
sys	0m0.388s

===============================================================================

go vet raindrops

real	0m0.382s
user	0m0.381s
sys	0m0.351s

===============================================================================

go fix raindrops

real	0m0.163s
user	0m0.149s
sys	0m0.139s

===============================================================================

gosec ./raindrops
[gosec] 2022/06/22 08:55:42 Including rules: default
[gosec] 2022/06/22 08:55:42 Excluding rules: default
[gosec] 2022/06/22 08:55:42 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/raindrops
2022/06/22 08:55:42 internal error: package "fmt" without types was imported from "command-line-arguments"

real	0m0.495s
user	0m0.579s
sys	0m0.425s

===============================================================================

gomarkdoc --output raindrops-doc.md

real	0m0.031s
user	0m0.018s
sys	0m0.016s

===============================================================================

go doc -all raindrops
package raindrops // import "raindrops"

Package raindrops converts a number into a string that contains raindrop
sounds corresponding to certain potential factors.

FUNCTIONS

func Convert(number int) string
    Convert returns a string containing raindrop sounds corresponding to factors
    of the number, `int`, given.


real	0m0.238s
user	0m0.185s
sys	0m0.240s


===============================================================================

