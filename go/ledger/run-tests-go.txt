Running automated test file(s):

Go packages: ledger 


===============================================================================

Running: ../../.github/citools/go/go-lint-golangci-lint

Running GoLangCi-Lint

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.029s
user	0m0.026s
sys	0m0.030s


 ==============================================================================

Running: golangci-lint run --enable-all ./...

level=warning msg="[runner] The linter 'varcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'nosnakecase' is deprecated (since v1.48.1) due to: The repository of the linter has been deprecated by the owner. Replaced by revive(var-naming)."
level=warning msg="[runner] The linter 'structcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'interfacer' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. "
level=warning msg="[runner] The linter 'scopelint' is deprecated (since v1.39.0) due to: The repository of the linter has been deprecated by the owner. Replaced by exportloopref."
level=warning msg="[runner] The linter 'maligned' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. Replaced by govet 'fieldalignment'."
level=warning msg="[runner] The linter 'golint' is deprecated (since v1.41.0) due to: The repository of the linter has been archived by the owner. Replaced by revive."
level=warning msg="[runner] The linter 'exhaustivestruct' is deprecated (since v1.46.0) due to: The owner seems to have abandoned the linter. Replaced by exhaustruct."
level=warning msg="[runner] The linter 'deadcode' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'ifshort' is deprecated (since v1.48.0) due to: The repository of the linter has been deprecated by the owner. "
ledger_test.go:291:14: Error return value is not checked (errcheck)
	FormatLedger("USD", "en-US", entries)
	            ^
ledger_test.go:303:16: Error return value is not checked (errcheck)
			FormatLedger(tt.currency, tt.locale, tt.entries)
			            ^
ledger.go:89: Function 'localizedCurrency' has too many statements (50 > 40) (funlen)
func localizedCurrency(locale, currency string, cents int) (string, error) {
ledger.go:57:7: string `nl-NL` has 8 occurrences, make it a constant (goconst)
	case "nl-NL":
	     ^
ledger.go:60:7: string `en-US` has 7 occurrences, make it a constant (goconst)
	case "en-US":
	     ^
ledger.go:168: File is not `gofumpt`-ed (gofumpt)

ledger.go:232: File is not `gofumpt`-ed (gofumpt)

ledger.go:238: File is not `gofumpt`-ed (gofumpt)

ledger.go:1: line is 122 characters (lll)
// Package ledger prints a nicely formatted ledger, given a locale (American or Dutch) and a currency (US dollar or euro).
ledger_test.go:253:32: Using the variable on range scope `tc` in function literal (scopelint)
			actual, err := FormatLedger(tc.currency, tc.locale, tc.entries)
			                            ^
ledger_test.go:255:78: Using the variable on range scope `tc` in function literal (scopelint)
				t.Fatalf("FormatLedger for input named %q returned unexpected error %v", tc.name, err)
				                                                                         ^
ledger_test.go:257:16: Using the variable on range scope `tc` in function literal (scopelint)
			expected := tc.expected[1:] // Strip initial newline
			            ^
ledger_test.go:268:27: Using the variable on range scope `tt` in function literal (scopelint)
			_, err := FormatLedger(tt.currency, tt.locale, tt.entries)
			                       ^
ledger_test.go:270:67: Using the variable on range scope `tt` in function literal (scopelint)
				t.Fatalf("FormatLedger for input %q expected error, got nil", tt.name)
				                                                              ^
ledger_test.go:292:2: if statements should only be cuddled with assignments (wsl)
	if !reflect.DeepEqual(entries, entriesCopy) {
	^
ledger_test.go:301:2: for statements should only be cuddled with assignments used in the iteration (wsl)
	for i := 0; i < b.N; i++ {
	^
ledger_test.go:8:5: successTestCases is a global variable (gochecknoglobals)
var successTestCases = []struct {
    ^
ledger_test.go:194:5: failureTestCases is a global variable (gochecknoglobals)
var failureTestCases = []struct {
    ^
ledger.go:41:14: err113: do not define dynamic errors, use wrapped static errors instead: "errors.New(\"wrong size date\")" (goerr113)
		return "", errors.New("wrong size date")
		           ^
ledger.go:53:14: err113: do not define dynamic errors, use wrapped static errors instead: "errors.New(\"invalid date separator\")" (goerr113)
		return "", errors.New("invalid date separator")
		           ^
ledger.go:64:18: err113: do not define dynamic errors, use wrapped static errors instead: "errors.New(\"failed to render localized date\")" (goerr113)
		return output, errors.New("failed to render localized date")
		               ^
ledger.go:83:14: err113: do not define dynamic errors, use wrapped static errors instead: "errors.New(\"failed to render localized header\")" (goerr113)
		return "", errors.New("failed to render localized header")
		           ^
ledger.go:119:14: err113: do not define dynamic errors, use wrapped static errors instead: "errors.New(\"invalid currency\")" (goerr113)
		return "", errors.New("invalid currency")
		           ^
ledger.go:199:21: err113: do not define dynamic errors, use wrapped static errors instead: "errors.New(\"unable to copy the entries slice\")" (goerr113)
		return []Entry{}, errors.New("unable to copy the entries slice")
		                  ^
ledger.go:40:18: mnd: Magic number: 10, in <condition> detected (gomnd)
	if len(date) != 10 {
	                ^
ledger.go:250:31: mnd: Magic number: 25, in <condition> detected (gomnd)
		if len(entry.Description) > 25 {
		                            ^
ledger_test.go:250:1: Function TestFormatLedgerSuccess missing the call to method parallel (paralleltest)
func TestFormatLedgerSuccess(t *testing.T) {
^
ledger_test.go:251:2: Range statement for test TestFormatLedgerSuccess missing the call to method parallel in test Run (paralleltest)
	for _, tc := range successTestCases {
	^
ledger_test.go:265:1: Function TestFormatLedgerFailure missing the call to method parallel (paralleltest)
func TestFormatLedgerFailure(t *testing.T) {
^
ledger_test.go:266:2: Range statement for test TestFormatLedgerFailure missing the call to method parallel in test Run (paralleltest)
	for _, tt := range failureTestCases {
	^
ledger_test.go:276:1: Function TestFormatLedgerNotChangeInput missing the call to method parallel (paralleltest)
func TestFormatLedgerNotChangeInput(t *testing.T) {
^
ledger_test.go:1:9: package should be `ledger_test` instead of `ledger` (testpackage)
package ledger
        ^
ledger.go:202:2: variable name 'es' is too short for the scope of its usage (varnamelen)
	es := entriesCopy
	^
ledger.go:46:2: variable name 'd1' is too short for the scope of its usage (varnamelen)
	d1 := date[0:4]
	^
ledger.go:207:7: variable name 'i' is too short for the scope of its usage (varnamelen)
		for i, e := range rest {
		    ^
ledger.go:48:2: variable name 'd3' is too short for the scope of its usage (varnamelen)
	d3 := date[5:7]
	^
ledger.go:50:2: variable name 'd5' is too short for the scope of its usage (varnamelen)
	d5 := date[8:10]
	^

real	0m0.626s
user	0m1.069s
sys	0m0.577s


 ==============================================================================

Exit code: -1

real	0m0.672s
user	0m1.106s
sys	0m0.619s

real	0m0.676s
user	0m1.108s
sys	0m0.621s

===============================================================================

Running: ../../.github/citools/go/go-lint-revive

Running Go Lint Revive

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.023s
user	0m0.018s
sys	0m0.022s


 ==============================================================================

Running: revive -formatter=stylish ./...


real	0m0.056s
user	0m0.041s
sys	0m0.031s


 ==============================================================================

Exit code: 0

real	0m0.089s
user	0m0.064s
sys	0m0.062s

real	0m0.091s
user	0m0.065s
sys	0m0.063s

===============================================================================

Running: ../../.github/citools/go/go-lint-ineffassign
../run-tests: line 41: .github/citools/go/go-lint-ineffassign: No such file or directory

real	0m0.001s
user	0m0.000s
sys	0m0.000s

===============================================================================

Running: ../../.github/citools/go/go-lint-go-consistent

Running Go go-consistent

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.019s
user	0m0.011s
sys	0m0.023s


 ==============================================================================

Running: go-consistent -v ./...

	info: check "./."
internal error: package "errors" without types was imported from "ledger"

real	0m0.088s
user	0m0.130s
sys	0m0.109s


 ==============================================================================

Exit code: -1

real	0m0.122s
user	0m0.148s
sys	0m0.145s

real	0m0.123s
user	0m0.150s
sys	0m0.145s

===============================================================================

Running: ../../.github/citools/go/go-lint-staticcheck

Running Go StaticCheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.031s
user	0m0.032s
sys	0m0.036s


 ==============================================================================

Running: staticcheck -checks=all ./...


real	0m0.161s
user	0m0.231s
sys	0m0.109s


 ==============================================================================

Exit code: 0

real	0m0.205s
user	0m0.270s
sys	0m0.155s

real	0m0.207s
user	0m0.270s
sys	0m0.157s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocritic

Running Go gocritic

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.023s
user	0m0.023s
sys	0m0.031s


 ==============================================================================

Running: gocritic check -enableAll ./...


real	0m0.846s
user	0m2.068s
sys	0m0.280s


 ==============================================================================

Exit code: 0

real	0m0.881s
user	0m2.097s
sys	0m0.321s

real	0m0.882s
user	0m2.098s
sys	0m0.321s

===============================================================================

Running: ../../.github/citools/go/go-lint-go_vet

Running Go Vet

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.020s
user	0m0.022s
sys	0m0.018s


 ==============================================================================

Running: go vet ./...


real	0m0.079s
user	0m0.140s
sys	0m0.106s


 ==============================================================================

Exit code: 0

real	0m0.121s
user	0m0.171s
sys	0m0.141s

real	0m0.124s
user	0m0.172s
sys	0m0.142s

===============================================================================

Running: ../../.github/citools/go/go-fixer-go_fix

Running go fix

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.022s
user	0m0.026s
sys	0m0.023s


 ==============================================================================

Running: go fix ./...


real	0m0.025s
user	0m0.026s
sys	0m0.019s


 ==============================================================================

Exit code: 0

real	0m0.058s
user	0m0.058s
sys	0m0.050s

real	0m0.060s
user	0m0.059s
sys	0m0.051s

===============================================================================

Running: ../../.github/citools/go/go-lint-errcheck

Running Go errcheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.021s
user	0m0.019s
sys	0m0.021s


 ==============================================================================

Running: errcheck ./...

ledger_test.go:291:14:	FormatLedger("USD", "en-US", entries)
ledger_test.go:303:16:	FormatLedger(tt.currency, tt.locale, tt.entries)

real	0m0.445s
user	0m1.256s
sys	0m0.258s


 ==============================================================================

Exit code: -1

real	0m0.476s
user	0m1.282s
sys	0m0.286s

real	0m0.478s
user	0m1.283s
sys	0m0.287s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocyclo

Running Go gocyclo

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.022s
user	0m0.014s
sys	0m0.036s


 ==============================================================================

Running: gocyclo .

22 ledger localizedCurrency ledger.go:89:1
10 ledger sortEntries ledger.go:193:1
9 ledger FormatLedger ledger.go:224:1
6 ledger localizedDate ledger.go:39:1
4 ledger BenchmarkFormatLedger ledger_test.go:297:1
4 ledger TestFormatLedgerSuccess ledger_test.go:250:1
3 ledger TestFormatLedgerFailure ledger_test.go:265:1
3 ledger localizedHeader ledger.go:70:1
2 ledger TestFormatLedgerNotChangeInput ledger_test.go:276:1

real	0m0.003s
user	0m0.003s
sys	0m0.000s


 ==============================================================================

Exit code: 0

real	0m0.037s
user	0m0.021s
sys	0m0.047s

real	0m0.039s
user	0m0.021s
sys	0m0.049s

===============================================================================

Running: ../../.github/citools/go/go-lint-misspell

Running Go misspell

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: misspell .


real	0m0.025s
user	0m0.025s
sys	0m0.012s


 ==============================================================================

Exit code: 0

real	0m0.036s
user	0m0.031s
sys	0m0.023s

real	0m0.039s
user	0m0.031s
sys	0m0.025s

===============================================================================

Running: ../../.github/citools/go/go-lint-gosec

Running Go GoSec

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.024s
user	0m0.023s
sys	0m0.033s


 ==============================================================================

Running: gosec ./...

[gosec] 2023/09/07 00:24:38 Including rules: default
[gosec] 2023/09/07 00:24:38 Excluding rules: default
[gosec] 2023/09/07 00:24:38 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/ledger
[gosec] 2023/09/07 00:24:39 Checking package: ledger
[gosec] 2023/09/07 00:24:39 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/ledger/ledger.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 1
  Lines  : 272
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.128s
user	0m0.158s
sys	0m0.107s


 ==============================================================================

Exit code: 0

real	0m0.163s
user	0m0.188s
sys	0m0.149s

real	0m0.165s
user	0m0.188s
sys	0m0.150s

===============================================================================

Running: ../../.github/citools/go/go-test-cover-report

Running Go Test, Coverage & Reports

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.029s
user	0m0.029s
sys	0m0.028s


 ==============================================================================

Running: gotest -v -covermode=count -coverprofile coverage.out ./...

=== RUN   TestFormatLedgerSuccess
=== RUN   TestFormatLedgerSuccess/empty_ledger
=== RUN   TestFormatLedgerSuccess/one_entry
=== RUN   TestFormatLedgerSuccess/credit_and_debit
=== RUN   TestFormatLedgerSuccess/multiple_entries_on_same_date_ordered_by_description
=== RUN   TestFormatLedgerSuccess/final_order_tie_breaker_is_change
=== RUN   TestFormatLedgerSuccess/overlong_descriptions
=== RUN   TestFormatLedgerSuccess/euros
=== RUN   TestFormatLedgerSuccess/Dutch_locale
=== RUN   TestFormatLedgerSuccess/Dutch_negative_number_with_3_digits_before_decimal_point
=== RUN   TestFormatLedgerSuccess/American_negative_number_with_3_digits_before_decimal_point
--- PASS: TestFormatLedgerSuccess (0.00s)
    --- PASS: TestFormatLedgerSuccess/empty_ledger (0.00s)
    --- PASS: TestFormatLedgerSuccess/one_entry (0.00s)
    --- PASS: TestFormatLedgerSuccess/credit_and_debit (0.00s)
    --- PASS: TestFormatLedgerSuccess/multiple_entries_on_same_date_ordered_by_description (0.00s)
    --- PASS: TestFormatLedgerSuccess/final_order_tie_breaker_is_change (0.00s)
    --- PASS: TestFormatLedgerSuccess/overlong_descriptions (0.00s)
    --- PASS: TestFormatLedgerSuccess/euros (0.00s)
    --- PASS: TestFormatLedgerSuccess/Dutch_locale (0.00s)
    --- PASS: TestFormatLedgerSuccess/Dutch_negative_number_with_3_digits_before_decimal_point (0.00s)
    --- PASS: TestFormatLedgerSuccess/American_negative_number_with_3_digits_before_decimal_point (0.00s)
=== RUN   TestFormatLedgerFailure
=== RUN   TestFormatLedgerFailure/empty_currency
=== RUN   TestFormatLedgerFailure/invalid_currency
=== RUN   TestFormatLedgerFailure/empty_locale
=== RUN   TestFormatLedgerFailure/invalid_locale
=== RUN   TestFormatLedgerFailure/invalid_date_(way_too_high_month)
=== RUN   TestFormatLedgerFailure/invalid_date_(wrong_separator)
--- PASS: TestFormatLedgerFailure (0.00s)
    --- PASS: TestFormatLedgerFailure/empty_currency (0.00s)
    --- PASS: TestFormatLedgerFailure/invalid_currency (0.00s)
    --- PASS: TestFormatLedgerFailure/empty_locale (0.00s)
    --- PASS: TestFormatLedgerFailure/invalid_locale (0.00s)
    --- PASS: TestFormatLedgerFailure/invalid_date_(way_too_high_month) (0.00s)
    --- PASS: TestFormatLedgerFailure/invalid_date_(wrong_separator) (0.00s)
=== RUN   TestFormatLedgerNotChangeInput
--- PASS: TestFormatLedgerNotChangeInput (0.00s)
PASS
coverage: 96.2% of statements
ok  	ledger	0.003s	coverage: 96.2% of statements

real	0m0.186s
user	0m0.253s
sys	0m0.158s


 ==============================================================================

Running: go tool cover -func=coverage.out

ledger/ledger.go:39:	localizedDate		93.3%
ledger/ledger.go:70:	localizedHeader		100.0%
ledger/ledger.go:89:	localizedCurrency	100.0%
ledger/ledger.go:193:	sortEntries		85.7%
ledger/ledger.go:224:	FormatLedger		95.8%
total:			(statements)		96.2%

real	0m0.057s
user	0m0.084s
sys	0m0.089s


 ==============================================================================

Running: go tool cover -html coverage.out -o coverage.html


real	0m0.053s
user	0m0.079s
sys	0m0.082s


 ==============================================================================

Running: cover_annotate

Running: gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

224     	func FormatLedger(currency, locale string, entries []Entry) (string, error) {
225     		if len(entries) == 0 {
226     			if _, err := FormatLedger(currency, "en-US", []Entry{{Date: "2014-01-01", Description: "", Change: 0}}); err != nil {
227     				return "", err
228     			}
229     		}
230     	
231     		entriesCopy, err := sortEntries(entries)
232     	
233     		if err != nil {
234 MISS			return "", err
235     		}
236     	
237     		header, err := localizedHeader(locale)
238     	
239     		if err != nil {
240     			return "", err
241     		}
242     	
243     		var output strings.Builder
244     	
245     		output.WriteString(header)
246     	
247     		for _, entry := range entriesCopy {
248     			var description string
249     	
250     			if len(entry.Description) > 25 {
251     				description = fmt.Sprintf("% -22s...", entry.Description[:22])
252     			} else {
253     				description = fmt.Sprintf("% -25s", entry.Description)
254     			}
255     	
256     			dateLine, err := localizedDate(locale, entry.Date)
257     	
258     			if err != nil {
259     				return "", err
260     			}
261     	
262     			currencyLine, err := localizedCurrency(locale, currency, entry.Change)
263     	
264     			if err != nil {
265     				return "", err
266     			}
267     	
268     			output.WriteString(fmt.Sprintf("% -10s | %s | % 13s\n", dateLine, description, currencyLine))
269     		}
270     	
271     		return output.String(), nil
272     	}


39     	func localizedDate(locale, date string) (string, error) {
40     		if len(date) != 10 {
41     			return "", errors.New("wrong size date")
42     		}
43     	
44     		var output string
45     	
46     		d1 := date[0:4]
47     		d2 := date[4]
48     		d3 := date[5:7]
49     		d4 := date[7]
50     		d5 := date[8:10]
51     	
52     		if d2 != '-' || d4 != '-' {
53     			return "", errors.New("invalid date separator")
54     		}
55     	
56     		switch locale {
57     		case "nl-NL":
58     			output = fmt.Sprintf("%s-%s-%s", d5, d3, d1)
59     	
60     		case "en-US":
61     			output = fmt.Sprintf("%s/%s/%s", d3, d5, d1)
62     	
63     		default:
64 MISS			return output, errors.New("failed to render localized date")
65     		}
66     	
67     		return output, nil
68     	}


193     	func sortEntries(entries []Entry) ([]Entry, error) {
194     		entriesCopy := make([]Entry, len(entries), cap(entries))
195     	
196     		size := copy(entriesCopy, entries)
197     	
198     		if size != len(entries) {
199 MISS			return []Entry{}, errors.New("unable to copy the entries slice")
200     		}
201     	
202     		es := entriesCopy
203     	
204     		for len(es) > 1 {
205     			first, rest := es[0], es[1:]
206     	
207     			for i, e := range rest {
208     				if e.Date == first.Date && e.Description == first.Description && e.Change == first.Change {
209 MISS					continue
210     				}
211     	
212     				if e.Date < first.Date || e.Description < first.Description || e.Change < first.Change {
213     					es[0], es[i+1] = es[i+1], es[0]
214     				}
215     			}
216     	
217     			es = es[1:]
218     		}
219     	
220     		return entriesCopy, nil
221     	}


real	0m0.022s
user	0m0.019s
sys	0m0.030s

real	0m0.022s
user	0m0.019s
sys	0m0.030s


 ==============================================================================

Running: gotest -v -race -covermode=atomic ./...

=== RUN   TestFormatLedgerSuccess
=== RUN   TestFormatLedgerSuccess/empty_ledger
=== RUN   TestFormatLedgerSuccess/one_entry
=== RUN   TestFormatLedgerSuccess/credit_and_debit
=== RUN   TestFormatLedgerSuccess/multiple_entries_on_same_date_ordered_by_description
=== RUN   TestFormatLedgerSuccess/final_order_tie_breaker_is_change
=== RUN   TestFormatLedgerSuccess/overlong_descriptions
=== RUN   TestFormatLedgerSuccess/euros
=== RUN   TestFormatLedgerSuccess/Dutch_locale
=== RUN   TestFormatLedgerSuccess/Dutch_negative_number_with_3_digits_before_decimal_point
=== RUN   TestFormatLedgerSuccess/American_negative_number_with_3_digits_before_decimal_point
--- PASS: TestFormatLedgerSuccess (0.00s)
    --- PASS: TestFormatLedgerSuccess/empty_ledger (0.00s)
    --- PASS: TestFormatLedgerSuccess/one_entry (0.00s)
    --- PASS: TestFormatLedgerSuccess/credit_and_debit (0.00s)
    --- PASS: TestFormatLedgerSuccess/multiple_entries_on_same_date_ordered_by_description (0.00s)
    --- PASS: TestFormatLedgerSuccess/final_order_tie_breaker_is_change (0.00s)
    --- PASS: TestFormatLedgerSuccess/overlong_descriptions (0.00s)
    --- PASS: TestFormatLedgerSuccess/euros (0.00s)
    --- PASS: TestFormatLedgerSuccess/Dutch_locale (0.00s)
    --- PASS: TestFormatLedgerSuccess/Dutch_negative_number_with_3_digits_before_decimal_point (0.00s)
    --- PASS: TestFormatLedgerSuccess/American_negative_number_with_3_digits_before_decimal_point (0.00s)
=== RUN   TestFormatLedgerFailure
=== RUN   TestFormatLedgerFailure/empty_currency
=== RUN   TestFormatLedgerFailure/invalid_currency
=== RUN   TestFormatLedgerFailure/empty_locale
=== RUN   TestFormatLedgerFailure/invalid_locale
=== RUN   TestFormatLedgerFailure/invalid_date_(way_too_high_month)
=== RUN   TestFormatLedgerFailure/invalid_date_(wrong_separator)
--- PASS: TestFormatLedgerFailure (0.00s)
    --- PASS: TestFormatLedgerFailure/empty_currency (0.00s)
    --- PASS: TestFormatLedgerFailure/invalid_currency (0.00s)
    --- PASS: TestFormatLedgerFailure/empty_locale (0.00s)
    --- PASS: TestFormatLedgerFailure/invalid_locale (0.00s)
    --- PASS: TestFormatLedgerFailure/invalid_date_(way_too_high_month) (0.00s)
    --- PASS: TestFormatLedgerFailure/invalid_date_(wrong_separator) (0.00s)
=== RUN   TestFormatLedgerNotChangeInput
--- PASS: TestFormatLedgerNotChangeInput (0.00s)
PASS
coverage: 96.2% of statements
ok  	ledger	1.015s	coverage: 96.2% of statements

real	0m1.267s
user	0m0.302s
sys	0m0.190s


 ==============================================================================

Exit code: 0

real	0m1.628s
user	0m0.771s
sys	0m0.588s

real	0m1.630s
user	0m0.772s
sys	0m0.589s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

gotest -v --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: ledger
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
BenchmarkFormatLedger
BenchmarkFormatLedger-8   	   79789	     12738 ns/op	    7282 B/op	     243 allocs/op
PASS
ok  	ledger	1.173s

real	0m1.315s
user	0m1.402s
sys	0m0.166s

===============================================================================

gotest -v -tags bonus
=== RUN   TestFormatLedgerSuccess
=== RUN   TestFormatLedgerSuccess/empty_ledger
=== RUN   TestFormatLedgerSuccess/one_entry
=== RUN   TestFormatLedgerSuccess/credit_and_debit
=== RUN   TestFormatLedgerSuccess/multiple_entries_on_same_date_ordered_by_description
=== RUN   TestFormatLedgerSuccess/final_order_tie_breaker_is_change
=== RUN   TestFormatLedgerSuccess/overlong_descriptions
=== RUN   TestFormatLedgerSuccess/euros
=== RUN   TestFormatLedgerSuccess/Dutch_locale
=== RUN   TestFormatLedgerSuccess/Dutch_negative_number_with_3_digits_before_decimal_point
=== RUN   TestFormatLedgerSuccess/American_negative_number_with_3_digits_before_decimal_point
--- PASS: TestFormatLedgerSuccess (0.00s)
    --- PASS: TestFormatLedgerSuccess/empty_ledger (0.00s)
    --- PASS: TestFormatLedgerSuccess/one_entry (0.00s)
    --- PASS: TestFormatLedgerSuccess/credit_and_debit (0.00s)
    --- PASS: TestFormatLedgerSuccess/multiple_entries_on_same_date_ordered_by_description (0.00s)
    --- PASS: TestFormatLedgerSuccess/final_order_tie_breaker_is_change (0.00s)
    --- PASS: TestFormatLedgerSuccess/overlong_descriptions (0.00s)
    --- PASS: TestFormatLedgerSuccess/euros (0.00s)
    --- PASS: TestFormatLedgerSuccess/Dutch_locale (0.00s)
    --- PASS: TestFormatLedgerSuccess/Dutch_negative_number_with_3_digits_before_decimal_point (0.00s)
    --- PASS: TestFormatLedgerSuccess/American_negative_number_with_3_digits_before_decimal_point (0.00s)
=== RUN   TestFormatLedgerFailure
=== RUN   TestFormatLedgerFailure/empty_currency
=== RUN   TestFormatLedgerFailure/invalid_currency
=== RUN   TestFormatLedgerFailure/empty_locale
=== RUN   TestFormatLedgerFailure/invalid_locale
=== RUN   TestFormatLedgerFailure/invalid_date_(way_too_high_month)
=== RUN   TestFormatLedgerFailure/invalid_date_(wrong_separator)
--- PASS: TestFormatLedgerFailure (0.00s)
    --- PASS: TestFormatLedgerFailure/empty_currency (0.00s)
    --- PASS: TestFormatLedgerFailure/invalid_currency (0.00s)
    --- PASS: TestFormatLedgerFailure/empty_locale (0.00s)
    --- PASS: TestFormatLedgerFailure/invalid_locale (0.00s)
    --- PASS: TestFormatLedgerFailure/invalid_date_(way_too_high_month) (0.00s)
    --- PASS: TestFormatLedgerFailure/invalid_date_(wrong_separator) (0.00s)
=== RUN   TestFormatLedgerNotChangeInput
--- PASS: TestFormatLedgerNotChangeInput (0.00s)
PASS
ok  	ledger	0.002s

real	0m0.132s
user	0m0.178s
sys	0m0.142s

===============================================================================

benchstat benchstat-old.txt benchstat-new.txt
benchstat-old.txt:5: missing iteration count
benchstat-new.txt:5: missing iteration count
goos: linux
goarch: amd64
pkg: ledger
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
               │ benchstat-new.txt │
               │      sec/op       │
FormatLedger-8        12.74µ ± ∞ ¹
¹ need >= 6 samples for confidence interval at level 0.95

               │ benchstat-new.txt │
               │       B/op        │
FormatLedger-8       7.111Ki ± ∞ ¹
¹ need >= 6 samples for confidence interval at level 0.95

               │ benchstat-new.txt │
               │     allocs/op     │
FormatLedger-8         243.0 ± ∞ ¹
¹ need >= 6 samples for confidence interval at level 0.95

cpu: Intel(R) Core(TM) i7-7Y75 CPU @ 1.30GHz
               │ benchstat-old.txt │
               │      sec/op       │
FormatLedger-4        46.22µ ± ∞ ¹
¹ need >= 6 samples for confidence interval at level 0.95

               │ benchstat-old.txt │
               │       B/op        │
FormatLedger-4       7.110Ki ± ∞ ¹
¹ need >= 6 samples for confidence interval at level 0.95

               │ benchstat-old.txt │
               │     allocs/op     │
FormatLedger-4         243.0 ± ∞ ¹
¹ need >= 6 samples for confidence interval at level 0.95

real	0m0.003s
user	0m0.001s
sys	0m0.001s

===============================================================================

gomarkdoc --output ledger-doc.md

real	0m0.011s
user	0m0.004s
sys	0m0.007s

===============================================================================

go doc -all ledger
package ledger // import "ledger"

Package ledger prints a nicely formatted ledger, given a locale (American or
Dutch) and a currency (US dollar or euro).

FUNCTIONS

func FormatLedger(currency, locale string, entries []Entry) (string, error)
    FormatLedger returns a string with the whole ledger.


TYPES

type Entry struct {
	Date        string // "Y-m-d"
	Description string
	Change      int // in cents
}
    Entry type consists of a date, description and change.


real	0m0.038s
user	0m0.025s
sys	0m0.043s


===============================================================================

