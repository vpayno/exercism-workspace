Running automated test file(s):

Go packages: stringset 


===============================================================================

Running: ../../.github/citools/go/go-lint-golangci-lint

Running GoLangCi-Lint

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.030s
user	0m0.025s
sys	0m0.021s


 ==============================================================================

Running: golangci-lint run --enable-all ./...

level=warning msg="[runner] The linter 'ifshort' is deprecated (since v1.48.0) due to: The repository of the linter has been deprecated by the owner. "
level=warning msg="[runner] The linter 'maligned' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. Replaced by govet 'fieldalignment'."
level=warning msg="[runner] The linter 'scopelint' is deprecated (since v1.39.0) due to: The repository of the linter has been deprecated by the owner. Replaced by exportloopref."
level=warning msg="[runner] The linter 'golint' is deprecated (since v1.41.0) due to: The repository of the linter has been archived by the owner. Replaced by revive."
level=warning msg="[runner] The linter 'interfacer' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. "
level=warning msg="[runner] The linter 'varcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'exhaustivestruct' is deprecated (since v1.46.0) due to: The owner seems to have abandoned the linter. Replaced by exhaustruct."
level=warning msg="[runner] The linter 'structcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'deadcode' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'nosnakecase' is deprecated (since v1.48.1) due to: The repository of the linter has been deprecated by the owner. Replaced by revive(var-naming)."
cases_test.go:9:42: Comment should end in a period (godot)
	// unary function, bool result (IsEmpty)
	                                        ^
cases_test.go:15:44: Comment should end in a period (godot)
	// set-element function, bool result (Has)
	                                          ^
cases_test.go:22:59: Comment should end in a period (godot)
	// binary function, bool result (Subset, Disjoint, Equal)
	                                                         ^
custom_set.go:37: File is not `gofumpt`-ed (gofumpt)
	var first = true
custom_set_test.go:50:22: Using the variable on range scope `tc` in function literal (scopelint)
			s := NewFromSlice(tc.set)
			                  ^
custom_set_test.go:52:14: Using the variable on range scope `tc` in function literal (scopelint)
			if got != tc.want {
			          ^
custom_set_test.go:53:50: Using the variable on range scope `tc` in function literal (scopelint)
				t.Errorf("%v IsEmpty = %t, want %t", s, got, tc.want)
				                                             ^
custom_set_test.go:42:2: only one cuddle assignment allowed before if statement (wsl)
	if got != want1 && got != want2 { // order undefined
	^
custom_set_test.go:146:2: assignments should only be cuddled with other assignments (wsl)
	s := make([]string, nAdd)
	^
custom_set_test.go:147:2: only one cuddle assignment allowed before range statement (wsl)
	for i := range s {
	^
custom_set_test.go:150:2: expressions should not be cuddled with blocks (wsl)
	b.ResetTimer()
	^
custom_set_test.go:151:2: only one cuddle assignment allowed before for statement (wsl)
	for i := 0; i < b.N; i++ {
	^
cases_test.go:46:5: emptyCases is a global variable (gochecknoglobals)
var emptyCases = []unaryBoolCase{
    ^
cases_test.go:60:5: containsCases is a global variable (gochecknoglobals)
var containsCases = []eleBoolCase{
    ^
cases_test.go:82:5: subsetCases is a global variable (gochecknoglobals)
var subsetCases = []binBoolCase{
    ^
cases_test.go:122:5: disjointCases is a global variable (gochecknoglobals)
var disjointCases = []binBoolCase{
    ^
cases_test.go:156:5: equalCases is a global variable (gochecknoglobals)
var equalCases = []binBoolCase{
    ^
cases_test.go:196:5: addCases is a global variable (gochecknoglobals)
var addCases = []eleOpCase{
    ^
cases_test.go:218:5: intersectionCases is a global variable (gochecknoglobals)
var intersectionCases = []binOpCase{
    ^
cases_test.go:252:5: differenceCases is a global variable (gochecknoglobals)
var differenceCases = []binOpCase{
    ^
cases_test.go:280:5: unionCases is a global variable (gochecknoglobals)
var unionCases = []binOpCase{
    ^
custom_set_test.go:14:2: variable 'want' is only used in the if-statement (custom_set_test.go:15:2); consider using short syntax (ifshort)
	want := "{}"
	^
custom_set_test.go:40:2: variable 'want1' is only used in the if-statement (custom_set_test.go:42:2); consider using short syntax (ifshort)
	want1 := `{"a", "b"}`
	^
custom_set_test.go:41:2: variable 'want2' is only used in the if-statement (custom_set_test.go:42:2); consider using short syntax (ifshort)
	want2 := `{"b", "a"}`
	^
custom_set_examples_test.go:24:6: ExampleSet_IsEmpty contains underscore. You should use mixedCap or MixedCap. (nosnakecase)
func ExampleSet_IsEmpty() {
     ^
custom_set_examples_test.go:37:6: ExampleSet_Add contains underscore. You should use mixedCap or MixedCap. (nosnakecase)
func ExampleSet_Add() {
     ^
custom_set_examples_test.go:54:6: ExampleSet_Has contains underscore. You should use mixedCap or MixedCap. (nosnakecase)
func ExampleSet_Has() {
     ^
custom_set_test.go:12:1: Function TestNew missing the call to method parallel (paralleltest)
func TestNew(t *testing.T) {
^
custom_set_test.go:20:1: Function TestNewFromSlice missing the call to method parallel (paralleltest)
func TestNewFromSlice(t *testing.T) {
^
custom_set_test.go:47:1: Function TestIsEmpty missing the call to method parallel (paralleltest)
func TestIsEmpty(t *testing.T) {
^
custom_set_test.go:48:2: Range statement for test TestIsEmpty missing the call to method parallel in test Run (paralleltest)
	for _, tc := range emptyCases {
	^
custom_set_test.go:59:1: Function TestHas missing the call to method parallel (paralleltest)
func TestHas(t *testing.T) {
^
custom_set_test.go:60:2: Range statement for test TestHas missing the call to method parallel in test Run (paralleltest)
	for _, tc := range containsCases {
	^
custom_set_test.go:85:1: Function TestSubset missing the call to method parallel (paralleltest)
func TestSubset(t *testing.T) {
^
custom_set_test.go:89:1: Function TestDisjoint missing the call to method parallel (paralleltest)
func TestDisjoint(t *testing.T) {
^
custom_set_test.go:93:1: Function TestEqual missing the call to method parallel (paralleltest)
func TestEqual(t *testing.T) {
^
custom_set_test.go:97:1: Function TestAdd missing the call to method parallel (paralleltest)
func TestAdd(t *testing.T) {
^
custom_set_test.go:98:2: Range statement for test TestAdd missing the call to method parallel in test Run (paralleltest)
	for _, tc := range addCases {
	^
custom_set_test.go:125:1: Function TestIntersection missing the call to method parallel (paralleltest)
func TestIntersection(t *testing.T) {
^
custom_set_test.go:129:1: Function TestDifference missing the call to method parallel (paralleltest)
func TestDifference(t *testing.T) {
^
custom_set_test.go:133:1: Function TestUnion missing the call to method parallel (paralleltest)
func TestUnion(t *testing.T) {
^
cases_test.go:1:9: package should be `stringset_test` instead of `stringset` (testpackage)
package stringset
        ^
custom_set_examples_test.go:1:9: package should be `stringset_test` instead of `stringset` (testpackage)
package stringset
        ^
custom_set_test.go:2:9: package should be `stringset_test` instead of `stringset` (testpackage)
package stringset
        ^
custom_set_test.go:72:6: parameter *testing.T should be the first or after context.Context (thelper)
func testBinBool(name string, f func(Set, Set) bool, cases []binBoolCase, t *testing.T) {
     ^
custom_set_test.go:111:6: parameter *testing.T should be the first or after context.Context (thelper)
func testBinOp(name string, f func(Set, Set) Set, cases []binOpCase, t *testing.T) {
     ^
custom_set_test.go:142:6: parameter *testing.B should be the first or after context.Context (thelper)
func bench(nAdd int, b *testing.B) {
     ^
custom_set.go:147:2: variable name 'd' is too short for the scope of its usage (varnamelen)
	d := New()
	^
custom_set.go:47:6: variable name 'v' is too short for the scope of its usage (varnamelen)
	for _, v := range list {
	    ^
custom_set.go:130:2: variable name 'i' is too short for the scope of its usage (varnamelen)
	i := New()
	^
custom_set.go:33:6: variable name 'sb' is too short for the scope of its usage (varnamelen)
	var sb strings.Builder
	    ^
custom_set.go:160:2: variable name 'u' is too short for the scope of its usage (varnamelen)
	u := New()
	^
custom_set_examples_test.go:38:2: variable name 's1' is too short for the scope of its usage (varnamelen)
	s1 := New()
	^
custom_set_test.go:73:6: variable name 'tc' is too short for the scope of its usage (varnamelen)
	for _, tc := range cases {
	    ^
custom_set.go:18:2: variable name 's' is too short for the scope of its usage (varnamelen)
	s := New()
	^
custom_set.go:129:19: parameter name 's1' is too short for the scope of its usage (varnamelen)
func Intersection(s1, s2 Set) Set {
                  ^
custom_set.go:83:13: parameter name 's1' is too short for the scope of its usage (varnamelen)
func Subset(s1, s2 Set) bool {
            ^
custom_set.go:159:12: parameter name 's2' is too short for the scope of its usage (varnamelen)
func Union(s1, s2 Set) Set {
           ^
custom_set.go:114:12: parameter name 's2' is too short for the scope of its usage (varnamelen)
func Equal(s1, s2 Set) bool {
           ^

real	0m0.631s
user	0m0.994s
sys	0m0.597s


 ==============================================================================

Exit code: -1

real	0m0.681s
user	0m1.034s
sys	0m0.631s

real	0m0.683s
user	0m1.035s
sys	0m0.633s

===============================================================================

Running: ../../.github/citools/go/go-lint-revive

Running Go Lint Revive

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.018s
user	0m0.011s
sys	0m0.015s


 ==============================================================================

Running: revive -formatter=stylish ./...


real	0m0.091s
user	0m0.056s
sys	0m0.066s


 ==============================================================================

Exit code: 0

real	0m0.122s
user	0m0.076s
sys	0m0.088s

real	0m0.124s
user	0m0.077s
sys	0m0.089s

===============================================================================

Running: ../../.github/citools/go/go-lint-ineffassign
../run-tests: line 41: .github/citools/go/go-lint-ineffassign: No such file or directory

real	0m0.001s
user	0m0.000s
sys	0m0.001s

===============================================================================

Running: ../../.github/citools/go/go-lint-go-consistent

Running Go go-consistent

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.033s
user	0m0.030s
sys	0m0.022s


 ==============================================================================

Running: go-consistent -v ./...

	info: check "./."
internal error: package "sort" without types was imported from "stringset"

real	0m0.095s
user	0m0.119s
sys	0m0.123s


 ==============================================================================

Exit code: -1

real	0m0.141s
user	0m0.156s
sys	0m0.159s

real	0m0.145s
user	0m0.158s
sys	0m0.160s

===============================================================================

Running: ../../.github/citools/go/go-lint-staticcheck

Running Go StaticCheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.020s
user	0m0.013s
sys	0m0.016s


 ==============================================================================

Running: staticcheck -checks=all ./...

custom_set.go:1:1: at least one file in a package should have a package comment (ST1000)

real	0m0.169s
user	0m0.251s
sys	0m0.119s


 ==============================================================================

Exit code: -1

real	0m0.200s
user	0m0.268s
sys	0m0.145s

real	0m0.201s
user	0m0.269s
sys	0m0.146s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocritic

Running Go gocritic

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.021s
user	0m0.018s
sys	0m0.013s


 ==============================================================================

Running: gocritic check -enableAll ./...

./custom_set_examples_test.go:9:2: commentedOutCode: may want to remove commented-out code

real	0m0.806s
user	0m1.843s
sys	0m0.302s


 ==============================================================================

Exit code: -1

real	0m0.836s
user	0m1.867s
sys	0m0.323s

real	0m0.839s
user	0m1.868s
sys	0m0.324s

===============================================================================

Running: ../../.github/citools/go/go-lint-go_vet

Running Go Vet

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.018s
user	0m0.008s
sys	0m0.021s


 ==============================================================================

Running: go vet ./...


real	0m0.069s
user	0m0.099s
sys	0m0.101s


 ==============================================================================

Exit code: 0

real	0m0.098s
user	0m0.112s
sys	0m0.133s

real	0m0.101s
user	0m0.114s
sys	0m0.133s

===============================================================================

Running: ../../.github/citools/go/go-fixer-go_fix

Running go fix

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.019s
user	0m0.014s
sys	0m0.015s


 ==============================================================================

Running: go fix ./...


real	0m0.027s
user	0m0.024s
sys	0m0.013s


 ==============================================================================

Exit code: 0

real	0m0.056s
user	0m0.042s
sys	0m0.039s

real	0m0.058s
user	0m0.043s
sys	0m0.040s

===============================================================================

Running: ../../.github/citools/go/go-lint-errcheck

Running Go errcheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.023s
user	0m0.014s
sys	0m0.024s


 ==============================================================================

Running: errcheck ./...


real	0m0.468s
user	0m1.286s
sys	0m0.242s


 ==============================================================================

Exit code: 0

real	0m0.507s
user	0m1.306s
sys	0m0.278s

real	0m0.509s
user	0m1.308s
sys	0m0.279s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocyclo

Running Go gocyclo

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.018s
user	0m0.011s
sys	0m0.016s


 ==============================================================================

Running: gocyclo .

9 stringset Subset custom_set.go:83:1
6 stringset TestNewFromSlice custom_set_test.go:20:1
5 stringset (Set).String custom_set.go:28:1
4 stringset bench custom_set_test.go:142:1
4 stringset Intersection custom_set.go:129:1
4 stringset Equal custom_set.go:114:1
3 stringset testBinOp custom_set_test.go:111:1
3 stringset TestAdd custom_set_test.go:97:1
3 stringset testBinBool custom_set_test.go:72:1
3 stringset TestHas custom_set_test.go:59:1
3 stringset TestIsEmpty custom_set_test.go:47:1
3 stringset Union custom_set.go:159:1
3 stringset Difference custom_set.go:146:1
2 stringset TestNew custom_set_test.go:12:1
2 stringset NewFromSlice custom_set.go:17:1
1 stringset BenchmarkNewFromSlice1e4 custom_set_test.go:140:1
1 stringset BenchmarkNewFromSlice1e3 custom_set_test.go:139:1
1 stringset BenchmarkNewFromSlice1e2 custom_set_test.go:138:1
1 stringset BenchmarkNewFromSlice1e1 custom_set_test.go:137:1
1 stringset TestUnion custom_set_test.go:133:1
1 stringset TestDifference custom_set_test.go:129:1
1 stringset TestIntersection custom_set_test.go:125:1
1 stringset TestEqual custom_set_test.go:93:1
1 stringset TestDisjoint custom_set_test.go:89:1
1 stringset TestSubset custom_set_test.go:85:1
1 stringset ExampleUnion custom_set_examples_test.go:139:1
1 stringset ExampleDifference custom_set_examples_test.go:128:1
1 stringset ExampleIntersection custom_set_examples_test.go:117:1
1 stringset ExampleEqual custom_set_examples_test.go:99:1
1 stringset ExampleDisjoint custom_set_examples_test.go:80:1
1 stringset ExampleSubset custom_set_examples_test.go:69:1
1 stringset ExampleSet_Has custom_set_examples_test.go:54:1
1 stringset ExampleSet_Add custom_set_examples_test.go:37:1
1 stringset ExampleSet_IsEmpty custom_set_examples_test.go:24:1
1 stringset ExampleNewFromSlice custom_set_examples_test.go:13:1
1 stringset ExampleNew custom_set_examples_test.go:5:1
1 stringset Disjoint custom_set.go:109:1
1 stringset (Set).Add custom_set.go:77:1
1 stringset (Set).Has custom_set.go:70:1
1 stringset (Set).IsEmpty custom_set.go:65:1
1 stringset New custom_set.go:12:1

real	0m0.003s
user	0m0.002s
sys	0m0.001s


 ==============================================================================

Exit code: 0

real	0m0.029s
user	0m0.018s
sys	0m0.025s

real	0m0.032s
user	0m0.018s
sys	0m0.028s

===============================================================================

Running: ../../.github/citools/go/go-lint-misspell

Running Go misspell

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: misspell .


real	0m0.026s
user	0m0.032s
sys	0m0.013s


 ==============================================================================

Exit code: 0

real	0m0.037s
user	0m0.037s
sys	0m0.022s

real	0m0.039s
user	0m0.038s
sys	0m0.023s

===============================================================================

Running: ../../.github/citools/go/go-lint-gosec

Running Go GoSec

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.031s
user	0m0.023s
sys	0m0.025s


 ==============================================================================

Running: gosec ./...

[gosec] 2023/09/07 00:22:03 Including rules: default
[gosec] 2023/09/07 00:22:03 Excluding rules: default
[gosec] 2023/09/07 00:22:03 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/custom-set
[gosec] 2023/09/07 00:22:03 Checking package: stringset
[gosec] 2023/09/07 00:22:03 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/custom-set/custom_set.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 1
  Lines  : 171
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.126s
user	0m0.169s
sys	0m0.114s


 ==============================================================================

Exit code: 0

real	0m0.174s
user	0m0.198s
sys	0m0.153s

real	0m0.175s
user	0m0.199s
sys	0m0.153s

===============================================================================

Running: ../../.github/citools/go/go-test-cover-report

Running Go Test, Coverage & Reports

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.025s
user	0m0.015s
sys	0m0.021s


 ==============================================================================

Running: gotest -v -covermode=count -coverprofile coverage.out ./...

=== RUN   TestNew
--- PASS: TestNew (0.00s)
=== RUN   TestNewFromSlice
--- PASS: TestNewFromSlice (0.00s)
=== RUN   TestIsEmpty
=== RUN   TestIsEmpty/sets_with_no_elements_are_empty
=== RUN   TestIsEmpty/sets_with_elements_are_not_empty
--- PASS: TestIsEmpty (0.00s)
    --- PASS: TestIsEmpty/sets_with_no_elements_are_empty (0.00s)
    --- PASS: TestIsEmpty/sets_with_elements_are_not_empty (0.00s)
=== RUN   TestHas
=== RUN   TestHas/nothing_is_contained_in_an_empty_set
=== RUN   TestHas/when_the_element_is_in_the_set
=== RUN   TestHas/when_the_element_is_not_in_the_set
--- PASS: TestHas (0.00s)
    --- PASS: TestHas/nothing_is_contained_in_an_empty_set (0.00s)
    --- PASS: TestHas/when_the_element_is_in_the_set (0.00s)
    --- PASS: TestHas/when_the_element_is_not_in_the_set (0.00s)
=== RUN   TestSubset
=== RUN   TestSubset/empty_set_is_a_subset_of_another_empty_set
=== RUN   TestSubset/empty_set_is_a_subset_of_non-empty_set
=== RUN   TestSubset/non-empty_set_is_not_a_subset_of_empty_set
=== RUN   TestSubset/set_is_a_subset_of_set_with_exact_same_elements
=== RUN   TestSubset/set_is_a_subset_of_larger_set_with_same_elements
=== RUN   TestSubset/set_is_not_a_subset_of_set_that_does_not_contain_its_elements
--- PASS: TestSubset (0.00s)
    --- PASS: TestSubset/empty_set_is_a_subset_of_another_empty_set (0.00s)
    --- PASS: TestSubset/empty_set_is_a_subset_of_non-empty_set (0.00s)
    --- PASS: TestSubset/non-empty_set_is_not_a_subset_of_empty_set (0.00s)
    --- PASS: TestSubset/set_is_a_subset_of_set_with_exact_same_elements (0.00s)
    --- PASS: TestSubset/set_is_a_subset_of_larger_set_with_same_elements (0.00s)
    --- PASS: TestSubset/set_is_not_a_subset_of_set_that_does_not_contain_its_elements (0.00s)
=== RUN   TestDisjoint
=== RUN   TestDisjoint/the_empty_set_is_disjoint_with_itself
=== RUN   TestDisjoint/empty_set_is_disjoint_with_non-empty_set
=== RUN   TestDisjoint/non-empty_set_is_disjoint_with_empty_set
=== RUN   TestDisjoint/sets_are_not_disjoint_if_they_share_an_element
=== RUN   TestDisjoint/sets_are_disjoint_if_they_share_no_elements
--- PASS: TestDisjoint (0.00s)
    --- PASS: TestDisjoint/the_empty_set_is_disjoint_with_itself (0.00s)
    --- PASS: TestDisjoint/empty_set_is_disjoint_with_non-empty_set (0.00s)
    --- PASS: TestDisjoint/non-empty_set_is_disjoint_with_empty_set (0.00s)
    --- PASS: TestDisjoint/sets_are_not_disjoint_if_they_share_an_element (0.00s)
    --- PASS: TestDisjoint/sets_are_disjoint_if_they_share_no_elements (0.00s)
=== RUN   TestEqual
=== RUN   TestEqual/empty_sets_are_equal
=== RUN   TestEqual/empty_set_is_not_equal_to_non-empty_set
=== RUN   TestEqual/non-empty_set_is_not_equal_to_empty_set
=== RUN   TestEqual/sets_with_the_same_elements_are_equal
=== RUN   TestEqual/sets_with_different_elements_are_not_equal
=== RUN   TestEqual/set_is_not_equal_to_larger_set_with_same_elements
--- PASS: TestEqual (0.00s)
    --- PASS: TestEqual/empty_sets_are_equal (0.00s)
    --- PASS: TestEqual/empty_set_is_not_equal_to_non-empty_set (0.00s)
    --- PASS: TestEqual/non-empty_set_is_not_equal_to_empty_set (0.00s)
    --- PASS: TestEqual/sets_with_the_same_elements_are_equal (0.00s)
    --- PASS: TestEqual/sets_with_different_elements_are_not_equal (0.00s)
    --- PASS: TestEqual/set_is_not_equal_to_larger_set_with_same_elements (0.00s)
=== RUN   TestAdd
=== RUN   TestAdd/add_to_empty_set
=== RUN   TestAdd/add_to_non-empty_set
=== RUN   TestAdd/adding_an_existing_element_does_not_change_the_set
--- PASS: TestAdd (0.00s)
    --- PASS: TestAdd/add_to_empty_set (0.00s)
    --- PASS: TestAdd/add_to_non-empty_set (0.00s)
    --- PASS: TestAdd/adding_an_existing_element_does_not_change_the_set (0.00s)
=== RUN   TestIntersection
=== RUN   TestIntersection/intersection_of_two_empty_sets_is_an_empty_set
=== RUN   TestIntersection/intersection_of_an_empty_set_and_non-empty_set_is_an_empty_set
=== RUN   TestIntersection/intersection_of_a_non-empty_set_and_an_empty_set_is_an_empty_set
=== RUN   TestIntersection/intersection_of_two_sets_with_no_shared_elements_is_an_empty_set
=== RUN   TestIntersection/intersection_of_two_sets_with_shared_elements_is_a_set_of_the_shared_elements
--- PASS: TestIntersection (0.00s)
    --- PASS: TestIntersection/intersection_of_two_empty_sets_is_an_empty_set (0.00s)
    --- PASS: TestIntersection/intersection_of_an_empty_set_and_non-empty_set_is_an_empty_set (0.00s)
    --- PASS: TestIntersection/intersection_of_a_non-empty_set_and_an_empty_set_is_an_empty_set (0.00s)
    --- PASS: TestIntersection/intersection_of_two_sets_with_no_shared_elements_is_an_empty_set (0.00s)
    --- PASS: TestIntersection/intersection_of_two_sets_with_shared_elements_is_a_set_of_the_shared_elements (0.00s)
=== RUN   TestDifference
=== RUN   TestDifference/difference_of_two_empty_sets_is_an_empty_set
=== RUN   TestDifference/difference_of_empty_set_and_non-empty_set_is_an_empty_set
=== RUN   TestDifference/difference_of_a_non-empty_set_and_an_empty_set_is_the_non-empty_set
=== RUN   TestDifference/difference_of_two_non-empty_sets_is_a_set_of_elements_that_are_only_in_the_first_set
--- PASS: TestDifference (0.00s)
    --- PASS: TestDifference/difference_of_two_empty_sets_is_an_empty_set (0.00s)
    --- PASS: TestDifference/difference_of_empty_set_and_non-empty_set_is_an_empty_set (0.00s)
    --- PASS: TestDifference/difference_of_a_non-empty_set_and_an_empty_set_is_the_non-empty_set (0.00s)
    --- PASS: TestDifference/difference_of_two_non-empty_sets_is_a_set_of_elements_that_are_only_in_the_first_set (0.00s)
=== RUN   TestUnion
=== RUN   TestUnion/union_of_empty_sets_is_an_empty_set
=== RUN   TestUnion/union_of_an_empty_set_and_non-empty_set_is_the_non-empty_set
=== RUN   TestUnion/union_of_a_non-empty_set_and_empty_set_is_the_non-empty_set
=== RUN   TestUnion/union_of_non-empty_sets_contains_all_unique_elements
--- PASS: TestUnion (0.00s)
    --- PASS: TestUnion/union_of_empty_sets_is_an_empty_set (0.00s)
    --- PASS: TestUnion/union_of_an_empty_set_and_non-empty_set_is_the_non-empty_set (0.00s)
    --- PASS: TestUnion/union_of_a_non-empty_set_and_empty_set_is_the_non-empty_set (0.00s)
    --- PASS: TestUnion/union_of_non-empty_sets_contains_all_unique_elements (0.00s)
=== RUN   ExampleNew
--- PASS: ExampleNew (0.00s)
=== RUN   ExampleNewFromSlice
--- PASS: ExampleNewFromSlice (0.00s)
=== RUN   ExampleSet_IsEmpty
--- PASS: ExampleSet_IsEmpty (0.00s)
=== RUN   ExampleSet_Add
--- PASS: ExampleSet_Add (0.00s)
=== RUN   ExampleSet_Has
--- PASS: ExampleSet_Has (0.00s)
=== RUN   ExampleSubset
--- PASS: ExampleSubset (0.00s)
=== RUN   ExampleDisjoint
--- PASS: ExampleDisjoint (0.00s)
=== RUN   ExampleEqual
--- PASS: ExampleEqual (0.00s)
=== RUN   ExampleIntersection
--- PASS: ExampleIntersection (0.00s)
=== RUN   ExampleDifference
--- PASS: ExampleDifference (0.00s)
=== RUN   ExampleUnion
--- PASS: ExampleUnion (0.00s)
PASS
coverage: 100.0% of statements
ok  	stringset	0.006s	coverage: 100.0% of statements

real	0m0.223s
user	0m0.315s
sys	0m0.173s


 ==============================================================================

Running: go tool cover -func=coverage.out

stringset/custom_set.go:12:	New		100.0%
stringset/custom_set.go:17:	NewFromSlice	100.0%
stringset/custom_set.go:28:	String		100.0%
stringset/custom_set.go:65:	IsEmpty		100.0%
stringset/custom_set.go:70:	Has		100.0%
stringset/custom_set.go:77:	Add		100.0%
stringset/custom_set.go:83:	Subset		100.0%
stringset/custom_set.go:109:	Disjoint	100.0%
stringset/custom_set.go:114:	Equal		100.0%
stringset/custom_set.go:129:	Intersection	100.0%
stringset/custom_set.go:146:	Difference	100.0%
stringset/custom_set.go:159:	Union		100.0%
total:				(statements)	100.0%

real	0m0.047s
user	0m0.047s
sys	0m0.069s


 ==============================================================================

Running: go tool cover -html coverage.out -o coverage.html


real	0m0.039s
user	0m0.046s
sys	0m0.058s


 ==============================================================================

Running: cover_annotate

Running: gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

real	0m0.018s
user	0m0.007s
sys	0m0.022s

real	0m0.018s
user	0m0.007s
sys	0m0.022s


 ==============================================================================

Running: gotest -v -race -covermode=atomic ./...

=== RUN   TestNew
--- PASS: TestNew (0.00s)
=== RUN   TestNewFromSlice
--- PASS: TestNewFromSlice (0.00s)
=== RUN   TestIsEmpty
=== RUN   TestIsEmpty/sets_with_no_elements_are_empty
=== RUN   TestIsEmpty/sets_with_elements_are_not_empty
--- PASS: TestIsEmpty (0.00s)
    --- PASS: TestIsEmpty/sets_with_no_elements_are_empty (0.00s)
    --- PASS: TestIsEmpty/sets_with_elements_are_not_empty (0.00s)
=== RUN   TestHas
=== RUN   TestHas/nothing_is_contained_in_an_empty_set
=== RUN   TestHas/when_the_element_is_in_the_set
=== RUN   TestHas/when_the_element_is_not_in_the_set
--- PASS: TestHas (0.00s)
    --- PASS: TestHas/nothing_is_contained_in_an_empty_set (0.00s)
    --- PASS: TestHas/when_the_element_is_in_the_set (0.00s)
    --- PASS: TestHas/when_the_element_is_not_in_the_set (0.00s)
=== RUN   TestSubset
=== RUN   TestSubset/empty_set_is_a_subset_of_another_empty_set
=== RUN   TestSubset/empty_set_is_a_subset_of_non-empty_set
=== RUN   TestSubset/non-empty_set_is_not_a_subset_of_empty_set
=== RUN   TestSubset/set_is_a_subset_of_set_with_exact_same_elements
=== RUN   TestSubset/set_is_a_subset_of_larger_set_with_same_elements
=== RUN   TestSubset/set_is_not_a_subset_of_set_that_does_not_contain_its_elements
--- PASS: TestSubset (0.00s)
    --- PASS: TestSubset/empty_set_is_a_subset_of_another_empty_set (0.00s)
    --- PASS: TestSubset/empty_set_is_a_subset_of_non-empty_set (0.00s)
    --- PASS: TestSubset/non-empty_set_is_not_a_subset_of_empty_set (0.00s)
    --- PASS: TestSubset/set_is_a_subset_of_set_with_exact_same_elements (0.00s)
    --- PASS: TestSubset/set_is_a_subset_of_larger_set_with_same_elements (0.00s)
    --- PASS: TestSubset/set_is_not_a_subset_of_set_that_does_not_contain_its_elements (0.00s)
=== RUN   TestDisjoint
=== RUN   TestDisjoint/the_empty_set_is_disjoint_with_itself
=== RUN   TestDisjoint/empty_set_is_disjoint_with_non-empty_set
=== RUN   TestDisjoint/non-empty_set_is_disjoint_with_empty_set
=== RUN   TestDisjoint/sets_are_not_disjoint_if_they_share_an_element
=== RUN   TestDisjoint/sets_are_disjoint_if_they_share_no_elements
--- PASS: TestDisjoint (0.00s)
    --- PASS: TestDisjoint/the_empty_set_is_disjoint_with_itself (0.00s)
    --- PASS: TestDisjoint/empty_set_is_disjoint_with_non-empty_set (0.00s)
    --- PASS: TestDisjoint/non-empty_set_is_disjoint_with_empty_set (0.00s)
    --- PASS: TestDisjoint/sets_are_not_disjoint_if_they_share_an_element (0.00s)
    --- PASS: TestDisjoint/sets_are_disjoint_if_they_share_no_elements (0.00s)
=== RUN   TestEqual
=== RUN   TestEqual/empty_sets_are_equal
=== RUN   TestEqual/empty_set_is_not_equal_to_non-empty_set
=== RUN   TestEqual/non-empty_set_is_not_equal_to_empty_set
=== RUN   TestEqual/sets_with_the_same_elements_are_equal
=== RUN   TestEqual/sets_with_different_elements_are_not_equal
=== RUN   TestEqual/set_is_not_equal_to_larger_set_with_same_elements
--- PASS: TestEqual (0.00s)
    --- PASS: TestEqual/empty_sets_are_equal (0.00s)
    --- PASS: TestEqual/empty_set_is_not_equal_to_non-empty_set (0.00s)
    --- PASS: TestEqual/non-empty_set_is_not_equal_to_empty_set (0.00s)
    --- PASS: TestEqual/sets_with_the_same_elements_are_equal (0.00s)
    --- PASS: TestEqual/sets_with_different_elements_are_not_equal (0.00s)
    --- PASS: TestEqual/set_is_not_equal_to_larger_set_with_same_elements (0.00s)
=== RUN   TestAdd
=== RUN   TestAdd/add_to_empty_set
=== RUN   TestAdd/add_to_non-empty_set
=== RUN   TestAdd/adding_an_existing_element_does_not_change_the_set
--- PASS: TestAdd (0.00s)
    --- PASS: TestAdd/add_to_empty_set (0.00s)
    --- PASS: TestAdd/add_to_non-empty_set (0.00s)
    --- PASS: TestAdd/adding_an_existing_element_does_not_change_the_set (0.00s)
=== RUN   TestIntersection
=== RUN   TestIntersection/intersection_of_two_empty_sets_is_an_empty_set
=== RUN   TestIntersection/intersection_of_an_empty_set_and_non-empty_set_is_an_empty_set
=== RUN   TestIntersection/intersection_of_a_non-empty_set_and_an_empty_set_is_an_empty_set
=== RUN   TestIntersection/intersection_of_two_sets_with_no_shared_elements_is_an_empty_set
=== RUN   TestIntersection/intersection_of_two_sets_with_shared_elements_is_a_set_of_the_shared_elements
--- PASS: TestIntersection (0.00s)
    --- PASS: TestIntersection/intersection_of_two_empty_sets_is_an_empty_set (0.00s)
    --- PASS: TestIntersection/intersection_of_an_empty_set_and_non-empty_set_is_an_empty_set (0.00s)
    --- PASS: TestIntersection/intersection_of_a_non-empty_set_and_an_empty_set_is_an_empty_set (0.00s)
    --- PASS: TestIntersection/intersection_of_two_sets_with_no_shared_elements_is_an_empty_set (0.00s)
    --- PASS: TestIntersection/intersection_of_two_sets_with_shared_elements_is_a_set_of_the_shared_elements (0.00s)
=== RUN   TestDifference
=== RUN   TestDifference/difference_of_two_empty_sets_is_an_empty_set
=== RUN   TestDifference/difference_of_empty_set_and_non-empty_set_is_an_empty_set
=== RUN   TestDifference/difference_of_a_non-empty_set_and_an_empty_set_is_the_non-empty_set
=== RUN   TestDifference/difference_of_two_non-empty_sets_is_a_set_of_elements_that_are_only_in_the_first_set
--- PASS: TestDifference (0.00s)
    --- PASS: TestDifference/difference_of_two_empty_sets_is_an_empty_set (0.00s)
    --- PASS: TestDifference/difference_of_empty_set_and_non-empty_set_is_an_empty_set (0.00s)
    --- PASS: TestDifference/difference_of_a_non-empty_set_and_an_empty_set_is_the_non-empty_set (0.00s)
    --- PASS: TestDifference/difference_of_two_non-empty_sets_is_a_set_of_elements_that_are_only_in_the_first_set (0.00s)
=== RUN   TestUnion
=== RUN   TestUnion/union_of_empty_sets_is_an_empty_set
=== RUN   TestUnion/union_of_an_empty_set_and_non-empty_set_is_the_non-empty_set
=== RUN   TestUnion/union_of_a_non-empty_set_and_empty_set_is_the_non-empty_set
=== RUN   TestUnion/union_of_non-empty_sets_contains_all_unique_elements
--- PASS: TestUnion (0.00s)
    --- PASS: TestUnion/union_of_empty_sets_is_an_empty_set (0.00s)
    --- PASS: TestUnion/union_of_an_empty_set_and_non-empty_set_is_the_non-empty_set (0.00s)
    --- PASS: TestUnion/union_of_a_non-empty_set_and_empty_set_is_the_non-empty_set (0.00s)
    --- PASS: TestUnion/union_of_non-empty_sets_contains_all_unique_elements (0.00s)
=== RUN   ExampleNew
--- PASS: ExampleNew (0.00s)
=== RUN   ExampleNewFromSlice
--- PASS: ExampleNewFromSlice (0.00s)
=== RUN   ExampleSet_IsEmpty
--- PASS: ExampleSet_IsEmpty (0.00s)
=== RUN   ExampleSet_Add
--- PASS: ExampleSet_Add (0.00s)
=== RUN   ExampleSet_Has
--- PASS: ExampleSet_Has (0.00s)
=== RUN   ExampleSubset
--- PASS: ExampleSubset (0.00s)
=== RUN   ExampleDisjoint
--- PASS: ExampleDisjoint (0.00s)
=== RUN   ExampleEqual
--- PASS: ExampleEqual (0.00s)
=== RUN   ExampleIntersection
--- PASS: ExampleIntersection (0.00s)
=== RUN   ExampleDifference
--- PASS: ExampleDifference (0.00s)
=== RUN   ExampleUnion
--- PASS: ExampleUnion (0.00s)
PASS
coverage: 100.0% of statements
ok  	stringset	1.033s	coverage: 100.0% of statements

real	0m1.383s
user	0m0.459s
sys	0m0.257s


 ==============================================================================

Exit code: 0

real	0m1.750s
user	0m0.895s
sys	0m0.611s

real	0m1.753s
user	0m0.895s
sys	0m0.614s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

gotest -v --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: stringset
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
BenchmarkNewFromSlice1e1
BenchmarkNewFromSlice1e1-8   	 7917919	       144.1 ns/op	       0 B/op	       0 allocs/op
BenchmarkNewFromSlice1e2
BenchmarkNewFromSlice1e2-8   	  220611	      5633 ns/op	    4978 B/op	       6 allocs/op
BenchmarkNewFromSlice1e3
BenchmarkNewFromSlice1e3-8   	   21044	     59360 ns/op	   41621 B/op	      13 allocs/op
BenchmarkNewFromSlice1e4
BenchmarkNewFromSlice1e4-8   	    1183	    955058 ns/op	  659628 B/op	      99 allocs/op
PASS
ok  	stringset	6.595s

real	0m6.797s
user	0m7.083s
sys	0m0.308s

===============================================================================

gotest -v -tags bonus
=== RUN   TestNew
--- PASS: TestNew (0.00s)
=== RUN   TestNewFromSlice
--- PASS: TestNewFromSlice (0.00s)
=== RUN   TestIsEmpty
=== RUN   TestIsEmpty/sets_with_no_elements_are_empty
=== RUN   TestIsEmpty/sets_with_elements_are_not_empty
--- PASS: TestIsEmpty (0.00s)
    --- PASS: TestIsEmpty/sets_with_no_elements_are_empty (0.00s)
    --- PASS: TestIsEmpty/sets_with_elements_are_not_empty (0.00s)
=== RUN   TestHas
=== RUN   TestHas/nothing_is_contained_in_an_empty_set
=== RUN   TestHas/when_the_element_is_in_the_set
=== RUN   TestHas/when_the_element_is_not_in_the_set
--- PASS: TestHas (0.00s)
    --- PASS: TestHas/nothing_is_contained_in_an_empty_set (0.00s)
    --- PASS: TestHas/when_the_element_is_in_the_set (0.00s)
    --- PASS: TestHas/when_the_element_is_not_in_the_set (0.00s)
=== RUN   TestSubset
=== RUN   TestSubset/empty_set_is_a_subset_of_another_empty_set
=== RUN   TestSubset/empty_set_is_a_subset_of_non-empty_set
=== RUN   TestSubset/non-empty_set_is_not_a_subset_of_empty_set
=== RUN   TestSubset/set_is_a_subset_of_set_with_exact_same_elements
=== RUN   TestSubset/set_is_a_subset_of_larger_set_with_same_elements
=== RUN   TestSubset/set_is_not_a_subset_of_set_that_does_not_contain_its_elements
--- PASS: TestSubset (0.00s)
    --- PASS: TestSubset/empty_set_is_a_subset_of_another_empty_set (0.00s)
    --- PASS: TestSubset/empty_set_is_a_subset_of_non-empty_set (0.00s)
    --- PASS: TestSubset/non-empty_set_is_not_a_subset_of_empty_set (0.00s)
    --- PASS: TestSubset/set_is_a_subset_of_set_with_exact_same_elements (0.00s)
    --- PASS: TestSubset/set_is_a_subset_of_larger_set_with_same_elements (0.00s)
    --- PASS: TestSubset/set_is_not_a_subset_of_set_that_does_not_contain_its_elements (0.00s)
=== RUN   TestDisjoint
=== RUN   TestDisjoint/the_empty_set_is_disjoint_with_itself
=== RUN   TestDisjoint/empty_set_is_disjoint_with_non-empty_set
=== RUN   TestDisjoint/non-empty_set_is_disjoint_with_empty_set
=== RUN   TestDisjoint/sets_are_not_disjoint_if_they_share_an_element
=== RUN   TestDisjoint/sets_are_disjoint_if_they_share_no_elements
--- PASS: TestDisjoint (0.00s)
    --- PASS: TestDisjoint/the_empty_set_is_disjoint_with_itself (0.00s)
    --- PASS: TestDisjoint/empty_set_is_disjoint_with_non-empty_set (0.00s)
    --- PASS: TestDisjoint/non-empty_set_is_disjoint_with_empty_set (0.00s)
    --- PASS: TestDisjoint/sets_are_not_disjoint_if_they_share_an_element (0.00s)
    --- PASS: TestDisjoint/sets_are_disjoint_if_they_share_no_elements (0.00s)
=== RUN   TestEqual
=== RUN   TestEqual/empty_sets_are_equal
=== RUN   TestEqual/empty_set_is_not_equal_to_non-empty_set
=== RUN   TestEqual/non-empty_set_is_not_equal_to_empty_set
=== RUN   TestEqual/sets_with_the_same_elements_are_equal
=== RUN   TestEqual/sets_with_different_elements_are_not_equal
=== RUN   TestEqual/set_is_not_equal_to_larger_set_with_same_elements
--- PASS: TestEqual (0.00s)
    --- PASS: TestEqual/empty_sets_are_equal (0.00s)
    --- PASS: TestEqual/empty_set_is_not_equal_to_non-empty_set (0.00s)
    --- PASS: TestEqual/non-empty_set_is_not_equal_to_empty_set (0.00s)
    --- PASS: TestEqual/sets_with_the_same_elements_are_equal (0.00s)
    --- PASS: TestEqual/sets_with_different_elements_are_not_equal (0.00s)
    --- PASS: TestEqual/set_is_not_equal_to_larger_set_with_same_elements (0.00s)
=== RUN   TestAdd
=== RUN   TestAdd/add_to_empty_set
=== RUN   TestAdd/add_to_non-empty_set
=== RUN   TestAdd/adding_an_existing_element_does_not_change_the_set
--- PASS: TestAdd (0.00s)
    --- PASS: TestAdd/add_to_empty_set (0.00s)
    --- PASS: TestAdd/add_to_non-empty_set (0.00s)
    --- PASS: TestAdd/adding_an_existing_element_does_not_change_the_set (0.00s)
=== RUN   TestIntersection
=== RUN   TestIntersection/intersection_of_two_empty_sets_is_an_empty_set
=== RUN   TestIntersection/intersection_of_an_empty_set_and_non-empty_set_is_an_empty_set
=== RUN   TestIntersection/intersection_of_a_non-empty_set_and_an_empty_set_is_an_empty_set
=== RUN   TestIntersection/intersection_of_two_sets_with_no_shared_elements_is_an_empty_set
=== RUN   TestIntersection/intersection_of_two_sets_with_shared_elements_is_a_set_of_the_shared_elements
--- PASS: TestIntersection (0.00s)
    --- PASS: TestIntersection/intersection_of_two_empty_sets_is_an_empty_set (0.00s)
    --- PASS: TestIntersection/intersection_of_an_empty_set_and_non-empty_set_is_an_empty_set (0.00s)
    --- PASS: TestIntersection/intersection_of_a_non-empty_set_and_an_empty_set_is_an_empty_set (0.00s)
    --- PASS: TestIntersection/intersection_of_two_sets_with_no_shared_elements_is_an_empty_set (0.00s)
    --- PASS: TestIntersection/intersection_of_two_sets_with_shared_elements_is_a_set_of_the_shared_elements (0.00s)
=== RUN   TestDifference
=== RUN   TestDifference/difference_of_two_empty_sets_is_an_empty_set
=== RUN   TestDifference/difference_of_empty_set_and_non-empty_set_is_an_empty_set
=== RUN   TestDifference/difference_of_a_non-empty_set_and_an_empty_set_is_the_non-empty_set
=== RUN   TestDifference/difference_of_two_non-empty_sets_is_a_set_of_elements_that_are_only_in_the_first_set
--- PASS: TestDifference (0.00s)
    --- PASS: TestDifference/difference_of_two_empty_sets_is_an_empty_set (0.00s)
    --- PASS: TestDifference/difference_of_empty_set_and_non-empty_set_is_an_empty_set (0.00s)
    --- PASS: TestDifference/difference_of_a_non-empty_set_and_an_empty_set_is_the_non-empty_set (0.00s)
    --- PASS: TestDifference/difference_of_two_non-empty_sets_is_a_set_of_elements_that_are_only_in_the_first_set (0.00s)
=== RUN   TestUnion
=== RUN   TestUnion/union_of_empty_sets_is_an_empty_set
=== RUN   TestUnion/union_of_an_empty_set_and_non-empty_set_is_the_non-empty_set
=== RUN   TestUnion/union_of_a_non-empty_set_and_empty_set_is_the_non-empty_set
=== RUN   TestUnion/union_of_non-empty_sets_contains_all_unique_elements
--- PASS: TestUnion (0.00s)
    --- PASS: TestUnion/union_of_empty_sets_is_an_empty_set (0.00s)
    --- PASS: TestUnion/union_of_an_empty_set_and_non-empty_set_is_the_non-empty_set (0.00s)
    --- PASS: TestUnion/union_of_a_non-empty_set_and_empty_set_is_the_non-empty_set (0.00s)
    --- PASS: TestUnion/union_of_non-empty_sets_contains_all_unique_elements (0.00s)
=== RUN   ExampleNew
--- PASS: ExampleNew (0.00s)
=== RUN   ExampleNewFromSlice
--- PASS: ExampleNewFromSlice (0.00s)
=== RUN   ExampleSet_IsEmpty
--- PASS: ExampleSet_IsEmpty (0.00s)
=== RUN   ExampleSet_Add
--- PASS: ExampleSet_Add (0.00s)
=== RUN   ExampleSet_Has
--- PASS: ExampleSet_Has (0.00s)
=== RUN   ExampleSubset
--- PASS: ExampleSubset (0.00s)
=== RUN   ExampleDisjoint
--- PASS: ExampleDisjoint (0.00s)
=== RUN   ExampleEqual
--- PASS: ExampleEqual (0.00s)
=== RUN   ExampleIntersection
--- PASS: ExampleIntersection (0.00s)
=== RUN   ExampleDifference
--- PASS: ExampleDifference (0.00s)
=== RUN   ExampleUnion
--- PASS: ExampleUnion (0.00s)
PASS
ok  	stringset	0.006s

real	0m0.141s
user	0m0.170s
sys	0m0.148s

===============================================================================

benchstat benchstat-old.txt benchstat-new.txt
benchstat-old.txt:5: missing iteration count
benchstat-old.txt:7: missing iteration count
benchstat-old.txt:9: missing iteration count
benchstat-old.txt:11: missing iteration count
benchstat-new.txt:5: missing iteration count
benchstat-new.txt:7: missing iteration count
benchstat-new.txt:9: missing iteration count
benchstat-new.txt:11: missing iteration count
goos: linux
goarch: amd64
pkg: stringset
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
                  │ benchstat-new.txt │
                  │      sec/op       │
NewFromSlice1e1-8        144.1n ± ∞ ¹
NewFromSlice1e2-8        5.633µ ± ∞ ¹
NewFromSlice1e3-8        59.36µ ± ∞ ¹
NewFromSlice1e4-8        955.1µ ± ∞ ¹
geomean                  14.65µ
¹ need >= 6 samples for confidence interval at level 0.95

                  │ benchstat-new.txt │
                  │       B/op        │
NewFromSlice1e1-8         0.000 ± ∞ ¹
NewFromSlice1e2-8       4.861Ki ± ∞ ¹
NewFromSlice1e3-8       40.65Ki ± ∞ ¹
NewFromSlice1e4-8       644.2Ki ± ∞ ¹
geomean                             ²
¹ need >= 6 samples for confidence interval at level 0.95
² summaries must be >0 to compute geomean

                  │ benchstat-new.txt │
                  │     allocs/op     │
NewFromSlice1e1-8         0.000 ± ∞ ¹
NewFromSlice1e2-8         6.000 ± ∞ ¹
NewFromSlice1e3-8         13.00 ± ∞ ¹
NewFromSlice1e4-8         99.00 ± ∞ ¹
geomean                             ²
¹ need >= 6 samples for confidence interval at level 0.95
² summaries must be >0 to compute geomean

cpu: Intel(R) Core(TM) i7-7Y75 CPU @ 1.30GHz
                  │ benchstat-old.txt │
                  │      sec/op       │
NewFromSlice1e1-4        298.9n ± ∞ ¹
NewFromSlice1e2-4        24.31µ ± ∞ ¹
NewFromSlice1e3-4        243.2µ ± ∞ ¹
NewFromSlice1e4-4        2.097m ± ∞ ¹
geomean                  43.87µ
¹ need >= 6 samples for confidence interval at level 0.95

                  │ benchstat-old.txt │
                  │       B/op        │
NewFromSlice1e1-4         0.000 ± ∞ ¹
NewFromSlice1e2-4       4.977Ki ± ∞ ¹
NewFromSlice1e3-4       41.54Ki ± ∞ ¹
NewFromSlice1e4-4       343.1Ki ± ∞ ¹
geomean                             ²
¹ need >= 6 samples for confidence interval at level 0.95
² summaries must be >0 to compute geomean

                  │ benchstat-old.txt │
                  │     allocs/op     │
NewFromSlice1e1-4         0.000 ± ∞ ¹
NewFromSlice1e2-4         7.000 ± ∞ ¹
NewFromSlice1e3-4         19.00 ± ∞ ¹
NewFromSlice1e4-4         176.0 ± ∞ ¹
geomean                             ²
¹ need >= 6 samples for confidence interval at level 0.95
² summaries must be >0 to compute geomean

real	0m0.004s
user	0m0.001s
sys	0m0.003s

===============================================================================

gomarkdoc --output stringset-doc.md

real	0m0.013s
user	0m0.008s
sys	0m0.005s

===============================================================================

go doc -all stringset
package stringset // import "stringset"


FUNCTIONS

func Disjoint(s1, s2 Set) bool
    Disjoint returns true when the intersection of two Sets is empty.

func Equal(s1, s2 Set) bool
    Equal returns true when two Sets are equal and false when they aren't.

func Subset(s1, s2 Set) bool
    Subset returns true if s2 is a subset of s1.


TYPES

type Set map[string]struct{}
    Set type uses map keys since they have to be unique.

func Difference(s1, s2 Set) Set
    Difference returns the difference between two Sets.

func Intersection(s1, s2 Set) Set
    Intersection returns the common elements between two Sets.

func New() Set
    New returns a new empty Set.

func NewFromSlice(list []string) Set
    NewFromSlice returns a new Set populated with the strings from the passed
    slice.

func Union(s1, s2 Set) Set
    Union returns a Set composed of both Sets.

func (s Set) Add(elem string)
    Add inserts an element into the Set.

func (s Set) Has(elem string) bool
    Has returns true if the string is found in the Set, false if it doesn't.

func (s Set) IsEmpty() bool
    IsEmpty returns true if the Set is empty, false if it isn't.

func (s Set) String() string
    String returns the string version of the Set.


real	0m0.040s
user	0m0.018s
sys	0m0.034s


===============================================================================

