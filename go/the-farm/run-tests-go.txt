Running automated test file(s):

Go packages: thefarm 


===============================================================================

Running: ../../.github/citools/go/go-lint-golangci-lint

Running GoLangCi-Lint

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.028s
user	0m0.033s
sys	0m0.029s


 ==============================================================================

Running: golangci-lint run --enable-all ./...

level=warning msg="[runner] The linter 'structcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'maligned' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. Replaced by govet 'fieldalignment'."
level=warning msg="[runner] The linter 'ifshort' is deprecated (since v1.48.0) due to: The repository of the linter has been deprecated by the owner. "
level=warning msg="[runner] The linter 'varcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'interfacer' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. "
level=warning msg="[runner] The linter 'deadcode' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'scopelint' is deprecated (since v1.39.0) due to: The repository of the linter has been deprecated by the owner. Replaced by exportloopref."
level=warning msg="[runner] The linter 'golint' is deprecated (since v1.41.0) due to: The repository of the linter has been archived by the owner. Replaced by revive."
level=warning msg="[runner] The linter 'exhaustivestruct' is deprecated (since v1.46.0) due to: The owner seems to have abandoned the linter. Replaced by exhaustruct."
level=warning msg="[runner] The linter 'nosnakecase' is deprecated (since v1.48.1) due to: The repository of the linter has been deprecated by the owner. Replaced by revive(var-naming)."
the_farm_test.go:17: Function 'TestDivideFood' is too long (145 > 60) (funlen)
func TestDivideFood(t *testing.T) {
the_farm_test.go:126:36: Using the variable on range scope `test` in function literal (scopelint)
			gotAmount, gotErr := DivideFood(test.weightFodder, test.cows)
			                                ^
the_farm_test.go:128:22: Using the variable on range scope `test` in function literal (scopelint)
			case gotAmount != test.wantAmount:
			                  ^
the_farm_test.go:131:6: Using the variable on range scope `test` in function literal (scopelint)
					test.weightFodderDescription,
					^
the_farm.go:29:2: declarations should never be cuddled (wsl)
	var retVal float64
	^
the_farm.go:30:2: declarations should never be cuddled (wsl)
	var retErr error
	^
the_farm.go:38:3: assignments should only be cuddled with other assignments (wsl)
		retVal, retErr = 0, e
		^
the_farm_test.go:124:2: only one cuddle assignment allowed before range statement (wsl)
	for _, test := range tests {
	^
the_farm.go:35:6: comparing with == will fail on wrapped errors. Use errors.Is to check for a specific error (errorlint)
		if e == ErrScaleMalfunction || e == nil {
		   ^
the_farm.go:65:5: comparing with == will fail on wrapped errors. Use errors.Is to check for a specific error (errorlint)
	if e == ErrScaleMalfunction {
	   ^
the_farm_test.go:18:19: err113: do not define dynamic errors, use wrapped static errors instead: "errors.New(\"non-scale error\")" (goerr113)
	nonScaleError := errors.New("non-scale error")
	                 ^
the_farm_test.go:105:29: err113: do not define dynamic errors, use wrapped static errors instead: "errors.New(\"negative fodder\")" (goerr113)
			wantErr:                 errors.New("negative fodder"),
			                         ^
the_farm_test.go:113:29: err113: do not define dynamic errors, use wrapped static errors instead: "errors.New(\"negative fodder\")" (goerr113)
			wantErr:                 errors.New("negative fodder"),
			                         ^
the_farm_test.go:121:29: err113: do not define dynamic errors, use wrapped static errors instead: "errors.New(\"division by zero\")" (goerr113)
			wantErr:                 errors.New("division by zero"),
			                         ^
the_farm_test.go:220:29: err113: do not define dynamic errors, use wrapped static errors instead: "errors.New(\"negative fodder\")" (goerr113)
			wantErr:                 errors.New("negative fodder"),
			                         ^
the_farm.go:66:27: mnd: Magic number: 2.0, in <operation> detected (gomnd)
		retVal, retErr = retVal*2.0, nil
		                        ^
the_farm_test.go:165:1: Function TestDivideFoodSillyNephewError missing the call to method parallel (paralleltest)
func TestDivideFoodSillyNephewError(t *testing.T) {
^
the_farm_test.go:182:2: Range statement for test TestDivideFoodSillyNephewError missing the call to method parallel in test Run (paralleltest)
	for _, test := range tests {
	^
the_farm_test.go:207:1: Function TestDivideFoodNegativeFodderErrorPrecedence missing the call to method parallel (paralleltest)
func TestDivideFoodNegativeFodderErrorPrecedence(t *testing.T) {
^
the_farm_test.go:225:2: Range statement for test TestDivideFoodNegativeFodderErrorPrecedence missing the call to method parallel in test Run (paralleltest)
	for _, test := range tests {
	^
the_farm_test.go:1:9: package should be `thefarm_test` instead of `thefarm` (testpackage)
package thefarm
        ^
the_farm.go:28:2: variable name 'e' is too short for the scope of its usage (varnamelen)
	fodder, e := weightFodder.FodderAmount()
	^

real	0m0.488s
user	0m0.650s
sys	0m0.396s


 ==============================================================================

Exit code: -1

real	0m0.529s
user	0m0.689s
sys	0m0.436s

real	0m0.531s
user	0m0.689s
sys	0m0.438s

===============================================================================

Running: ../../.github/citools/go/go-lint-revive

Running Go Lint Revive

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.026s
user	0m0.026s
sys	0m0.019s


 ==============================================================================

Running: revive -formatter=stylish ./...


real	0m0.040s
user	0m0.020s
sys	0m0.029s


 ==============================================================================

Exit code: 0

real	0m0.077s
user	0m0.058s
sys	0m0.050s

real	0m0.079s
user	0m0.058s
sys	0m0.052s

===============================================================================

Running: ../../.github/citools/go/go-lint-ineffassign
../run-tests: line 41: .github/citools/go/go-lint-ineffassign: No such file or directory

real	0m0.001s
user	0m0.000s
sys	0m0.001s

===============================================================================

Running: ../../.github/citools/go/go-lint-go-consistent

Running Go go-consistent

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.023s
user	0m0.024s
sys	0m0.017s


 ==============================================================================

Running: go-consistent -v ./...

	info: check "./."
internal error: package "errors" without types was imported from "thefarm"

real	0m0.100s
user	0m0.151s
sys	0m0.125s


 ==============================================================================

Exit code: -1

real	0m0.131s
user	0m0.181s
sys	0m0.149s

real	0m0.133s
user	0m0.183s
sys	0m0.149s

===============================================================================

Running: ../../.github/citools/go/go-lint-staticcheck

Running Go StaticCheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.022s
user	0m0.016s
sys	0m0.028s


 ==============================================================================

Running: staticcheck -checks=all ./...


real	0m0.208s
user	0m0.214s
sys	0m0.165s


 ==============================================================================

Exit code: 0

real	0m0.242s
user	0m0.235s
sys	0m0.203s

real	0m0.243s
user	0m0.237s
sys	0m0.203s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocritic

Running Go gocritic

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.023s
user	0m0.020s
sys	0m0.028s


 ==============================================================================

Running: gocritic check -enableAll ./...


real	0m0.812s
user	0m1.688s
sys	0m0.295s


 ==============================================================================

Exit code: 0

real	0m0.847s
user	0m1.716s
sys	0m0.332s

real	0m0.849s
user	0m1.716s
sys	0m0.334s

===============================================================================

Running: ../../.github/citools/go/go-lint-go_vet

Running Go Vet

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.028s
user	0m0.024s
sys	0m0.024s


 ==============================================================================

Running: go vet ./...


real	0m0.076s
user	0m0.108s
sys	0m0.081s


 ==============================================================================

Exit code: 0

real	0m0.115s
user	0m0.139s
sys	0m0.113s

real	0m0.118s
user	0m0.140s
sys	0m0.114s

===============================================================================

Running: ../../.github/citools/go/go-fixer-go_fix

Running go fix

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.021s
user	0m0.020s
sys	0m0.022s


 ==============================================================================

Running: go fix ./...


real	0m0.028s
user	0m0.024s
sys	0m0.027s


 ==============================================================================

Exit code: 0

real	0m0.061s
user	0m0.050s
sys	0m0.060s

real	0m0.063s
user	0m0.051s
sys	0m0.061s

===============================================================================

Running: ../../.github/citools/go/go-lint-errcheck

Running Go errcheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.021s
user	0m0.020s
sys	0m0.021s


 ==============================================================================

Running: errcheck ./...


real	0m0.455s
user	0m1.317s
sys	0m0.247s


 ==============================================================================

Exit code: 0

real	0m0.488s
user	0m1.339s
sys	0m0.282s

real	0m0.490s
user	0m1.341s
sys	0m0.283s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocyclo

Running Go gocyclo

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.021s
user	0m0.020s
sys	0m0.024s


 ==============================================================================

Running: gocyclo .

9 thefarm TestDivideFood the_farm_test.go:17:1
9 thefarm DivideFood the_farm.go:27:1
4 thefarm TestDivideFoodNegativeFodderErrorPrecedence the_farm_test.go:207:1
4 thefarm TestDivideFoodSillyNephewError the_farm_test.go:165:1
1 thefarm (testWeightFodder).FodderAmount the_farm_test.go:13:1
1 thefarm (*SillyNephewError).Error the_farm.go:16:1

real	0m0.002s
user	0m0.002s
sys	0m0.000s


 ==============================================================================

Exit code: 0

real	0m0.034s
user	0m0.027s
sys	0m0.034s

real	0m0.036s
user	0m0.028s
sys	0m0.035s

===============================================================================

Running: ../../.github/citools/go/go-lint-misspell

Running Go misspell

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: misspell .


real	0m0.034s
user	0m0.050s
sys	0m0.014s


 ==============================================================================

Exit code: 0

real	0m0.045s
user	0m0.054s
sys	0m0.027s

real	0m0.047s
user	0m0.054s
sys	0m0.029s

===============================================================================

Running: ../../.github/citools/go/go-lint-gosec

Running Go GoSec

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.024s
user	0m0.024s
sys	0m0.026s


 ==============================================================================

Running: gosec ./...

[gosec] 2023/09/07 00:31:36 Including rules: default
[gosec] 2023/09/07 00:31:36 Excluding rules: default
[gosec] 2023/09/07 00:31:36 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/the-farm
[gosec] 2023/09/07 00:31:36 Checking package: thefarm
[gosec] 2023/09/07 00:31:36 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/the-farm/the_farm.go
[gosec] 2023/09/07 00:31:36 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/the-farm/types.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 2
  Lines  : 94
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.151s
user	0m0.153s
sys	0m0.132s


 ==============================================================================

Exit code: 0

real	0m0.188s
user	0m0.185s
sys	0m0.168s

real	0m0.189s
user	0m0.187s
sys	0m0.168s

===============================================================================

Running: ../../.github/citools/go/go-test-cover-report

Running Go Test, Coverage & Reports

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.024s
user	0m0.020s
sys	0m0.021s


 ==============================================================================

Running: gotest -v -covermode=count -coverprofile coverage.out ./...

=== RUN   TestDivideFood
=== RUN   TestDivideFood/100_fodder_for_10_cows
=== RUN   TestDivideFood/10_fodder_for_10_cows
=== RUN   TestDivideFood/10.5_fodder_for_2_cows
=== RUN   TestDivideFood/5_fodder_for_2_cows
=== RUN   TestDivideFood/0_fodder_for_2_cows
=== RUN   TestDivideFood/Generic_error_from_the_scale_is_returned
=== RUN   TestDivideFood/Negative_fodder_with_generic_error_from_the_scale_is_returned
=== RUN   TestDivideFood/Scale_returns_10_with_ErrScaleMalfunction_for_2_cows
=== RUN   TestDivideFood/Scale_returns_1_with_ErrScaleMalfunction_for_10_cows
=== RUN   TestDivideFood/Negative_fodder
=== RUN   TestDivideFood/Negative_fodder_with_ScaleError
=== RUN   TestDivideFood/Zero_cows
--- PASS: TestDivideFood (0.00s)
    --- PASS: TestDivideFood/100_fodder_for_10_cows (0.00s)
    --- PASS: TestDivideFood/10_fodder_for_10_cows (0.00s)
    --- PASS: TestDivideFood/10.5_fodder_for_2_cows (0.00s)
    --- PASS: TestDivideFood/5_fodder_for_2_cows (0.00s)
    --- PASS: TestDivideFood/0_fodder_for_2_cows (0.00s)
    --- PASS: TestDivideFood/Generic_error_from_the_scale_is_returned (0.00s)
    --- PASS: TestDivideFood/Negative_fodder_with_generic_error_from_the_scale_is_returned (0.00s)
    --- PASS: TestDivideFood/Scale_returns_10_with_ErrScaleMalfunction_for_2_cows (0.00s)
    --- PASS: TestDivideFood/Scale_returns_1_with_ErrScaleMalfunction_for_10_cows (0.00s)
    --- PASS: TestDivideFood/Negative_fodder (0.00s)
    --- PASS: TestDivideFood/Negative_fodder_with_ScaleError (0.00s)
    --- PASS: TestDivideFood/Zero_cows (0.00s)
=== RUN   TestDivideFoodSillyNephewError
=== RUN   TestDivideFoodSillyNephewError/Negative_ten_cows
=== RUN   TestDivideFoodSillyNephewError/Negative_seven_cows
--- PASS: TestDivideFoodSillyNephewError (0.00s)
    --- PASS: TestDivideFoodSillyNephewError/Negative_ten_cows (0.00s)
    --- PASS: TestDivideFoodSillyNephewError/Negative_seven_cows (0.00s)
=== RUN   TestDivideFoodNegativeFodderErrorPrecedence
=== RUN   TestDivideFoodNegativeFodderErrorPrecedence/Negative_fodder_and_negative_cows
--- PASS: TestDivideFoodNegativeFodderErrorPrecedence (0.00s)
    --- PASS: TestDivideFoodNegativeFodderErrorPrecedence/Negative_fodder_and_negative_cows (0.00s)
PASS
coverage: 100.0% of statements
ok  	thefarm	0.003s	coverage: 100.0% of statements

real	0m0.194s
user	0m0.287s
sys	0m0.122s


 ==============================================================================

Running: go tool cover -func=coverage.out

thefarm/the_farm.go:16:	Error		100.0%
thefarm/the_farm.go:27:	DivideFood	100.0%
total:			(statements)	100.0%

real	0m0.051s
user	0m0.058s
sys	0m0.057s


 ==============================================================================

Running: go tool cover -html coverage.out -o coverage.html


real	0m0.070s
user	0m0.076s
sys	0m0.072s


 ==============================================================================

Running: cover_annotate

Running: gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

real	0m0.020s
user	0m0.025s
sys	0m0.020s

real	0m0.021s
user	0m0.025s
sys	0m0.020s


 ==============================================================================

Running: gotest -v -race -covermode=atomic ./...

=== RUN   TestDivideFood
=== RUN   TestDivideFood/100_fodder_for_10_cows
=== RUN   TestDivideFood/10_fodder_for_10_cows
=== RUN   TestDivideFood/10.5_fodder_for_2_cows
=== RUN   TestDivideFood/5_fodder_for_2_cows
=== RUN   TestDivideFood/0_fodder_for_2_cows
=== RUN   TestDivideFood/Generic_error_from_the_scale_is_returned
=== RUN   TestDivideFood/Negative_fodder_with_generic_error_from_the_scale_is_returned
=== RUN   TestDivideFood/Scale_returns_10_with_ErrScaleMalfunction_for_2_cows
=== RUN   TestDivideFood/Scale_returns_1_with_ErrScaleMalfunction_for_10_cows
=== RUN   TestDivideFood/Negative_fodder
=== RUN   TestDivideFood/Negative_fodder_with_ScaleError
=== RUN   TestDivideFood/Zero_cows
--- PASS: TestDivideFood (0.00s)
    --- PASS: TestDivideFood/100_fodder_for_10_cows (0.00s)
    --- PASS: TestDivideFood/10_fodder_for_10_cows (0.00s)
    --- PASS: TestDivideFood/10.5_fodder_for_2_cows (0.00s)
    --- PASS: TestDivideFood/5_fodder_for_2_cows (0.00s)
    --- PASS: TestDivideFood/0_fodder_for_2_cows (0.00s)
    --- PASS: TestDivideFood/Generic_error_from_the_scale_is_returned (0.00s)
    --- PASS: TestDivideFood/Negative_fodder_with_generic_error_from_the_scale_is_returned (0.00s)
    --- PASS: TestDivideFood/Scale_returns_10_with_ErrScaleMalfunction_for_2_cows (0.00s)
    --- PASS: TestDivideFood/Scale_returns_1_with_ErrScaleMalfunction_for_10_cows (0.00s)
    --- PASS: TestDivideFood/Negative_fodder (0.00s)
    --- PASS: TestDivideFood/Negative_fodder_with_ScaleError (0.00s)
    --- PASS: TestDivideFood/Zero_cows (0.00s)
=== RUN   TestDivideFoodSillyNephewError
=== RUN   TestDivideFoodSillyNephewError/Negative_ten_cows
=== RUN   TestDivideFoodSillyNephewError/Negative_seven_cows
--- PASS: TestDivideFoodSillyNephewError (0.00s)
    --- PASS: TestDivideFoodSillyNephewError/Negative_ten_cows (0.00s)
    --- PASS: TestDivideFoodSillyNephewError/Negative_seven_cows (0.00s)
=== RUN   TestDivideFoodNegativeFodderErrorPrecedence
=== RUN   TestDivideFoodNegativeFodderErrorPrecedence/Negative_fodder_and_negative_cows
--- PASS: TestDivideFoodNegativeFodderErrorPrecedence (0.00s)
    --- PASS: TestDivideFoodNegativeFodderErrorPrecedence/Negative_fodder_and_negative_cows (0.00s)
PASS
coverage: 100.0% of statements
ok  	thefarm	1.012s	coverage: 100.0% of statements

real	0m1.256s
user	0m0.282s
sys	0m0.146s


 ==============================================================================

Exit code: 0

real	0m1.628s
user	0m0.757s
sys	0m0.446s

real	0m1.630s
user	0m0.757s
sys	0m0.447s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

gotest -v --run=xxx --bench . --benchmem |& tee benchstat-new.txt
PASS
ok  	thefarm	0.003s

real	0m0.147s
user	0m0.176s
sys	0m0.116s

===============================================================================

gotest -v -tags bonus
=== RUN   TestDivideFood
=== RUN   TestDivideFood/100_fodder_for_10_cows
=== RUN   TestDivideFood/10_fodder_for_10_cows
=== RUN   TestDivideFood/10.5_fodder_for_2_cows
=== RUN   TestDivideFood/5_fodder_for_2_cows
=== RUN   TestDivideFood/0_fodder_for_2_cows
=== RUN   TestDivideFood/Generic_error_from_the_scale_is_returned
=== RUN   TestDivideFood/Negative_fodder_with_generic_error_from_the_scale_is_returned
=== RUN   TestDivideFood/Scale_returns_10_with_ErrScaleMalfunction_for_2_cows
=== RUN   TestDivideFood/Scale_returns_1_with_ErrScaleMalfunction_for_10_cows
=== RUN   TestDivideFood/Negative_fodder
=== RUN   TestDivideFood/Negative_fodder_with_ScaleError
=== RUN   TestDivideFood/Zero_cows
--- PASS: TestDivideFood (0.00s)
    --- PASS: TestDivideFood/100_fodder_for_10_cows (0.00s)
    --- PASS: TestDivideFood/10_fodder_for_10_cows (0.00s)
    --- PASS: TestDivideFood/10.5_fodder_for_2_cows (0.00s)
    --- PASS: TestDivideFood/5_fodder_for_2_cows (0.00s)
    --- PASS: TestDivideFood/0_fodder_for_2_cows (0.00s)
    --- PASS: TestDivideFood/Generic_error_from_the_scale_is_returned (0.00s)
    --- PASS: TestDivideFood/Negative_fodder_with_generic_error_from_the_scale_is_returned (0.00s)
    --- PASS: TestDivideFood/Scale_returns_10_with_ErrScaleMalfunction_for_2_cows (0.00s)
    --- PASS: TestDivideFood/Scale_returns_1_with_ErrScaleMalfunction_for_10_cows (0.00s)
    --- PASS: TestDivideFood/Negative_fodder (0.00s)
    --- PASS: TestDivideFood/Negative_fodder_with_ScaleError (0.00s)
    --- PASS: TestDivideFood/Zero_cows (0.00s)
=== RUN   TestDivideFoodSillyNephewError
=== RUN   TestDivideFoodSillyNephewError/Negative_ten_cows
=== RUN   TestDivideFoodSillyNephewError/Negative_seven_cows
--- PASS: TestDivideFoodSillyNephewError (0.00s)
    --- PASS: TestDivideFoodSillyNephewError/Negative_ten_cows (0.00s)
    --- PASS: TestDivideFoodSillyNephewError/Negative_seven_cows (0.00s)
=== RUN   TestDivideFoodNegativeFodderErrorPrecedence
=== RUN   TestDivideFoodNegativeFodderErrorPrecedence/Negative_fodder_and_negative_cows
--- PASS: TestDivideFoodNegativeFodderErrorPrecedence (0.00s)
    --- PASS: TestDivideFoodNegativeFodderErrorPrecedence/Negative_fodder_and_negative_cows (0.00s)
PASS
ok  	thefarm	0.002s

real	0m0.149s
user	0m0.198s
sys	0m0.157s

===============================================================================

benchstat benchstat-old.txt benchstat-new.txt

real	0m0.002s
user	0m0.000s
sys	0m0.002s

===============================================================================

gomarkdoc --output thefarm-doc.md

real	0m0.022s
user	0m0.016s
sys	0m0.007s

===============================================================================

go doc -all thefarm
package thefarm // import "thefarm"

Package thefarm exercise is about Go Errors.

VARIABLES

var ErrDivisionByZero = errors.New("division by zero")
    ErrDivisionByZero indicates a divide by zero error.

var ErrNegativeFodder = errors.New("negative fodder")
    ErrNegativeFodder indicates that we owe fodder???

var ErrScaleMalfunction = errors.New("sensor error")
    ErrScaleMalfunction indicates an error with the scale.


FUNCTIONS

func DivideFood(weightFodder WeightFodder, cows int) (float64, error)
    DivideFood computes the fodder amount per cow for the given cows.


TYPES

type SillyNephewError struct {
	// Has unexported fields.
}
    SillyNephewError struct for catching negative cow counts.

func (e *SillyNephewError) Error() string

type WeightFodder interface {
	FodderAmount() (float64, error)
}
    WeightFodder returns the amount of available fodder.


real	0m0.403s
user	0m0.039s
sys	0m0.038s


===============================================================================

