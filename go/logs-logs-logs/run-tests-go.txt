Running automated test file(s):

Go packages: logs 


===============================================================================

golint logs

real	0m0.161s
user	0m0.114s
sys	0m0.145s

===============================================================================

go test -v -covermode=count -coverprofile coverage.out logs
=== RUN   TestApplication
=== RUN   TestApplication/single_character_recommendation
=== RUN   TestApplication/single_character_search
=== RUN   TestApplication/single_character_weather
=== RUN   TestApplication/no_characters_default
=== RUN   TestApplication/multiple_characters_recommendation(1/3)
=== RUN   TestApplication/multiple_characters_recommendation(2/3)
=== RUN   TestApplication/multiple_characters_recommendation(3/3)
--- PASS: TestApplication (0.00s)
    --- PASS: TestApplication/single_character_recommendation (0.00s)
    --- PASS: TestApplication/single_character_search (0.00s)
    --- PASS: TestApplication/single_character_weather (0.00s)
    --- PASS: TestApplication/no_characters_default (0.00s)
    --- PASS: TestApplication/multiple_characters_recommendation(1/3) (0.00s)
    --- PASS: TestApplication/multiple_characters_recommendation(2/3) (0.00s)
    --- PASS: TestApplication/multiple_characters_recommendation(3/3) (0.00s)
=== RUN   TestReplace
=== RUN   TestReplace/single_occurrence_of_replacement
=== RUN   TestReplace/multiple_occurrences_of_replacement
=== RUN   TestReplace/no_occurrences_of_replacement
--- PASS: TestReplace (0.00s)
    --- PASS: TestReplace/single_occurrence_of_replacement (0.00s)
    --- PASS: TestReplace/multiple_occurrences_of_replacement (0.00s)
    --- PASS: TestReplace/no_occurrences_of_replacement (0.00s)
=== RUN   TestWithinLimit
=== RUN   TestWithinLimit/exact_limit
=== RUN   TestWithinLimit/under_limit
=== RUN   TestWithinLimit/over_limit
=== RUN   TestWithinLimit/exact_limit#01
=== RUN   TestWithinLimit/under_limit#01
=== RUN   TestWithinLimit/over_limit#01
--- PASS: TestWithinLimit (0.00s)
    --- PASS: TestWithinLimit/exact_limit (0.00s)
    --- PASS: TestWithinLimit/under_limit (0.00s)
    --- PASS: TestWithinLimit/over_limit (0.00s)
    --- PASS: TestWithinLimit/exact_limit#01 (0.00s)
    --- PASS: TestWithinLimit/under_limit#01 (0.00s)
    --- PASS: TestWithinLimit/over_limit#01 (0.00s)
=== RUN   ExampleApplication
--- PASS: ExampleApplication (0.00s)
=== RUN   ExampleReplace
--- PASS: ExampleReplace (0.00s)
=== RUN   ExampleWithinLimit
--- PASS: ExampleWithinLimit (0.00s)
PASS
coverage: 100.0% of statements
ok  	logs	0.009s	coverage: 100.0% of statements

real	0m0.632s
user	0m0.703s
sys	0m0.416s

===============================================================================

go tool cover -func=coverage.out
logs/logs_logs_logs.go:9:	Application	100.0%
logs/logs_logs_logs.go:32:	Replace		100.0%
logs/logs_logs_logs.go:38:	WithinLimit	100.0%
total:				(statements)	100.0%

real	0m0.182s
user	0m0.169s
sys	0m0.143s

===============================================================================

go tool cover -html coverage.out -o coverage.html

real	0m0.190s
user	0m0.137s
sys	0m0.158s

===============================================================================

go test -v -race -covermode=atomic logs
=== RUN   TestApplication
=== RUN   TestApplication/single_character_recommendation
=== RUN   TestApplication/single_character_search
=== RUN   TestApplication/single_character_weather
=== RUN   TestApplication/no_characters_default
=== RUN   TestApplication/multiple_characters_recommendation(1/3)
=== RUN   TestApplication/multiple_characters_recommendation(2/3)
=== RUN   TestApplication/multiple_characters_recommendation(3/3)
--- PASS: TestApplication (0.01s)
    --- PASS: TestApplication/single_character_recommendation (0.00s)
    --- PASS: TestApplication/single_character_search (0.00s)
    --- PASS: TestApplication/single_character_weather (0.00s)
    --- PASS: TestApplication/no_characters_default (0.00s)
    --- PASS: TestApplication/multiple_characters_recommendation(1/3) (0.00s)
    --- PASS: TestApplication/multiple_characters_recommendation(2/3) (0.00s)
    --- PASS: TestApplication/multiple_characters_recommendation(3/3) (0.00s)
=== RUN   TestReplace
=== RUN   TestReplace/single_occurrence_of_replacement
=== RUN   TestReplace/multiple_occurrences_of_replacement
=== RUN   TestReplace/no_occurrences_of_replacement
--- PASS: TestReplace (0.00s)
    --- PASS: TestReplace/single_occurrence_of_replacement (0.00s)
    --- PASS: TestReplace/multiple_occurrences_of_replacement (0.00s)
    --- PASS: TestReplace/no_occurrences_of_replacement (0.00s)
=== RUN   TestWithinLimit
=== RUN   TestWithinLimit/exact_limit
=== RUN   TestWithinLimit/under_limit
=== RUN   TestWithinLimit/over_limit
=== RUN   TestWithinLimit/exact_limit#01
=== RUN   TestWithinLimit/under_limit#01
=== RUN   TestWithinLimit/over_limit#01
--- PASS: TestWithinLimit (0.00s)
    --- PASS: TestWithinLimit/exact_limit (0.00s)
    --- PASS: TestWithinLimit/under_limit (0.00s)
    --- PASS: TestWithinLimit/over_limit (0.00s)
    --- PASS: TestWithinLimit/exact_limit#01 (0.00s)
    --- PASS: TestWithinLimit/under_limit#01 (0.00s)
    --- PASS: TestWithinLimit/over_limit#01 (0.00s)
=== RUN   ExampleApplication
--- PASS: ExampleApplication (0.00s)
=== RUN   ExampleReplace
--- PASS: ExampleReplace (0.00s)
=== RUN   ExampleWithinLimit
--- PASS: ExampleWithinLimit (0.00s)
PASS
coverage: 100.0% of statements
ok  	logs	0.053s	coverage: 100.0% of statements

real	0m0.627s
user	0m0.638s
sys	0m0.450s

===============================================================================

go test --run=xxx --bench . --benchmem |& tee benchstat-new.txt
PASS
ok  	logs	0.025s

real	0m0.455s
user	0m0.532s
sys	0m0.313s

===============================================================================

go test -tags bonus
PASS
ok  	logs	0.006s

real	0m0.568s
user	0m0.640s
sys	0m0.398s

===============================================================================

No old benchmarks to run benchstat against.

===============================================================================

go vet logs

real	0m0.334s
user	0m0.389s
sys	0m0.348s

===============================================================================

go fix logs

real	0m0.103s
user	0m0.059s
sys	0m0.090s

===============================================================================

gosec ./logs-logs-logs
[gosec] 2022/07/26 07:40:40 Including rules: default
[gosec] 2022/07/26 07:40:40 Excluding rules: default
[gosec] 2022/07/26 07:40:40 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/logs-logs-logs
2022/07/26 07:40:40 internal error: package "strings" without types was imported from "command-line-arguments"

real	0m0.342s
user	0m0.344s
sys	0m0.266s

===============================================================================

gomarkdoc --output logs-doc.md

real	0m0.031s
user	0m0.027s
sys	0m0.009s

===============================================================================

go doc -all logs
package logs // import "logs"


FUNCTIONS

func Application(log string) string
    Application identifies the application emitting the given log.

func Replace(log string, oldRune, newRune rune) string
    Replace replaces all occurrences of old with new, returning the modified log
    to the caller.

func WithinLimit(log string, limit int) bool
    WithinLimit determines whether or not the number of characters in log is
    within the limit.


real	0m0.184s
user	0m0.108s
sys	0m0.121s


===============================================================================

