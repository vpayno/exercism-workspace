Running automated test file(s):

Go packages: expenses 


===============================================================================

golint expenses

real	0m0.185s
user	0m0.117s
sys	0m0.133s

===============================================================================

go test -v -covermode=count -coverprofile coverage.out expenses
=== RUN   TestFilterByDaysPeriod
=== RUN   TestFilterByDaysPeriod/returns_expenses_records_from_1st_to_15th_day
=== RUN   TestFilterByDaysPeriod/returns_empty_list_when_no_expenses_found_in_the_days_period
--- PASS: TestFilterByDaysPeriod (0.00s)
    --- PASS: TestFilterByDaysPeriod/returns_expenses_records_from_1st_to_15th_day (0.00s)
    --- PASS: TestFilterByDaysPeriod/returns_empty_list_when_no_expenses_found_in_the_days_period (0.00s)
=== RUN   TestFilterByCategory
=== RUN   TestFilterByCategory/returns_expenses_in_groceries_category
=== RUN   TestFilterByCategory/returns_empty_list_for_unknown_category
--- PASS: TestFilterByCategory (0.00s)
    --- PASS: TestFilterByCategory/returns_expenses_in_groceries_category (0.00s)
    --- PASS: TestFilterByCategory/returns_empty_list_for_unknown_category (0.00s)
=== RUN   TestTotalByPeriod
=== RUN   TestTotalByPeriod/total_expenses_is_0_when_no_records_found_in_the_provided_days_period
=== RUN   TestTotalByPeriod/total_expenses_for_days_period_from_25th_to_26th_day
=== RUN   TestTotalByPeriod/total_expenses_for_the_full_days_period
--- PASS: TestTotalByPeriod (0.00s)
    --- PASS: TestTotalByPeriod/total_expenses_is_0_when_no_records_found_in_the_provided_days_period (0.00s)
    --- PASS: TestTotalByPeriod/total_expenses_for_days_period_from_25th_to_26th_day (0.00s)
    --- PASS: TestTotalByPeriod/total_expenses_for_the_full_days_period (0.00s)
=== RUN   TestCategoryExpenses
=== RUN   TestCategoryExpenses/returns_error_when_no_records_with_category_found_in_any_days_period
=== RUN   TestCategoryExpenses/returns_total_category_expenses_in_the_provided_days_period
=== RUN   TestCategoryExpenses/returns_0_when_no_category_expenses_found_in_the_provided_days_period
--- PASS: TestCategoryExpenses (0.00s)
    --- PASS: TestCategoryExpenses/returns_error_when_no_records_with_category_found_in_any_days_period (0.00s)
    --- PASS: TestCategoryExpenses/returns_total_category_expenses_in_the_provided_days_period (0.00s)
    --- PASS: TestCategoryExpenses/returns_0_when_no_category_expenses_found_in_the_provided_days_period (0.00s)
=== RUN   ExampleFilter
--- PASS: ExampleFilter (0.00s)
=== RUN   ExampleByDaysPeriod
--- PASS: ExampleByDaysPeriod (0.00s)
=== RUN   ExampleByCategory
--- PASS: ExampleByCategory (0.00s)
=== RUN   ExampleTotalByPeriod
--- PASS: ExampleTotalByPeriod (0.00s)
=== RUN   ExampleCategoryExpenses
--- PASS: ExampleCategoryExpenses (0.00s)
PASS
coverage: 100.0% of statements
ok  	expenses	0.018s	coverage: 100.0% of statements

real	0m0.618s
user	0m0.687s
sys	0m0.565s

===============================================================================

go tool cover -func=coverage.out
expenses/expenses.go:19:	Filter			100.0%
expenses/expenses.go:33:	ByDaysPeriod		100.0%
expenses/expenses.go:44:	ByCategory		100.0%
expenses/expenses.go:54:	TotalByPeriod		100.0%
expenses/expenses.go:70:	CategoryExpenses	100.0%
total:				(statements)		100.0%

real	0m0.205s
user	0m0.171s
sys	0m0.164s

===============================================================================

go test -v -race -covermode=atomic expenses
=== RUN   TestFilterByDaysPeriod
=== RUN   TestFilterByDaysPeriod/returns_expenses_records_from_1st_to_15th_day
=== RUN   TestFilterByDaysPeriod/returns_empty_list_when_no_expenses_found_in_the_days_period
--- PASS: TestFilterByDaysPeriod (0.00s)
    --- PASS: TestFilterByDaysPeriod/returns_expenses_records_from_1st_to_15th_day (0.00s)
    --- PASS: TestFilterByDaysPeriod/returns_empty_list_when_no_expenses_found_in_the_days_period (0.00s)
=== RUN   TestFilterByCategory
=== RUN   TestFilterByCategory/returns_expenses_in_groceries_category
=== RUN   TestFilterByCategory/returns_empty_list_for_unknown_category
--- PASS: TestFilterByCategory (0.00s)
    --- PASS: TestFilterByCategory/returns_expenses_in_groceries_category (0.00s)
    --- PASS: TestFilterByCategory/returns_empty_list_for_unknown_category (0.00s)
=== RUN   TestTotalByPeriod
=== RUN   TestTotalByPeriod/total_expenses_is_0_when_no_records_found_in_the_provided_days_period
=== RUN   TestTotalByPeriod/total_expenses_for_days_period_from_25th_to_26th_day
=== RUN   TestTotalByPeriod/total_expenses_for_the_full_days_period
--- PASS: TestTotalByPeriod (0.00s)
    --- PASS: TestTotalByPeriod/total_expenses_is_0_when_no_records_found_in_the_provided_days_period (0.00s)
    --- PASS: TestTotalByPeriod/total_expenses_for_days_period_from_25th_to_26th_day (0.00s)
    --- PASS: TestTotalByPeriod/total_expenses_for_the_full_days_period (0.00s)
=== RUN   TestCategoryExpenses
=== RUN   TestCategoryExpenses/returns_error_when_no_records_with_category_found_in_any_days_period
=== RUN   TestCategoryExpenses/returns_total_category_expenses_in_the_provided_days_period
=== RUN   TestCategoryExpenses/returns_0_when_no_category_expenses_found_in_the_provided_days_period
--- PASS: TestCategoryExpenses (0.00s)
    --- PASS: TestCategoryExpenses/returns_error_when_no_records_with_category_found_in_any_days_period (0.00s)
    --- PASS: TestCategoryExpenses/returns_total_category_expenses_in_the_provided_days_period (0.00s)
    --- PASS: TestCategoryExpenses/returns_0_when_no_category_expenses_found_in_the_provided_days_period (0.00s)
=== RUN   ExampleFilter
--- PASS: ExampleFilter (0.00s)
=== RUN   ExampleByDaysPeriod
--- PASS: ExampleByDaysPeriod (0.00s)
=== RUN   ExampleByCategory
--- PASS: ExampleByCategory (0.00s)
=== RUN   ExampleTotalByPeriod
--- PASS: ExampleTotalByPeriod (0.00s)
=== RUN   ExampleCategoryExpenses
--- PASS: ExampleCategoryExpenses (0.00s)
PASS
coverage: 100.0% of statements
ok  	expenses	0.030s	coverage: 100.0% of statements

real	0m0.736s
user	0m0.813s
sys	0m0.491s

===============================================================================

go test --bench . --benchmem
PASS
ok  	expenses	0.025s

real	0m0.502s
user	0m0.615s
sys	0m0.384s

===============================================================================

go test -tags bonus
PASS
ok  	expenses	0.028s

real	0m0.609s
user	0m0.687s
sys	0m0.552s

===============================================================================

go vet expenses

real	0m0.413s
user	0m0.446s
sys	0m0.331s

===============================================================================

go fix expenses

real	0m0.131s
user	0m0.096s
sys	0m0.096s

===============================================================================

gosec ./expenses
[gosec] 2022/06/20 00:59:03 Including rules: default
[gosec] 2022/06/20 00:59:03 Excluding rules: default
[gosec] 2022/06/20 00:59:03 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/expenses
2022/06/20 00:59:03 internal error: package "errors" without types was imported from "command-line-arguments"

real	0m0.377s
user	0m0.384s
sys	0m0.342s

===============================================================================

gomarkdoc --output expenses-doc.md

real	0m0.044s
user	0m0.024s
sys	0m0.012s

===============================================================================

go doc -all expenses
package expenses // import "expenses"


FUNCTIONS

func ByCategory(category string) func(Record) bool
    ByCategory returns predicate function that returns true when the category of
    the record is the same as the provided category and false otherwise

func ByDaysPeriod(period DaysPeriod) func(Record) bool
    ByDaysPeriod returns predicate function that returns true when the day of
    the record is inside the period of day and false otherwise

func CategoryExpenses(in []Record, period DaysPeriod, category string) (float64, error)
    CategoryExpenses returns total amount of expenses for records in category c
    that are also inside the period p. An error must be returned only if there
    are no records in the list that belong to the given category, regardless of
    period of time.

func TotalByPeriod(in []Record, period DaysPeriod) float64
    TotalByPeriod returns total amount of expenses for records inside the period
    p


TYPES

type DaysPeriod struct {
	From int
	To   int
}
    DaysPeriod represents a period of days for expenses.

type Record struct {
	Day      int
	Amount   float64
	Category string
}
    Record represents an expense record.

func Filter(in []Record, predicate func(Record) bool) []Record
    Filter returns the records for which the predicate function returns true.


real	0m0.180s
user	0m0.114s
sys	0m0.134s


===============================================================================

