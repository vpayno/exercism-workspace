Running automated test file(s):

Go packages: anagram 


===============================================================================

Running: ../../.github/citools/go/go-lint-golangci-lint

Running GoLangCi-Lint

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.033s
user	0m0.012s
sys	0m0.034s


 ==============================================================================

Running: golangci-lint run --enable-all ./...

level=warning msg="[runner] The linter 'structcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'varcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'exhaustivestruct' is deprecated (since v1.46.0) due to: The owner seems to have abandoned the linter. Replaced by exhaustruct."
level=warning msg="[runner] The linter 'scopelint' is deprecated (since v1.39.0) due to: The repository of the linter has been deprecated by the owner. Replaced by exportloopref."
level=warning msg="[runner] The linter 'maligned' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. Replaced by govet 'fieldalignment'."
level=warning msg="[runner] The linter 'interfacer' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. "
level=warning msg="[runner] The linter 'nosnakecase' is deprecated (since v1.48.1) due to: The repository of the linter has been deprecated by the owner. Replaced by revive(var-naming)."
level=warning msg="[runner] The linter 'golint' is deprecated (since v1.41.0) due to: The repository of the linter has been archived by the owner. Replaced by revive."
level=warning msg="[runner] The linter 'ifshort' is deprecated (since v1.48.0) due to: The repository of the linter has been deprecated by the owner. "
level=warning msg="[runner] The linter 'deadcode' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
anagram.go:11:15: var-declaration: should omit type []string from declaration of var anagrams; it will be inferred from the right-hand side (revive)
	var anagrams []string = []string{}
	             ^
anagram.go:12:15: var-declaration: should omit type []string from declaration of var tmpSlice; it will be inferred from the right-hand side (revive)
	var tmpSlice []string = []string{}
	             ^
anagram.go:13:2: declarations should never be cuddled (wsl)
	var subjectLower string
	^
anagram.go:14:2: declarations should never be cuddled (wsl)
	var candidateLower string
	^
anagram_test.go:16:2: return statements should not be cuddled if block has more than two lines (wsl)
	return fmt.Sprintf("%v", a) == fmt.Sprintf("%v", b)
	^
anagram_test.go:40:2: for statements should only be cuddled with assignments used in the iteration (wsl)
	for i := 0; i < b.N; i++ {
	^
cases_test.go:6:5: testCases is a global variable (gochecknoglobals)
var testCases = []struct {
    ^
anagram_test.go:19:1: Function TestDetectAnagrams missing the call to method parallel (paralleltest)
func TestDetectAnagrams(t *testing.T) {
^
anagram_examples_test.go:1:9: package should be `anagram_test` instead of `anagram` (testpackage)
package anagram
        ^
anagram_test.go:1:9: package should be `anagram_test` instead of `anagram` (testpackage)
package anagram
        ^
cases_test.go:1:9: package should be `anagram_test` instead of `anagram` (testpackage)
package anagram
        ^
anagram_test.go:20:6: variable name 'tt' is too short for the scope of its usage (varnamelen)
	for _, tt := range testCases {
	    ^
anagram_test.go:9:12: parameter name 'a' is too short for the scope of its usage (varnamelen)
func equal(a, b []string) bool {
           ^

real	0m0.503s
user	0m0.696s
sys	0m0.542s


 ==============================================================================

Exit code: -1

real	0m0.547s
user	0m0.712s
sys	0m0.588s

real	0m0.550s
user	0m0.714s
sys	0m0.589s

===============================================================================

Running: ../../.github/citools/go/go-lint-revive

Running Go Lint Revive

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.022s
user	0m0.017s
sys	0m0.017s


 ==============================================================================

Running: revive -formatter=stylish ./...

anagram.go
  (11, 15)  https://revive.run/r#var-declaration  should omit type []string from declaration of var anagrams; it will be inferred from the right-hand side  
  (12, 15)  https://revive.run/r#var-declaration  should omit type []string from declaration of var tmpSlice; it will be inferred from the right-hand side  


 âœ– 2 problems (0 errors) (2 warnings)

real	0m0.057s
user	0m0.028s
sys	0m0.045s


 ==============================================================================

Exit code: 0

real	0m0.092s
user	0m0.050s
sys	0m0.074s

real	0m0.093s
user	0m0.050s
sys	0m0.075s

===============================================================================

Running: ../../.github/citools/go/go-lint-ineffassign
../run-tests: line 41: .github/citools/go/go-lint-ineffassign: No such file or directory

real	0m0.000s
user	0m0.000s
sys	0m0.000s

===============================================================================

Running: ../../.github/citools/go/go-lint-go-consistent

Running Go go-consistent

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.033s
user	0m0.031s
sys	0m0.042s


 ==============================================================================

Running: go-consistent -v ./...

	info: check "./."
internal error: package "sort" without types was imported from "anagram"

real	0m0.083s
user	0m0.112s
sys	0m0.103s


 ==============================================================================

Exit code: -1

real	0m0.128s
user	0m0.148s
sys	0m0.155s

real	0m0.129s
user	0m0.149s
sys	0m0.155s

===============================================================================

Running: ../../.github/citools/go/go-lint-staticcheck

Running Go StaticCheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.018s
user	0m0.008s
sys	0m0.019s


 ==============================================================================

Running: staticcheck -checks=all ./...

anagram.go:11:15: should omit type []string from declaration; it will be inferred from the right-hand side (ST1023)
anagram.go:12:15: should omit type []string from declaration; it will be inferred from the right-hand side (ST1023)

real	0m0.161s
user	0m0.212s
sys	0m0.107s


 ==============================================================================

Exit code: -1

real	0m0.190s
user	0m0.225s
sys	0m0.135s

real	0m0.192s
user	0m0.225s
sys	0m0.137s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocritic

Running Go gocritic

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.019s
user	0m0.016s
sys	0m0.015s


 ==============================================================================

Running: gocritic check -enableAll ./...


real	0m0.809s
user	0m2.094s
sys	0m0.287s


 ==============================================================================

Exit code: 0

real	0m0.838s
user	0m2.113s
sys	0m0.312s

real	0m0.840s
user	0m2.114s
sys	0m0.314s

===============================================================================

Running: ../../.github/citools/go/go-lint-go_vet

Running Go Vet

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.018s
user	0m0.013s
sys	0m0.014s


 ==============================================================================

Running: go vet ./...


real	0m0.080s
user	0m0.115s
sys	0m0.100s


 ==============================================================================

Exit code: 0

real	0m0.110s
user	0m0.134s
sys	0m0.123s

real	0m0.112s
user	0m0.136s
sys	0m0.123s

===============================================================================

Running: ../../.github/citools/go/go-fixer-go_fix

Running go fix

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.020s
user	0m0.015s
sys	0m0.014s


 ==============================================================================

Running: go fix ./...


real	0m0.021s
user	0m0.012s
sys	0m0.018s


 ==============================================================================

Exit code: 0

real	0m0.052s
user	0m0.033s
sys	0m0.040s

real	0m0.054s
user	0m0.034s
sys	0m0.042s

===============================================================================

Running: ../../.github/citools/go/go-lint-errcheck

Running Go errcheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.031s
user	0m0.024s
sys	0m0.026s


 ==============================================================================

Running: errcheck ./...


real	0m0.489s
user	0m1.614s
sys	0m0.293s


 ==============================================================================

Exit code: 0

real	0m0.532s
user	0m1.646s
sys	0m0.327s

real	0m0.534s
user	0m1.646s
sys	0m0.329s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocyclo

Running Go gocyclo

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.019s
user	0m0.013s
sys	0m0.014s


 ==============================================================================

Running: gocyclo .

4 anagram BenchmarkDetectAnagrams anagram_test.go:36:1
4 anagram Detect anagram.go:10:1
3 anagram TestDetectAnagrams anagram_test.go:19:1
2 anagram equal anagram_test.go:9:1
1 anagram ExampleDetect anagram_examples_test.go:7:1

real	0m0.002s
user	0m0.001s
sys	0m0.001s


 ==============================================================================

Exit code: 0

real	0m0.032s
user	0m0.022s
sys	0m0.022s

real	0m0.034s
user	0m0.022s
sys	0m0.024s

===============================================================================

Running: ../../.github/citools/go/go-lint-misspell

Running Go misspell

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: misspell .


real	0m0.036s
user	0m0.038s
sys	0m0.020s


 ==============================================================================

Exit code: 0

real	0m0.047s
user	0m0.039s
sys	0m0.033s

real	0m0.050s
user	0m0.040s
sys	0m0.034s

===============================================================================

Running: ../../.github/citools/go/go-lint-gosec

Running Go GoSec

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.019s
user	0m0.011s
sys	0m0.015s


 ==============================================================================

Running: gosec ./...

[gosec] 2023/09/07 00:20:19 Including rules: default
[gosec] 2023/09/07 00:20:19 Excluding rules: default
[gosec] 2023/09/07 00:20:19 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/anagram
[gosec] 2023/09/07 00:20:19 Checking package: anagram
[gosec] 2023/09/07 00:20:19 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/anagram/anagram.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 1
  Lines  : 33
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.120s
user	0m0.122s
sys	0m0.123s


 ==============================================================================

Exit code: 0

real	0m0.151s
user	0m0.141s
sys	0m0.144s

real	0m0.152s
user	0m0.143s
sys	0m0.144s

===============================================================================

Running: ../../.github/citools/go/go-test-cover-report

Running Go Test, Coverage & Reports

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.022s
user	0m0.016s
sys	0m0.018s


 ==============================================================================

Running: gotest -v -covermode=count -coverprofile coverage.out ./...

=== RUN   TestDetectAnagrams
    anagram_test.go:31: PASS: no matches
    anagram_test.go:31: PASS: detects two anagrams
    anagram_test.go:31: PASS: detects two anagrams
    anagram_test.go:31: PASS: does not detect anagram subsets
    anagram_test.go:31: PASS: detects anagram
    anagram_test.go:31: PASS: detects three anagrams
    anagram_test.go:31: PASS: detects multiple anagrams with different case
    anagram_test.go:31: PASS: does not detect non-anagrams with identical checksum
    anagram_test.go:31: PASS: detects anagrams case-insensitively
    anagram_test.go:31: PASS: detects anagrams using case-insensitive subject
    anagram_test.go:31: PASS: detects anagrams using case-insensitive possible matches
    anagram_test.go:31: PASS: does not detect an anagram if the original word is repeated
    anagram_test.go:31: PASS: anagrams must use all letters exactly once
    anagram_test.go:31: PASS: words are not anagrams of themselves
    anagram_test.go:31: PASS: words are not anagrams of themselves even if letter case is partially different
    anagram_test.go:31: PASS: words are not anagrams of themselves even if letter case is completely different
    anagram_test.go:31: PASS: words other than themselves can be anagrams
--- PASS: TestDetectAnagrams (0.00s)
=== RUN   ExampleDetect
--- PASS: ExampleDetect (0.00s)
PASS
coverage: 100.0% of statements
ok  	anagram	0.002s	coverage: 100.0% of statements

real	0m0.194s
user	0m0.282s
sys	0m0.173s


 ==============================================================================

Running: go tool cover -func=coverage.out

anagram/anagram.go:10:	Detect		100.0%
total:			(statements)	100.0%

real	0m0.042s
user	0m0.049s
sys	0m0.063s


 ==============================================================================

Running: go tool cover -html coverage.out -o coverage.html


real	0m0.041s
user	0m0.051s
sys	0m0.054s


 ==============================================================================

Running: cover_annotate

Running: gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

real	0m0.013s
user	0m0.011s
sys	0m0.012s

real	0m0.013s
user	0m0.011s
sys	0m0.012s


 ==============================================================================

Running: gotest -v -race -covermode=atomic ./...

=== RUN   TestDetectAnagrams
    anagram_test.go:31: PASS: no matches
    anagram_test.go:31: PASS: detects two anagrams
    anagram_test.go:31: PASS: detects two anagrams
    anagram_test.go:31: PASS: does not detect anagram subsets
    anagram_test.go:31: PASS: detects anagram
    anagram_test.go:31: PASS: detects three anagrams
    anagram_test.go:31: PASS: detects multiple anagrams with different case
    anagram_test.go:31: PASS: does not detect non-anagrams with identical checksum
    anagram_test.go:31: PASS: detects anagrams case-insensitively
    anagram_test.go:31: PASS: detects anagrams using case-insensitive subject
    anagram_test.go:31: PASS: detects anagrams using case-insensitive possible matches
    anagram_test.go:31: PASS: does not detect an anagram if the original word is repeated
    anagram_test.go:31: PASS: anagrams must use all letters exactly once
    anagram_test.go:31: PASS: words are not anagrams of themselves
    anagram_test.go:31: PASS: words are not anagrams of themselves even if letter case is partially different
    anagram_test.go:31: PASS: words are not anagrams of themselves even if letter case is completely different
    anagram_test.go:31: PASS: words other than themselves can be anagrams
--- PASS: TestDetectAnagrams (0.00s)
=== RUN   ExampleDetect
--- PASS: ExampleDetect (0.00s)
PASS
coverage: 100.0% of statements
ok  	anagram	1.013s	coverage: 100.0% of statements

real	0m1.247s
user	0m0.321s
sys	0m0.186s


 ==============================================================================

Exit code: 0

real	0m1.570s
user	0m0.737s
sys	0m0.515s

real	0m1.572s
user	0m0.738s
sys	0m0.516s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

gotest -v --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: anagram
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
BenchmarkDetectAnagrams
BenchmarkDetectAnagrams-8   	   70953	     16293 ns/op	    8432 B/op	     203 allocs/op
PASS
ok  	anagram	1.332s

real	0m1.482s
user	0m1.557s
sys	0m0.154s

===============================================================================

gotest -v -tags bonus
=== RUN   TestDetectAnagrams
    anagram_test.go:31: PASS: no matches
    anagram_test.go:31: PASS: detects two anagrams
    anagram_test.go:31: PASS: detects two anagrams
    anagram_test.go:31: PASS: does not detect anagram subsets
    anagram_test.go:31: PASS: detects anagram
    anagram_test.go:31: PASS: detects three anagrams
    anagram_test.go:31: PASS: detects multiple anagrams with different case
    anagram_test.go:31: PASS: does not detect non-anagrams with identical checksum
    anagram_test.go:31: PASS: detects anagrams case-insensitively
    anagram_test.go:31: PASS: detects anagrams using case-insensitive subject
    anagram_test.go:31: PASS: detects anagrams using case-insensitive possible matches
    anagram_test.go:31: PASS: does not detect an anagram if the original word is repeated
    anagram_test.go:31: PASS: anagrams must use all letters exactly once
    anagram_test.go:31: PASS: words are not anagrams of themselves
    anagram_test.go:31: PASS: words are not anagrams of themselves even if letter case is partially different
    anagram_test.go:31: PASS: words are not anagrams of themselves even if letter case is completely different
    anagram_test.go:31: PASS: words other than themselves can be anagrams
--- PASS: TestDetectAnagrams (0.00s)
=== RUN   ExampleDetect
--- PASS: ExampleDetect (0.00s)
PASS
ok  	anagram	0.002s

real	0m0.138s
user	0m0.177s
sys	0m0.124s

===============================================================================

benchstat benchstat-old.txt benchstat-new.txt
benchstat-new.txt:5: missing iteration count
goos: linux
goarch: amd64
pkg: anagram
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
                 â”‚ benchstat-new.txt â”‚
                 â”‚      sec/op       â”‚
DetectAnagrams-8        16.29Âµ Â± âˆž Â¹
Â¹ need >= 6 samples for confidence interval at level 0.95

                 â”‚ benchstat-new.txt â”‚
                 â”‚       B/op        â”‚
DetectAnagrams-8       8.234Ki Â± âˆž Â¹
Â¹ need >= 6 samples for confidence interval at level 0.95

                 â”‚ benchstat-new.txt â”‚
                 â”‚     allocs/op     â”‚
DetectAnagrams-8         203.0 Â± âˆž Â¹
Â¹ need >= 6 samples for confidence interval at level 0.95

cpu: Intel(R) Core(TM) i7-7Y75 CPU @ 1.30GHz
                 â”‚ benchstat-old.txt â”‚
                 â”‚      sec/op       â”‚
DetectAnagrams-4        125.1Âµ Â± âˆž Â¹
Â¹ need >= 6 samples for confidence interval at level 0.95

                 â”‚ benchstat-old.txt â”‚
                 â”‚       B/op        â”‚
DetectAnagrams-4       8.234Ki Â± âˆž Â¹
Â¹ need >= 6 samples for confidence interval at level 0.95

                 â”‚ benchstat-old.txt â”‚
                 â”‚     allocs/op     â”‚
DetectAnagrams-4         203.0 Â± âˆž Â¹
Â¹ need >= 6 samples for confidence interval at level 0.95

real	0m0.008s
user	0m0.002s
sys	0m0.002s

===============================================================================

gomarkdoc --output anagram-doc.md

real	0m0.012s
user	0m0.007s
sys	0m0.006s

===============================================================================

go doc -all anagram
package anagram // import "anagram"

Package anagram is a rearrangement of letters to form a new word.

FUNCTIONS

func Detect(subject string, candidates []string) []string
    Detect returns a string slice anagram of the passed string.


real	0m0.063s
user	0m0.034s
sys	0m0.051s


===============================================================================

