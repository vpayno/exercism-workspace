Running automated test file(s):

Go packages: anagram 


===============================================================================

Running: ../../.github/citools/go/go-lint-golangci-lint

Running GoLangCi-Lint

Go version:

	go version go1.21.3 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.019s
user	0m0.011s
sys	0m0.018s


 ==============================================================================

Running: golangci-lint run --enable-all ./...

level=warning msg="[runner] The linter 'maligned' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. Replaced by govet 'fieldalignment'."
level=warning msg="[runner] The linter 'nosnakecase' is deprecated (since v1.48.1) due to: The repository of the linter has been deprecated by the owner. Replaced by revive(var-naming)."
level=warning msg="[runner] The linter 'deadcode' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'varcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'golint' is deprecated (since v1.41.0) due to: The repository of the linter has been archived by the owner. Replaced by revive."
level=warning msg="[runner] The linter 'ifshort' is deprecated (since v1.48.0) due to: The repository of the linter has been deprecated by the owner. "
level=warning msg="[runner] The linter 'scopelint' is deprecated (since v1.39.0) due to: The repository of the linter has been deprecated by the owner. Replaced by exportloopref."
level=warning msg="[runner] The linter 'exhaustivestruct' is deprecated (since v1.46.0) due to: The owner seems to have abandoned the linter. Replaced by exhaustruct."
level=warning msg="[runner] The linter 'structcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'interfacer' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. "
anagram.go:11:15: var-declaration: should omit type []string from declaration of var anagrams; it will be inferred from the right-hand side (revive)
	var anagrams []string = []string{}
	             ^
anagram.go:12:15: var-declaration: should omit type []string from declaration of var tmpSlice; it will be inferred from the right-hand side (revive)
	var tmpSlice []string = []string{}
	             ^
anagram.go:13:2: declarations should never be cuddled (wsl)
	var subjectLower string
	^
anagram.go:14:2: declarations should never be cuddled (wsl)
	var candidateLower string
	^
anagram_test.go:16:2: return statements should not be cuddled if block has more than two lines (wsl)
	return fmt.Sprintf("%v", a) == fmt.Sprintf("%v", b)
	^
anagram_test.go:40:2: for statements should only be cuddled with assignments used in the iteration (wsl)
	for i := 0; i < b.N; i++ {
	^
cases_test.go:6:5: testCases is a global variable (gochecknoglobals)
var testCases = []struct {
    ^
anagram_test.go:19:1: Function TestDetectAnagrams missing the call to method parallel (paralleltest)
func TestDetectAnagrams(t *testing.T) {
^
anagram_examples_test.go:1:9: package should be `anagram_test` instead of `anagram` (testpackage)
package anagram
        ^
anagram_test.go:1:9: package should be `anagram_test` instead of `anagram` (testpackage)
package anagram
        ^
cases_test.go:1:9: package should be `anagram_test` instead of `anagram` (testpackage)
package anagram
        ^
anagram_test.go:20:6: variable name 'tt' is too short for the scope of its usage (varnamelen)
	for _, tt := range testCases {
	    ^
anagram_test.go:9:12: parameter name 'a' is too short for the scope of its usage (varnamelen)
func equal(a, b []string) bool {
           ^

real	0m1.536s
user	0m3.357s
sys	0m0.599s


 ==============================================================================

Exit code: -1

real	0m1.565s
user	0m3.375s
sys	0m0.623s

real	0m1.567s
user	0m3.377s
sys	0m0.624s

===============================================================================

Running: ../../.github/citools/go/go-lint-revive

Running Go Lint Revive

Go version:

	go version go1.21.3 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.022s
user	0m0.015s
sys	0m0.017s


 ==============================================================================

Running: revive -formatter=stylish ./...

anagram.go
  (11, 15)  https://revive.run/r#var-declaration  should omit type []string from declaration of var anagrams; it will be inferred from the right-hand side  
  (12, 15)  https://revive.run/r#var-declaration  should omit type []string from declaration of var tmpSlice; it will be inferred from the right-hand side  


 âœ– 2 problems (0 errors) (2 warnings)

real	0m0.112s
user	0m0.038s
sys	0m0.058s


 ==============================================================================

Exit code: 0

real	0m0.142s
user	0m0.058s
sys	0m0.082s

real	0m0.144s
user	0m0.059s
sys	0m0.083s

===============================================================================

Running: ../../.github/citools/go/go-lint-ineffassign

Running Go ineffassign

Go version:

	go version go1.21.3 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.026s
user	0m0.013s
sys	0m0.026s


 ==============================================================================

Running: ineffassign ./...

/home/vpayno/git_vpayno/exercism-workspace/go/anagram/anagram.go:12:6: ineffectual assignment to tmpSlice
/home/vpayno/git_vpayno/exercism-workspace/go/anagram/anagram.go:12:6: ineffectual assignment to tmpSlice

real	0m0.099s
user	0m0.130s
sys	0m0.095s


 ==============================================================================

Exit code: -1

real	0m0.138s
user	0m0.149s
sys	0m0.132s

real	0m0.140s
user	0m0.150s
sys	0m0.133s

===============================================================================

Running: ../../.github/citools/go/go-lint-go-consistent

Running Go go-consistent

Go version:

	go version go1.21.3 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.019s
user	0m0.010s
sys	0m0.019s


 ==============================================================================

Running: go-consistent -v ./...

	info: check "./."
internal error: package "sort" without types was imported from "anagram"

real	0m0.125s
user	0m0.149s
sys	0m0.152s


 ==============================================================================

Exit code: -1

real	0m0.153s
user	0m0.161s
sys	0m0.181s

real	0m0.154s
user	0m0.161s
sys	0m0.182s

===============================================================================

Running: ../../.github/citools/go/go-lint-staticcheck

Running Go StaticCheck

Go version:

	go version go1.21.3 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.018s
user	0m0.009s
sys	0m0.021s


 ==============================================================================

Running: staticcheck -checks=all ./...

anagram.go:11:15: should omit type []string from declaration; it will be inferred from the right-hand side (ST1023)
anagram.go:12:15: should omit type []string from declaration; it will be inferred from the right-hand side (ST1023)

real	0m1.233s
user	0m3.387s
sys	0m0.346s


 ==============================================================================

Exit code: -1

real	0m1.263s
user	0m3.400s
sys	0m0.378s

real	0m1.264s
user	0m3.401s
sys	0m0.378s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocritic

Running Go gocritic

Go version:

	go version go1.21.3 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.023s
user	0m0.018s
sys	0m0.017s


 ==============================================================================

Running: gocritic check -enableAll ./...


real	0m0.893s
user	0m2.187s
sys	0m0.297s


 ==============================================================================

Exit code: 0

real	0m0.929s
user	0m2.210s
sys	0m0.327s

real	0m0.932s
user	0m2.212s
sys	0m0.329s

===============================================================================

Running: ../../.github/citools/go/go-lint-go_vet

Running Go Vet

Go version:

	go version go1.21.3 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.016s
user	0m0.010s
sys	0m0.015s


 ==============================================================================

Running: go vet ./...


real	0m0.652s
user	0m1.453s
sys	0m0.519s


 ==============================================================================

Exit code: 0

real	0m0.677s
user	0m1.468s
sys	0m0.542s

real	0m0.679s
user	0m1.469s
sys	0m0.543s

===============================================================================

Running: ../../.github/citools/go/go-fixer-go_fix

Running go fix

Go version:

	go version go1.21.3 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.034s
user	0m0.026s
sys	0m0.029s


 ==============================================================================

Running: go fix ./...


real	0m0.061s
user	0m0.029s
sys	0m0.034s


 ==============================================================================

Exit code: 0

real	0m0.114s
user	0m0.064s
sys	0m0.080s

real	0m0.117s
user	0m0.065s
sys	0m0.081s

===============================================================================

Running: ../../.github/citools/go/go-lint-errcheck

Running Go errcheck

Go version:

	go version go1.21.3 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.038s
user	0m0.028s
sys	0m0.030s


 ==============================================================================

Running: errcheck ./...


real	0m0.472s
user	0m1.347s
sys	0m0.297s


 ==============================================================================

Exit code: 0

real	0m0.533s
user	0m1.387s
sys	0m0.347s

real	0m0.537s
user	0m1.388s
sys	0m0.350s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocyclo

Running Go gocyclo

Go version:

	go version go1.21.3 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.024s
user	0m0.017s
sys	0m0.019s


 ==============================================================================

Running: gocyclo .

4 anagram BenchmarkDetectAnagrams anagram_test.go:36:1
4 anagram Detect anagram.go:10:1
3 anagram TestDetectAnagrams anagram_test.go:19:1
2 anagram equal anagram_test.go:9:1
1 anagram ExampleDetect anagram_examples_test.go:7:1

real	0m0.024s
user	0m0.000s
sys	0m0.007s


 ==============================================================================

Exit code: 0

real	0m0.059s
user	0m0.022s
sys	0m0.035s

real	0m0.061s
user	0m0.024s
sys	0m0.035s

===============================================================================

Running: ../../.github/citools/go/go-lint-misspell

Running Go misspell

Go version:

	go version go1.21.3 linux/amd64


 ==============================================================================

Running: misspell .


real	0m0.025s
user	0m0.024s
sys	0m0.015s


 ==============================================================================

Exit code: 0

real	0m0.046s
user	0m0.035s
sys	0m0.033s

real	0m0.049s
user	0m0.036s
sys	0m0.035s

===============================================================================

Running: ../../.github/citools/go/go-lint-gosec

Running Go GoSec

Go version:

	go version go1.21.3 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.036s
user	0m0.029s
sys	0m0.026s


 ==============================================================================

Running: gosec ./...

[gosec] 2023/10/18 19:47:56 Including rules: default
[gosec] 2023/10/18 19:47:56 Excluding rules: default
[gosec] 2023/10/18 19:47:56 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/anagram
[gosec] 2023/10/18 19:47:56 Checking package: anagram
[gosec] 2023/10/18 19:47:56 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/anagram/anagram.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 1
  Lines  : 38
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.130s
user	0m0.121s
sys	0m0.083s


 ==============================================================================

Exit code: 0

real	0m0.179s
user	0m0.160s
sys	0m0.117s

real	0m0.181s
user	0m0.160s
sys	0m0.117s

===============================================================================

Running: ../../.github/citools/go/go-test-cover-report

Running Go Test, Coverage & Reports

Go version:

	go version go1.21.3 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.029s
user	0m0.020s
sys	0m0.023s


 ==============================================================================

Running: gotest -v -covermode=count -coverprofile coverage.out ./...

=== RUN   TestDetectAnagrams
    anagram_test.go:31: PASS: no matches
    anagram_test.go:31: PASS: detects two anagrams
    anagram_test.go:31: PASS: detects two anagrams
    anagram_test.go:31: PASS: does not detect anagram subsets
    anagram_test.go:31: PASS: detects anagram
    anagram_test.go:31: PASS: detects three anagrams
    anagram_test.go:31: PASS: detects multiple anagrams with different case
    anagram_test.go:31: PASS: does not detect non-anagrams with identical checksum
    anagram_test.go:31: PASS: detects anagrams case-insensitively
    anagram_test.go:31: PASS: detects anagrams using case-insensitive subject
    anagram_test.go:31: PASS: detects anagrams using case-insensitive possible matches
    anagram_test.go:31: PASS: does not detect an anagram if the original word is repeated
    anagram_test.go:31: PASS: anagrams must use all letters exactly once
    anagram_test.go:31: PASS: words are not anagrams of themselves
    anagram_test.go:31: PASS: words are not anagrams of themselves even if letter case is partially different
    anagram_test.go:31: PASS: words are not anagrams of themselves even if letter case is completely different
    anagram_test.go:31: PASS: words other than themselves can be anagrams
--- PASS: TestDetectAnagrams (0.00s)
=== RUN   ExampleDetect
--- PASS: ExampleDetect (0.00s)
PASS
coverage: 100.0% of statements
ok  	anagram	0.002s	coverage: 100.0% of statements

real	0m0.339s
user	0m0.773s
sys	0m0.349s


 ==============================================================================

Running: go tool cover -func=coverage.out

anagram/anagram.go:10:	Detect		100.0%
total:			(statements)	100.0%

real	0m0.046s
user	0m0.045s
sys	0m0.065s


 ==============================================================================

Running: go tool cover -html coverage.out -o coverage.html


real	0m0.052s
user	0m0.067s
sys	0m0.058s


 ==============================================================================

Running: cover_annotate

Running: gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

real	0m0.164s
user	0m0.046s
sys	0m0.078s

real	0m0.164s
user	0m0.046s
sys	0m0.078s


 ==============================================================================

Running: gotest -v -race -covermode=atomic ./...

=== RUN   TestDetectAnagrams
    anagram_test.go:31: PASS: no matches
    anagram_test.go:31: PASS: detects two anagrams
    anagram_test.go:31: PASS: detects two anagrams
    anagram_test.go:31: PASS: does not detect anagram subsets
    anagram_test.go:31: PASS: detects anagram
    anagram_test.go:31: PASS: detects three anagrams
    anagram_test.go:31: PASS: detects multiple anagrams with different case
    anagram_test.go:31: PASS: does not detect non-anagrams with identical checksum
    anagram_test.go:31: PASS: detects anagrams case-insensitively
    anagram_test.go:31: PASS: detects anagrams using case-insensitive subject
    anagram_test.go:31: PASS: detects anagrams using case-insensitive possible matches
    anagram_test.go:31: PASS: does not detect an anagram if the original word is repeated
    anagram_test.go:31: PASS: anagrams must use all letters exactly once
    anagram_test.go:31: PASS: words are not anagrams of themselves
    anagram_test.go:31: PASS: words are not anagrams of themselves even if letter case is partially different
    anagram_test.go:31: PASS: words are not anagrams of themselves even if letter case is completely different
    anagram_test.go:31: PASS: words other than themselves can be anagrams
--- PASS: TestDetectAnagrams (0.00s)
=== RUN   ExampleDetect
--- PASS: ExampleDetect (0.00s)
PASS
coverage: 100.0% of statements
ok  	anagram	1.011s	coverage: 100.0% of statements

real	0m6.295s
user	0m12.994s
sys	0m2.046s


 ==============================================================================

Exit code: 0

real	0m6.939s
user	0m13.953s
sys	0m2.632s

real	0m6.942s
user	0m13.954s
sys	0m2.634s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

gotest -v --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: anagram
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
BenchmarkDetectAnagrams
BenchmarkDetectAnagrams-8   	   75769	     16639 ns/op	    7920 B/op	     191 allocs/op
PASS
ok  	anagram	1.425s

real	0m1.566s
user	0m1.647s
sys	0m0.157s

===============================================================================

gotest -v -tags bonus
=== RUN   TestDetectAnagrams
    anagram_test.go:31: PASS: no matches
    anagram_test.go:31: PASS: detects two anagrams
    anagram_test.go:31: PASS: detects two anagrams
    anagram_test.go:31: PASS: does not detect anagram subsets
    anagram_test.go:31: PASS: detects anagram
    anagram_test.go:31: PASS: detects three anagrams
    anagram_test.go:31: PASS: detects multiple anagrams with different case
    anagram_test.go:31: PASS: does not detect non-anagrams with identical checksum
    anagram_test.go:31: PASS: detects anagrams case-insensitively
    anagram_test.go:31: PASS: detects anagrams using case-insensitive subject
    anagram_test.go:31: PASS: detects anagrams using case-insensitive possible matches
    anagram_test.go:31: PASS: does not detect an anagram if the original word is repeated
    anagram_test.go:31: PASS: anagrams must use all letters exactly once
    anagram_test.go:31: PASS: words are not anagrams of themselves
    anagram_test.go:31: PASS: words are not anagrams of themselves even if letter case is partially different
    anagram_test.go:31: PASS: words are not anagrams of themselves even if letter case is completely different
    anagram_test.go:31: PASS: words other than themselves can be anagrams
--- PASS: TestDetectAnagrams (0.00s)
=== RUN   ExampleDetect
--- PASS: ExampleDetect (0.00s)
PASS
ok  	anagram	0.001s

real	0m0.125s
user	0m0.162s
sys	0m0.132s

===============================================================================

benchstat benchstat-old.txt benchstat-new.txt
benchstat-old.txt:5: missing iteration count
benchstat-new.txt:5: missing iteration count
goos: linux
goarch: amd64
pkg: anagram
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
                 â”‚ benchstat-old.txt â”‚        benchstat-new.txt        â”‚
                 â”‚      sec/op       â”‚    sec/op     vs base           â”‚
DetectAnagrams-8        16.29Âµ Â± âˆž Â¹   16.64Âµ Â± âˆž Â¹  ~ (p=1.000 n=1) Â²
Â¹ need >= 6 samples for confidence interval at level 0.95
Â² need >= 4 samples to detect a difference at alpha level 0.05

                 â”‚ benchstat-old.txt â”‚        benchstat-new.txt         â”‚
                 â”‚       B/op        â”‚     B/op       vs base           â”‚
DetectAnagrams-8       8.234Ki Â± âˆž Â¹   7.734Ki Â± âˆž Â¹  ~ (p=1.000 n=1) Â²
Â¹ need >= 6 samples for confidence interval at level 0.95
Â² need >= 4 samples to detect a difference at alpha level 0.05

                 â”‚ benchstat-old.txt â”‚       benchstat-new.txt        â”‚
                 â”‚     allocs/op     â”‚  allocs/op   vs base           â”‚
DetectAnagrams-8         203.0 Â± âˆž Â¹   191.0 Â± âˆž Â¹  ~ (p=1.000 n=1) Â²
Â¹ need >= 6 samples for confidence interval at level 0.95
Â² need >= 4 samples to detect a difference at alpha level 0.05

real	0m0.007s
user	0m0.000s
sys	0m0.003s

===============================================================================

gomarkdoc --output anagram-doc.md

real	0m0.036s
user	0m0.008s
sys	0m0.011s

===============================================================================

go doc -all anagram
package anagram // import "anagram"

Package anagram is a rearrangement of letters to form a new word.

FUNCTIONS

func Detect(subject string, candidates []string) []string
    Detect returns a string slice anagram of the passed string.


real	0m0.040s
user	0m0.027s
sys	0m0.022s


===============================================================================

