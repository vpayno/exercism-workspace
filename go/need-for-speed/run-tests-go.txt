Running automated test file(s):

Go packages: speed 


===============================================================================

Running: ../../.github/citools/go/go-lint-golangci-lint

Running GoLangCi-Lint

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.020s
user	0m0.011s
sys	0m0.014s


 ==============================================================================

Running: golangci-lint run --enable-all ./...

level=warning msg="[runner] The linter 'maligned' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. Replaced by govet 'fieldalignment'."
level=warning msg="[runner] The linter 'varcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'ifshort' is deprecated (since v1.48.0) due to: The repository of the linter has been deprecated by the owner. "
level=warning msg="[runner] The linter 'golint' is deprecated (since v1.41.0) due to: The repository of the linter has been archived by the owner. Replaced by revive."
level=warning msg="[runner] The linter 'structcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'interfacer' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. "
level=warning msg="[runner] The linter 'scopelint' is deprecated (since v1.39.0) due to: The repository of the linter has been deprecated by the owner. Replaced by exportloopref."
level=warning msg="[runner] The linter 'deadcode' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'nosnakecase' is deprecated (since v1.48.1) due to: The repository of the linter has been deprecated by the owner. Replaced by revive(var-naming)."
level=warning msg="[runner] The linter 'exhaustivestruct' is deprecated (since v1.46.0) due to: The owner seems to have abandoned the linter. Replaced by exhaustruct."
need_for_speed_test.go:75: Function 'TestDrive' is too long (91 > 60) (funlen)
func TestDrive(t *testing.T) {
need_for_speed_test.go:169: Function 'TestCanFinish' is too long (82 > 60) (funlen)
func TestCanFinish(t *testing.T) {
need_for_speed.go:3:14: Comment should end in a period (godot)
// Car struct
             ^
need_for_speed.go:23:16: Comment should end in a period (godot)
// Track struct
               ^
need_for_speed.go:28:32: Comment should end in a period (godot)
// NewTrack created a new track
                               ^
need_for_speed_test.go:35: File is not `gofumpt`-ed (gofumpt)

need_for_speed.go:13:10: var-declaration: should omit type Car from declaration of var car; it will be inferred from the right-hand side (revive)
	var car Car = Car{
	        ^
need_for_speed_test.go:28:18: Using the variable on range scope `tt` in function literal (scopelint)
			got := NewCar(tt.car.speed, tt.car.batteryDrain)
			              ^
need_for_speed_test.go:30:14: Using the variable on range scope `tt` in function literal (scopelint)
			if got != tt.expected {
			          ^
need_for_speed_test.go:31:53: Using the variable on range scope `tt` in function literal (scopelint)
				t.Errorf("NewCar(%+v,%+v) = %+v; expected %+v", tt.car.speed, tt.car.batteryDrain, got, tt.expected)
				                                                ^
need_for_speed.go:47:2: declarations should never be cuddled (wsl)
	var steps int
	^
need_for_speed_test.go:36:1: block should not end with a whitespace (or comment) (wsl)
}
^
need_for_speed_test.go:13:9: distance is missing in Car (exhaustivestruct)
			car: Car{
			     ^
need_for_speed_test.go:18:14: distance is missing in Car (exhaustivestruct)
			expected: Car{
			          ^
need_for_speed.go:14:17: mnd: Magic number: 100, in <assign> detected (gomnd)
		battery:      100,
		              ^
need_for_speed_test.go:5:1: Function TestNewCar missing the call to method parallel (paralleltest)
func TestNewCar(t *testing.T) {
^
need_for_speed_test.go:26:2: Range statement for test TestNewCar missing the call to method parallel in test Run (paralleltest)
	for _, tt := range tests {
	^
need_for_speed_test.go:38:1: Function TestNewTrack missing the call to method parallel (paralleltest)
func TestNewTrack(t *testing.T) {
^
need_for_speed_test.go:64:2: Range statement for test TestNewTrack missing the call to method parallel in test Run (paralleltest)
	for _, tt := range tests {
	^
need_for_speed_test.go:158:2: Range statement for test TestDrive missing the call to method parallel in test Run (paralleltest)
	for _, tt := range tests {
	^
need_for_speed_test.go:243:2: Range statement for test TestCanFinish missing the call to method parallel in test Run (paralleltest)
	for _, tt := range tests {
	^
need_for_speed_examples_test.go:1:9: package should be `speed_test` instead of `speed` (testpackage)
package speed
        ^
need_for_speed_test.go:1:9: package should be `speed_test` instead of `speed` (testpackage)
package speed
        ^

real	0m0.454s
user	0m0.723s
sys	0m0.402s


 ==============================================================================

Exit code: -1

real	0m0.491s
user	0m0.741s
sys	0m0.433s

real	0m0.493s
user	0m0.742s
sys	0m0.435s

===============================================================================

Running: ../../.github/citools/go/go-lint-revive

Running Go Lint Revive

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.011s
user	0m0.006s
sys	0m0.008s


 ==============================================================================

Running: revive -formatter=stylish ./...

need_for_speed.go
  (1, 1)    https://revive.run/r#package-comments  should have a package comment                                                                   
  (13, 10)  https://revive.run/r#var-declaration   should omit type Car from declaration of var car; it will be inferred from the right-hand side  


 âœ– 2 problems (0 errors) (2 warnings)

real	0m0.027s
user	0m0.015s
sys	0m0.019s


 ==============================================================================

Exit code: 0

real	0m0.047s
user	0m0.028s
sys	0m0.035s

real	0m0.050s
user	0m0.028s
sys	0m0.038s

===============================================================================

Running: ../../.github/citools/go/go-lint-ineffassign
../run-tests: line 41: .github/citools/go/go-lint-ineffassign: No such file or directory

real	0m0.001s
user	0m0.000s
sys	0m0.000s

===============================================================================

Running: ../../.github/citools/go/go-lint-go-consistent

Running Go go-consistent

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.011s
user	0m0.006s
sys	0m0.007s


 ==============================================================================

Running: go-consistent -v ./...

	info: check "./."
internal error: package "fmt" without types was imported from "speed [speed.test]"

real	0m0.089s
user	0m0.126s
sys	0m0.115s


 ==============================================================================

Exit code: -1

real	0m0.111s
user	0m0.138s
sys	0m0.131s

real	0m0.113s
user	0m0.140s
sys	0m0.131s

===============================================================================

Running: ../../.github/citools/go/go-lint-staticcheck

Running Go StaticCheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.015s
user	0m0.004s
sys	0m0.015s


 ==============================================================================

Running: staticcheck -checks=all ./...

need_for_speed.go:1:1: at least one file in a package should have a package comment (ST1000)
need_for_speed.go:13:10: should omit type Car from declaration; it will be inferred from the right-hand side (ST1023)
need_for_speed.go:47:2: should merge variable declaration with assignment on next line (S1021)

real	0m0.190s
user	0m0.220s
sys	0m0.131s


 ==============================================================================

Exit code: -1

real	0m0.219s
user	0m0.230s
sys	0m0.161s

real	0m0.222s
user	0m0.231s
sys	0m0.162s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocritic

Running Go gocritic

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.014s
user	0m0.008s
sys	0m0.010s


 ==============================================================================

Running: gocritic check -enableAll ./...

./need_for_speed_examples_test.go:14:2: commentedOutCode: may want to remove commented-out code

real	0m0.860s
user	0m2.156s
sys	0m0.342s


 ==============================================================================

Exit code: -1

real	0m0.887s
user	0m2.171s
sys	0m0.363s

real	0m0.888s
user	0m2.171s
sys	0m0.364s

===============================================================================

Running: ../../.github/citools/go/go-lint-go_vet

Running Go Vet

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.014s
user	0m0.002s
sys	0m0.014s


 ==============================================================================

Running: go vet ./...


real	0m0.076s
user	0m0.133s
sys	0m0.109s


 ==============================================================================

Exit code: 0

real	0m0.102s
user	0m0.143s
sys	0m0.131s

real	0m0.104s
user	0m0.144s
sys	0m0.132s

===============================================================================

Running: ../../.github/citools/go/go-fixer-go_fix

Running go fix

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.012s
user	0m0.007s
sys	0m0.008s


 ==============================================================================

Running: go fix ./...


real	0m0.020s
user	0m0.009s
sys	0m0.015s


 ==============================================================================

Exit code: 0

real	0m0.042s
user	0m0.022s
sys	0m0.030s

real	0m0.044s
user	0m0.024s
sys	0m0.030s

===============================================================================

Running: ../../.github/citools/go/go-lint-errcheck

Running Go errcheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.014s
user	0m0.008s
sys	0m0.009s


 ==============================================================================

Running: errcheck ./...


real	0m0.432s
user	0m1.245s
sys	0m0.271s


 ==============================================================================

Exit code: 0

real	0m0.458s
user	0m1.257s
sys	0m0.292s

real	0m0.460s
user	0m1.259s
sys	0m0.292s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocyclo

Running Go gocyclo

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.019s
user	0m0.010s
sys	0m0.015s


 ==============================================================================

Running: gocyclo .

3 speed TestCanFinish need_for_speed_test.go:169:1
3 speed TestDrive need_for_speed_test.go:75:1
3 speed TestNewTrack need_for_speed_test.go:38:1
3 speed TestNewCar need_for_speed_test.go:5:1
3 speed CanFinish need_for_speed.go:45:1
2 speed Drive need_for_speed.go:35:1
1 speed ExampleCanFinish need_for_speed_examples_test.go:23:1
1 speed ExampleDrive need_for_speed_examples_test.go:17:1
1 speed ExampleNewTrack need_for_speed_examples_test.go:12:1
1 speed ExampleNewCar need_for_speed_examples_test.go:7:1
1 speed NewTrack need_for_speed.go:29:1
1 speed NewCar need_for_speed.go:12:1

real	0m0.003s
user	0m0.000s
sys	0m0.003s


 ==============================================================================

Exit code: 0

real	0m0.033s
user	0m0.015s
sys	0m0.029s

real	0m0.036s
user	0m0.016s
sys	0m0.030s

===============================================================================

Running: ../../.github/citools/go/go-lint-misspell

Running Go misspell

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: misspell .


real	0m0.031s
user	0m0.032s
sys	0m0.016s


 ==============================================================================

Exit code: 0

real	0m0.048s
user	0m0.042s
sys	0m0.030s

real	0m0.051s
user	0m0.045s
sys	0m0.030s

===============================================================================

Running: ../../.github/citools/go/go-lint-gosec

Running Go GoSec

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.018s
user	0m0.006s
sys	0m0.017s


 ==============================================================================

Running: gosec ./...

[gosec] 2023/09/07 00:25:18 Including rules: default
[gosec] 2023/09/07 00:25:18 Excluding rules: default
[gosec] 2023/09/07 00:25:18 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/need-for-speed
[gosec] 2023/09/07 00:25:18 Checking package: speed
[gosec] 2023/09/07 00:25:18 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/need-for-speed/need_for_speed.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 1
  Lines  : 59
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.090s
user	0m0.079s
sys	0m0.059s


 ==============================================================================

Exit code: 0

real	0m0.124s
user	0m0.091s
sys	0m0.090s

real	0m0.127s
user	0m0.093s
sys	0m0.092s

===============================================================================

Running: ../../.github/citools/go/go-test-cover-report

Running Go Test, Coverage & Reports

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.012s
user	0m0.008s
sys	0m0.007s


 ==============================================================================

Running: gotest -v -covermode=count -coverprofile coverage.out ./...

=== RUN   TestNewCar
=== RUN   TestNewCar/Create_a_new_car.
--- PASS: TestNewCar (0.00s)
    --- PASS: TestNewCar/Create_a_new_car. (0.00s)
=== RUN   TestNewTrack
=== RUN   TestNewTrack/Create_a_new_track.
=== RUN   TestNewTrack/Create_a_new_track.#01
--- PASS: TestNewTrack (0.00s)
    --- PASS: TestNewTrack/Create_a_new_track. (0.00s)
    --- PASS: TestNewTrack/Create_a_new_track.#01 (0.00s)
=== RUN   TestDrive
=== RUN   TestDrive/Drive_the_car_with_full_battery.
=== RUN   TestDrive/Drive_when_battery_percentage_is_below_battery_drain
=== RUN   TestDrive/Drive_the_car_with_battery_drained.
=== RUN   TestDrive/Drive_the_car_with_positive_initial_distance_and_battery_drained
=== RUN   TestDrive/Drive_the_car_with_positive_initial_distance_and_full_battery
--- PASS: TestDrive (0.00s)
    --- PASS: TestDrive/Drive_the_car_with_full_battery. (0.00s)
    --- PASS: TestDrive/Drive_when_battery_percentage_is_below_battery_drain (0.00s)
    --- PASS: TestDrive/Drive_the_car_with_battery_drained. (0.00s)
    --- PASS: TestDrive/Drive_the_car_with_positive_initial_distance_and_battery_drained (0.00s)
    --- PASS: TestDrive/Drive_the_car_with_positive_initial_distance_and_full_battery (0.00s)
=== RUN   TestCanFinish
=== RUN   TestCanFinish/Car_can_easily_finish_the_track_distance.
=== RUN   TestCanFinish/Car_can_finish_the_track_distance_just_as_the_battery_is_drained.
=== RUN   TestCanFinish/Car_cannot_finish_the_track_distance.
=== RUN   TestCanFinish/Car_can_finish_the_track_distance_with_initial_battery_less_than_100%
=== RUN   TestCanFinish/Car_cannot_finish_the_track_distance_with_initial_battery_less_than_100%
--- PASS: TestCanFinish (0.00s)
    --- PASS: TestCanFinish/Car_can_easily_finish_the_track_distance. (0.00s)
    --- PASS: TestCanFinish/Car_can_finish_the_track_distance_just_as_the_battery_is_drained. (0.00s)
    --- PASS: TestCanFinish/Car_cannot_finish_the_track_distance. (0.00s)
    --- PASS: TestCanFinish/Car_can_finish_the_track_distance_with_initial_battery_less_than_100% (0.00s)
    --- PASS: TestCanFinish/Car_cannot_finish_the_track_distance_with_initial_battery_less_than_100% (0.00s)
=== RUN   ExampleNewCar
--- PASS: ExampleNewCar (0.00s)
=== RUN   ExampleNewTrack
--- PASS: ExampleNewTrack (0.00s)
=== RUN   ExampleDrive
--- PASS: ExampleDrive (0.00s)
=== RUN   ExampleCanFinish
--- PASS: ExampleCanFinish (0.00s)
PASS
coverage: 93.3% of statements
ok  	speed	0.002s	coverage: 93.3% of statements

real	0m0.174s
user	0m0.244s
sys	0m0.163s


 ==============================================================================

Running: go tool cover -func=coverage.out

speed/need_for_speed.go:12:	NewCar		100.0%
speed/need_for_speed.go:29:	NewTrack	100.0%
speed/need_for_speed.go:35:	Drive		100.0%
speed/need_for_speed.go:45:	CanFinish	87.5%
total:				(statements)	93.3%

real	0m0.034s
user	0m0.018s
sys	0m0.028s


 ==============================================================================

Running: go tool cover -html coverage.out -o coverage.html


real	0m0.022s
user	0m0.009s
sys	0m0.017s


 ==============================================================================

Running: cover_annotate

Running: gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

45     	func CanFinish(car Car, track Track) bool {
46     		var result bool
47     		var steps int
48     	
49     		steps = track.distance / car.speed
50     		if track.distance%car.speed > 0 {
51 MISS			steps++
52     		}
53     	
54     		if steps*car.batteryDrain <= car.battery {
55     			result = true
56     		}
57     	
58     		return result
59     	}


real	0m0.012s
user	0m0.008s
sys	0m0.008s

real	0m0.012s
user	0m0.008s
sys	0m0.008s


 ==============================================================================

Running: gotest -v -race -covermode=atomic ./...

=== RUN   TestNewCar
=== RUN   TestNewCar/Create_a_new_car.
--- PASS: TestNewCar (0.00s)
    --- PASS: TestNewCar/Create_a_new_car. (0.00s)
=== RUN   TestNewTrack
=== RUN   TestNewTrack/Create_a_new_track.
=== RUN   TestNewTrack/Create_a_new_track.#01
--- PASS: TestNewTrack (0.00s)
    --- PASS: TestNewTrack/Create_a_new_track. (0.00s)
    --- PASS: TestNewTrack/Create_a_new_track.#01 (0.00s)
=== RUN   TestDrive
=== RUN   TestDrive/Drive_the_car_with_full_battery.
=== RUN   TestDrive/Drive_when_battery_percentage_is_below_battery_drain
=== RUN   TestDrive/Drive_the_car_with_battery_drained.
=== RUN   TestDrive/Drive_the_car_with_positive_initial_distance_and_battery_drained
=== RUN   TestDrive/Drive_the_car_with_positive_initial_distance_and_full_battery
--- PASS: TestDrive (0.00s)
    --- PASS: TestDrive/Drive_the_car_with_full_battery. (0.00s)
    --- PASS: TestDrive/Drive_when_battery_percentage_is_below_battery_drain (0.00s)
    --- PASS: TestDrive/Drive_the_car_with_battery_drained. (0.00s)
    --- PASS: TestDrive/Drive_the_car_with_positive_initial_distance_and_battery_drained (0.00s)
    --- PASS: TestDrive/Drive_the_car_with_positive_initial_distance_and_full_battery (0.00s)
=== RUN   TestCanFinish
=== RUN   TestCanFinish/Car_can_easily_finish_the_track_distance.
=== RUN   TestCanFinish/Car_can_finish_the_track_distance_just_as_the_battery_is_drained.
=== RUN   TestCanFinish/Car_cannot_finish_the_track_distance.
=== RUN   TestCanFinish/Car_can_finish_the_track_distance_with_initial_battery_less_than_100%
=== RUN   TestCanFinish/Car_cannot_finish_the_track_distance_with_initial_battery_less_than_100%
--- PASS: TestCanFinish (0.00s)
    --- PASS: TestCanFinish/Car_can_easily_finish_the_track_distance. (0.00s)
    --- PASS: TestCanFinish/Car_can_finish_the_track_distance_just_as_the_battery_is_drained. (0.00s)
    --- PASS: TestCanFinish/Car_cannot_finish_the_track_distance. (0.00s)
    --- PASS: TestCanFinish/Car_can_finish_the_track_distance_with_initial_battery_less_than_100% (0.00s)
    --- PASS: TestCanFinish/Car_cannot_finish_the_track_distance_with_initial_battery_less_than_100% (0.00s)
=== RUN   ExampleNewCar
--- PASS: ExampleNewCar (0.00s)
=== RUN   ExampleNewTrack
--- PASS: ExampleNewTrack (0.00s)
=== RUN   ExampleDrive
--- PASS: ExampleDrive (0.00s)
=== RUN   ExampleCanFinish
--- PASS: ExampleCanFinish (0.00s)
PASS
coverage: 93.3% of statements
ok  	speed	1.012s	coverage: 93.3% of statements

real	0m1.245s
user	0m0.279s
sys	0m0.157s


 ==============================================================================

Exit code: 0

real	0m1.508s
user	0m0.569s
sys	0m0.389s

real	0m1.510s
user	0m0.571s
sys	0m0.389s

===============================================================================

gotest -v --run=xxx --bench . --benchmem |& tee benchstat-new.txt
PASS
ok  	speed	0.002s

real	0m0.169s
user	0m0.211s
sys	0m0.158s

===============================================================================

gotest -v -tags bonus
=== RUN   TestNewCar
=== RUN   TestNewCar/Create_a_new_car.
--- PASS: TestNewCar (0.00s)
    --- PASS: TestNewCar/Create_a_new_car. (0.00s)
=== RUN   TestNewTrack
=== RUN   TestNewTrack/Create_a_new_track.
=== RUN   TestNewTrack/Create_a_new_track.#01
--- PASS: TestNewTrack (0.00s)
    --- PASS: TestNewTrack/Create_a_new_track. (0.00s)
    --- PASS: TestNewTrack/Create_a_new_track.#01 (0.00s)
=== RUN   TestDrive
=== RUN   TestDrive/Drive_the_car_with_full_battery.
=== RUN   TestDrive/Drive_when_battery_percentage_is_below_battery_drain
=== RUN   TestDrive/Drive_the_car_with_battery_drained.
=== RUN   TestDrive/Drive_the_car_with_positive_initial_distance_and_battery_drained
=== RUN   TestDrive/Drive_the_car_with_positive_initial_distance_and_full_battery
--- PASS: TestDrive (0.00s)
    --- PASS: TestDrive/Drive_the_car_with_full_battery. (0.00s)
    --- PASS: TestDrive/Drive_when_battery_percentage_is_below_battery_drain (0.00s)
    --- PASS: TestDrive/Drive_the_car_with_battery_drained. (0.00s)
    --- PASS: TestDrive/Drive_the_car_with_positive_initial_distance_and_battery_drained (0.00s)
    --- PASS: TestDrive/Drive_the_car_with_positive_initial_distance_and_full_battery (0.00s)
=== RUN   TestCanFinish
=== RUN   TestCanFinish/Car_can_easily_finish_the_track_distance.
=== RUN   TestCanFinish/Car_can_finish_the_track_distance_just_as_the_battery_is_drained.
=== RUN   TestCanFinish/Car_cannot_finish_the_track_distance.
=== RUN   TestCanFinish/Car_can_finish_the_track_distance_with_initial_battery_less_than_100%
=== RUN   TestCanFinish/Car_cannot_finish_the_track_distance_with_initial_battery_less_than_100%
--- PASS: TestCanFinish (0.00s)
    --- PASS: TestCanFinish/Car_can_easily_finish_the_track_distance. (0.00s)
    --- PASS: TestCanFinish/Car_can_finish_the_track_distance_just_as_the_battery_is_drained. (0.00s)
    --- PASS: TestCanFinish/Car_cannot_finish_the_track_distance. (0.00s)
    --- PASS: TestCanFinish/Car_can_finish_the_track_distance_with_initial_battery_less_than_100% (0.00s)
    --- PASS: TestCanFinish/Car_cannot_finish_the_track_distance_with_initial_battery_less_than_100% (0.00s)
=== RUN   ExampleNewCar
--- PASS: ExampleNewCar (0.00s)
=== RUN   ExampleNewTrack
--- PASS: ExampleNewTrack (0.00s)
=== RUN   ExampleDrive
--- PASS: ExampleDrive (0.00s)
=== RUN   ExampleCanFinish
--- PASS: ExampleCanFinish (0.00s)
PASS
ok  	speed	0.002s

real	0m0.123s
user	0m0.152s
sys	0m0.101s

===============================================================================

No old benchmarks to run benchstat against.

===============================================================================

gomarkdoc --output speed-doc.md

real	0m0.014s
user	0m0.010s
sys	0m0.005s

===============================================================================

go doc -all speed
package speed // import "speed"


FUNCTIONS

func CanFinish(car Car, track Track) bool
    CanFinish checks if a car is able to finish a certain track.


TYPES

type Car struct {
	// Has unexported fields.
}
    Car struct

func Drive(car Car) Car
    Drive drives the car one time. If there is not enough battery to drive on
    more time, the car will not move.

func NewCar(speed, batteryDrain int) Car
    NewCar creates a new remote controlled car with full battery and given
    specifications.

type Track struct {
	// Has unexported fields.
}
    Track struct

func NewTrack(distance int) Track
    NewTrack created a new track


real	0m0.027s
user	0m0.015s
sys	0m0.019s


===============================================================================

