Running automated test file(s):

Go packages: listops 


===============================================================================

Running: ../../.github/citools/go/go-lint-golangci-lint

Running GoLangCi-Lint

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.015s
user	0m0.009s
sys	0m0.009s


 ==============================================================================

Running: golangci-lint run --enable-all ./...

level=warning msg="[runner] The linter 'deadcode' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'structcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'interfacer' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. "
level=warning msg="[runner] The linter 'golint' is deprecated (since v1.41.0) due to: The repository of the linter has been archived by the owner. Replaced by revive."
level=warning msg="[runner] The linter 'varcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'maligned' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. Replaced by govet 'fieldalignment'."
level=warning msg="[runner] The linter 'scopelint' is deprecated (since v1.39.0) due to: The repository of the linter has been deprecated by the owner. Replaced by exportloopref."
level=warning msg="[runner] The linter 'exhaustivestruct' is deprecated (since v1.46.0) due to: The owner seems to have abandoned the linter. Replaced by exhaustruct."
level=warning msg="[runner] The linter 'nosnakecase' is deprecated (since v1.48.1) due to: The repository of the linter has been deprecated by the owner. Replaced by revive(var-naming)."
level=warning msg="[runner] The linter 'ifshort' is deprecated (since v1.48.0) due to: The repository of the linter has been deprecated by the owner. "
list_ops.go:4:82: Comment should end in a period (godot)
// IntList is an abstraction of a list of integers which we can define methods on
                                                                                 ^
list_ops_examples_test.go:72: File is not `gofmt`-ed with `-s` (gofmt)
	list2 := []IntList{IntList{5}, IntList{6, 7}, IntList{}, IntList{8, 9}}
list_ops_test.go:81: File is not `gofumpt`-ed (gofumpt)

list_ops.go:57:2: Consider pre-allocating `r` (prealloc)
	var r IntList = IntList{}
	^
list_ops.go:22:8: var-declaration: should omit type IntList from declaration of var r; it will be inferred from the right-hand side (revive)
	var r IntList = s.Reverse()
	      ^
list_ops.go:35:8: var-declaration: should omit type IntList from declaration of var r; it will be inferred from the right-hand side (revive)
	var r IntList = IntList{}
	      ^
list_ops_test.go:79: unnecessary trailing newline (whitespace)

	}
list_ops_test.go:116: unnecessary trailing newline (whitespace)

	}
list_ops_test.go:148: unnecessary trailing newline (whitespace)

	}
list_ops.go:8:60: block should not start with a whitespace (wsl)
func (s IntList) Foldl(fn func(int, int) int, acc int) int {
                                                           ^
list_ops.go:19:60: block should not start with a whitespace (wsl)
func (s IntList) Foldr(fn func(int, int) int, acc int) int {
                                                           ^
list_ops.go:32:52: block should not start with a whitespace (wsl)
func (s IntList) Filter(fn func(int) bool) IntList {
                                                   ^
list_ops_test.go:82:1: block should not end with a whitespace (or comment) (wsl)
}
^
list_ops_test.go:80:2: block should not end with a whitespace (or comment) (wsl)
	}
	^
list_ops_test.go:74:3: if statements should only be cuddled with assignments (wsl)
		if got != tt.want {
		^
list_ops_test.go:68:2: ranges should only be cuddled with assignments used in the iteration (wsl)
	for _, tt := range foldTestCases {
	^
list_ops_test.go:117:2: block should not end with a whitespace (or comment) (wsl)
	}
	^
list_ops_test.go:111:3: only one cuddle assignment allowed before if statement (wsl)
		if !reflect.DeepEqual(IntList(tt.want), got) {
		^
list_ops_test.go:8:5: foldTestCases is a global variable (gochecknoglobals)
var foldTestCases = []struct {
    ^
list_ops_test.go:84:5: filterTestCases is a global variable (gochecknoglobals)
var filterTestCases = []struct {
    ^
list_ops_test.go:120:5: lengthTestCases is a global variable (gochecknoglobals)
var lengthTestCases = []struct {
    ^
list_ops_test.go:152:5: mapTestCases is a global variable (gochecknoglobals)
var mapTestCases = []struct {
    ^
list_ops_test.go:187:5: reverseTestCases is a global variable (gochecknoglobals)
var reverseTestCases = []struct {
    ^
list_ops_test.go:219:5: appendTestCases is a global variable (gochecknoglobals)
var appendTestCases = []struct {
    ^
list_ops_test.go:261:5: concatTestCases is a global variable (gochecknoglobals)
var concatTestCases = []struct {
    ^
list_ops.go:95:3: S1011: should replace loop with `r = append(r, l...)` (gosimple)
		for _, n := range l {
		^
list_ops_examples_test.go:7:1: tests: ExampleFoldl refers to unknown identifier: Foldl (govet)
func ExampleFoldl() {
^
list_ops_examples_test.go:17:1: tests: ExampleFoldr refers to unknown identifier: Foldr (govet)
func ExampleFoldr() {
^
list_ops_examples_test.go:27:1: tests: ExampleFilter refers to unknown identifier: Filter (govet)
func ExampleFilter() {
^
list_ops_examples_test.go:45:1: tests: ExampleLen refers to unknown identifier: Len (govet)
func ExampleLen() {
^
list_ops_examples_test.go:53:1: tests: ExampleReverse refers to unknown identifier: Reverse (govet)
func ExampleReverse() {
^
list_ops_examples_test.go:70:1: tests: ExampleConcat refers to unknown identifier: Concat (govet)
func ExampleConcat() {
^
list_ops_test.go:66:1: Function TestFold missing the call to method parallel (paralleltest)
func TestFold(t *testing.T) {
^
list_ops_test.go:107:1: Function TestFilterMethod missing the call to method parallel (paralleltest)
func TestFilterMethod(t *testing.T) {
^
list_ops_test.go:140:1: Function TestLengthMethod missing the call to method parallel (paralleltest)
func TestLengthMethod(t *testing.T) {
^
list_ops_test.go:175:1: Function TestMapMethod missing the call to method parallel (paralleltest)
func TestMapMethod(t *testing.T) {
^
list_ops_test.go:207:1: Function TestReverseMethod missing the call to method parallel (paralleltest)
func TestReverseMethod(t *testing.T) {
^
list_ops_test.go:249:1: Function TestAppendMethod missing the call to method parallel (paralleltest)
func TestAppendMethod(t *testing.T) {
^
list_ops_test.go:284:1: Function TestConcatMethod missing the call to method parallel (paralleltest)
func TestConcatMethod(t *testing.T) {
^
list_ops_examples_test.go:1:9: package should be `listops_test` instead of `listops` (testpackage)
package listops
        ^
list_ops_test.go:1:9: package should be `listops_test` instead of `listops` (testpackage)
package listops
        ^
list_ops.go:92:2: variable name 'r' is too short for the scope of its usage (varnamelen)
	r := s
	^
list_ops.go:70:2: variable name 'r' is too short for the scope of its usage (varnamelen)
	r := IntList{}
	^
list_ops_test.go:108:6: variable name 'tt' is too short for the scope of its usage (varnamelen)
	for _, tt := range filterTestCases {
	    ^

real	0m0.557s
user	0m0.829s
sys	0m0.537s


 ==============================================================================

Exit code: -1

real	0m0.585s
user	0m0.843s
sys	0m0.558s

real	0m0.586s
user	0m0.845s
sys	0m0.558s

===============================================================================

Running: ../../.github/citools/go/go-lint-revive

Running Go Lint Revive

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.013s
user	0m0.006s
sys	0m0.011s


 ==============================================================================

Running: revive -formatter=stylish ./...

list_ops.go
  (18, 1)  https://revive.run/r#exported         comment on exported method IntList.Foldr should be of the form "Foldr ..."                        
  (22, 8)  https://revive.run/r#var-declaration  should omit type IntList from declaration of var r; it will be inferred from the right-hand side  
  (35, 8)  https://revive.run/r#var-declaration  should omit type IntList from declaration of var r; it will be inferred from the right-hand side  
  (57, 8)  https://revive.run/r#var-declaration  should omit type IntList from declaration of var r; it will be inferred from the right-hand side  


 âœ– 4 problems (0 errors) (4 warnings)

real	0m0.058s
user	0m0.041s
sys	0m0.034s


 ==============================================================================

Exit code: 0

real	0m0.085s
user	0m0.054s
sys	0m0.055s

real	0m0.088s
user	0m0.055s
sys	0m0.057s

===============================================================================

Running: ../../.github/citools/go/go-lint-ineffassign
../run-tests: line 41: .github/citools/go/go-lint-ineffassign: No such file or directory

real	0m0.001s
user	0m0.000s
sys	0m0.000s

===============================================================================

Running: ../../.github/citools/go/go-lint-go-consistent

Running Go go-consistent

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.014s
user	0m0.006s
sys	0m0.012s


 ==============================================================================

Running: go-consistent -v ./...

	info: check "./."
internal error: package "fmt" without types was imported from "listops [listops.test]"

real	0m0.111s
user	0m0.162s
sys	0m0.125s


 ==============================================================================

Exit code: -1

real	0m0.136s
user	0m0.177s
sys	0m0.142s

real	0m0.138s
user	0m0.178s
sys	0m0.143s

===============================================================================

Running: ../../.github/citools/go/go-lint-staticcheck

Running Go StaticCheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.023s
user	0m0.015s
sys	0m0.014s


 ==============================================================================

Running: staticcheck -checks=all ./...

list_ops.go:18:1: comment on exported method Foldr should be of the form "Foldr ..." (ST1020)
list_ops.go:22:8: should omit type IntList from declaration; it will be inferred from the right-hand side (ST1023)
list_ops.go:35:8: should omit type IntList from declaration; it will be inferred from the right-hand side (ST1023)
list_ops.go:57:8: should omit type IntList from declaration; it will be inferred from the right-hand side (ST1023)
list_ops.go:95:3: should replace loop with r = append(r, l...) (S1011)

real	0m0.188s
user	0m0.223s
sys	0m0.175s


 ==============================================================================

Exit code: -1

real	0m0.225s
user	0m0.241s
sys	0m0.203s

real	0m0.226s
user	0m0.241s
sys	0m0.205s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocritic

Running Go gocritic

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.013s
user	0m0.009s
sys	0m0.007s


 ==============================================================================

Running: gocritic check -enableAll ./...

./list_ops.go:9:2: commentedOutCode: may want to remove commented-out code
./list_ops.go:20:2: commentedOutCode: may want to remove commented-out code
./list_ops.go:33:2: commentedOutCode: may want to remove commented-out code
./list_ops.go:48:2: commentedOutCode: may want to remove commented-out code
./list_ops.go:55:2: commentedOutCode: may want to remove commented-out code
./list_ops.go:68:2: commentedOutCode: may want to remove commented-out code
./list_ops.go:76:2: commentedOutCode: may want to remove commented-out code
./list_ops.go:83:2: commentedOutCode: may want to remove commented-out code
./list_ops.go:90:2: commentedOutCode: may want to remove commented-out code

real	0m0.834s
user	0m2.012s
sys	0m0.239s


 ==============================================================================

Exit code: -1

real	0m0.857s
user	0m2.025s
sys	0m0.256s

real	0m0.859s
user	0m2.026s
sys	0m0.258s

===============================================================================

Running: ../../.github/citools/go/go-lint-go_vet

Running Go Vet

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.019s
user	0m0.005s
sys	0m0.020s


 ==============================================================================

Running: go vet ./...

# listops
./list_ops_examples_test.go:7:1: ExampleFoldl refers to unknown identifier: Foldl
./list_ops_examples_test.go:17:1: ExampleFoldr refers to unknown identifier: Foldr
./list_ops_examples_test.go:27:1: ExampleFilter refers to unknown identifier: Filter
./list_ops_examples_test.go:45:1: ExampleLen refers to unknown identifier: Len
./list_ops_examples_test.go:53:1: ExampleReverse refers to unknown identifier: Reverse
./list_ops_examples_test.go:70:1: ExampleConcat refers to unknown identifier: Concat

real	0m0.087s
user	0m0.110s
sys	0m0.096s


 ==============================================================================

Exit code: -1

real	0m0.118s
user	0m0.121s
sys	0m0.125s

real	0m0.119s
user	0m0.122s
sys	0m0.126s

===============================================================================

Running: ../../.github/citools/go/go-fixer-go_fix

Running go fix

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.012s
user	0m0.005s
sys	0m0.009s


 ==============================================================================

Running: go fix ./...


real	0m0.017s
user	0m0.009s
sys	0m0.011s


 ==============================================================================

Exit code: 0

real	0m0.039s
user	0m0.022s
sys	0m0.028s

real	0m0.041s
user	0m0.022s
sys	0m0.030s

===============================================================================

Running: ../../.github/citools/go/go-lint-errcheck

Running Go errcheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.018s
user	0m0.008s
sys	0m0.016s


 ==============================================================================

Running: errcheck ./...


real	0m0.461s
user	0m1.354s
sys	0m0.290s


 ==============================================================================

Exit code: 0

real	0m0.493s
user	0m1.373s
sys	0m0.312s

real	0m0.495s
user	0m1.375s
sys	0m0.312s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocyclo

Running Go gocyclo

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.011s
user	0m0.004s
sys	0m0.011s


 ==============================================================================

Running: gocyclo .

4 listops TestFold list_ops_test.go:66:1
3 listops TestConcatMethod list_ops_test.go:284:1
3 listops TestAppendMethod list_ops_test.go:249:1
3 listops TestReverseMethod list_ops_test.go:207:1
3 listops TestMapMethod list_ops_test.go:175:1
3 listops TestLengthMethod list_ops_test.go:140:1
3 listops TestFilterMethod list_ops_test.go:107:1
3 listops (IntList).Concat list_ops.go:89:1
3 listops (IntList).Filter list_ops.go:32:1
2 listops (IntList).Reverse list_ops.go:67:1
2 listops (IntList).Map list_ops.go:54:1
2 listops (IntList).Foldr list_ops.go:19:1
2 listops (IntList).Foldl list_ops.go:8:1
1 listops ExampleConcat list_ops_examples_test.go:70:1
1 listops ExampleAppend list_ops_examples_test.go:61:1
1 listops ExampleReverse list_ops_examples_test.go:53:1
1 listops ExampleLen list_ops_examples_test.go:45:1
1 listops ExampleMap list_ops_examples_test.go:36:1
1 listops ExampleFilter list_ops_examples_test.go:27:1
1 listops ExampleFoldr list_ops_examples_test.go:17:1
1 listops ExampleFoldl list_ops_examples_test.go:7:1
1 listops (IntList).Append list_ops.go:82:1
1 listops (IntList).Length list_ops.go:47:1

real	0m0.002s
user	0m0.001s
sys	0m0.001s


 ==============================================================================

Exit code: 0

real	0m0.022s
user	0m0.009s
sys	0m0.019s

real	0m0.023s
user	0m0.011s
sys	0m0.020s

===============================================================================

Running: ../../.github/citools/go/go-lint-misspell

Running Go misspell

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: misspell .


real	0m0.024s
user	0m0.024s
sys	0m0.012s


 ==============================================================================

Exit code: 0

real	0m0.033s
user	0m0.027s
sys	0m0.021s

real	0m0.036s
user	0m0.027s
sys	0m0.023s

===============================================================================

Running: ../../.github/citools/go/go-lint-gosec

Running Go GoSec

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.012s
user	0m0.006s
sys	0m0.010s


 ==============================================================================

Running: gosec ./...

[gosec] 2023/09/07 00:24:44 Including rules: default
[gosec] 2023/09/07 00:24:44 Excluding rules: default
[gosec] 2023/09/07 00:24:44 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/list-ops
[gosec] 2023/09/07 00:24:44 Checking package: listops
[gosec] 2023/09/07 00:24:44 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/list-ops/list_ops.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 1
  Lines  : 101
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.103s
user	0m0.100s
sys	0m0.049s


 ==============================================================================

Exit code: 0

real	0m0.124s
user	0m0.111s
sys	0m0.067s

real	0m0.126s
user	0m0.112s
sys	0m0.068s

===============================================================================

Running: ../../.github/citools/go/go-test-cover-report

Running Go Test, Coverage & Reports

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.015s
user	0m0.010s
sys	0m0.010s


 ==============================================================================

Running: gotest -v -covermode=count -coverprofile coverage.out ./...

=== RUN   TestFold
    list_ops_test.go:77: PASS: foldl: empty list
    list_ops_test.go:77: PASS: foldl: direction independent function applied to non-empty list
    list_ops_test.go:77: PASS: foldl: direction dependent function applied to non-empty list
    list_ops_test.go:77: PASS: foldr: empty list
    list_ops_test.go:77: PASS: foldr: direction independent function applied to non-empty list
    list_ops_test.go:77: PASS: foldr: direction dependent function applied to non-empty list
--- PASS: TestFold (0.00s)
=== RUN   TestFilterMethod
    list_ops_test.go:114: PASS: filter: empty list
    list_ops_test.go:114: PASS: filter: non-empty list
--- PASS: TestFilterMethod (0.00s)
=== RUN   TestLengthMethod
    list_ops_test.go:146: PASS: length: empty list
    list_ops_test.go:146: PASS: length: non-empty list
--- PASS: TestLengthMethod (0.00s)
=== RUN   TestMapMethod
    list_ops_test.go:181: PASS: map: empty list
    list_ops_test.go:181: PASS: map: non-empty list
--- PASS: TestMapMethod (0.00s)
=== RUN   TestReverseMethod
    list_ops_test.go:213: PASS: reverse: empty list
    list_ops_test.go:213: PASS: reverse: non-empty list
--- PASS: TestReverseMethod (0.00s)
=== RUN   TestAppendMethod
    list_ops_test.go:255: PASS: append: empty list
    list_ops_test.go:255: PASS: append: empty list to list
    list_ops_test.go:255: PASS: append: non-empty lists
--- PASS: TestAppendMethod (0.00s)
=== RUN   TestConcatMethod
    list_ops_test.go:290: PASS: concat: empty list
    list_ops_test.go:290: PASS: concat: list of lists
--- PASS: TestConcatMethod (0.00s)
=== RUN   ExampleFoldl
--- PASS: ExampleFoldl (0.00s)
=== RUN   ExampleFoldr
--- PASS: ExampleFoldr (0.00s)
=== RUN   ExampleFilter
--- PASS: ExampleFilter (0.00s)
=== RUN   ExampleMap
--- PASS: ExampleMap (0.00s)
=== RUN   ExampleLen
--- PASS: ExampleLen (0.00s)
=== RUN   ExampleReverse
--- PASS: ExampleReverse (0.00s)
=== RUN   ExampleAppend
--- PASS: ExampleAppend (0.00s)
=== RUN   ExampleConcat
--- PASS: ExampleConcat (0.00s)
PASS
coverage: 100.0% of statements
ok  	listops	0.003s	coverage: 100.0% of statements

real	0m0.183s
user	0m0.248s
sys	0m0.159s


 ==============================================================================

Running: go tool cover -func=coverage.out

listops/list_ops.go:8:	Foldl		100.0%
listops/list_ops.go:19:	Foldr		100.0%
listops/list_ops.go:32:	Filter		100.0%
listops/list_ops.go:47:	Length		100.0%
listops/list_ops.go:54:	Map		100.0%
listops/list_ops.go:67:	Reverse		100.0%
listops/list_ops.go:82:	Append		100.0%
listops/list_ops.go:89:	Concat		100.0%
total:			(statements)	100.0%

real	0m0.029s
user	0m0.015s
sys	0m0.021s


 ==============================================================================

Running: go tool cover -html coverage.out -o coverage.html


real	0m0.031s
user	0m0.011s
sys	0m0.027s


 ==============================================================================

Running: cover_annotate

Running: gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

real	0m0.012s
user	0m0.002s
sys	0m0.013s

real	0m0.012s
user	0m0.002s
sys	0m0.013s


 ==============================================================================

Running: gotest -v -race -covermode=atomic ./...

=== RUN   TestFold
    list_ops_test.go:77: PASS: foldl: empty list
    list_ops_test.go:77: PASS: foldl: direction independent function applied to non-empty list
    list_ops_test.go:77: PASS: foldl: direction dependent function applied to non-empty list
    list_ops_test.go:77: PASS: foldr: empty list
    list_ops_test.go:77: PASS: foldr: direction independent function applied to non-empty list
    list_ops_test.go:77: PASS: foldr: direction dependent function applied to non-empty list
--- PASS: TestFold (0.00s)
=== RUN   TestFilterMethod
    list_ops_test.go:114: PASS: filter: empty list
    list_ops_test.go:114: PASS: filter: non-empty list
--- PASS: TestFilterMethod (0.00s)
=== RUN   TestLengthMethod
    list_ops_test.go:146: PASS: length: empty list
    list_ops_test.go:146: PASS: length: non-empty list
--- PASS: TestLengthMethod (0.00s)
=== RUN   TestMapMethod
    list_ops_test.go:181: PASS: map: empty list
    list_ops_test.go:181: PASS: map: non-empty list
--- PASS: TestMapMethod (0.00s)
=== RUN   TestReverseMethod
    list_ops_test.go:213: PASS: reverse: empty list
    list_ops_test.go:213: PASS: reverse: non-empty list
--- PASS: TestReverseMethod (0.00s)
=== RUN   TestAppendMethod
    list_ops_test.go:255: PASS: append: empty list
    list_ops_test.go:255: PASS: append: empty list to list
    list_ops_test.go:255: PASS: append: non-empty lists
--- PASS: TestAppendMethod (0.00s)
=== RUN   TestConcatMethod
    list_ops_test.go:290: PASS: concat: empty list
    list_ops_test.go:290: PASS: concat: list of lists
--- PASS: TestConcatMethod (0.00s)
=== RUN   ExampleFoldl
--- PASS: ExampleFoldl (0.00s)
=== RUN   ExampleFoldr
--- PASS: ExampleFoldr (0.00s)
=== RUN   ExampleFilter
--- PASS: ExampleFilter (0.00s)
=== RUN   ExampleMap
--- PASS: ExampleMap (0.00s)
=== RUN   ExampleLen
--- PASS: ExampleLen (0.00s)
=== RUN   ExampleReverse
--- PASS: ExampleReverse (0.00s)
=== RUN   ExampleAppend
--- PASS: ExampleAppend (0.00s)
=== RUN   ExampleConcat
--- PASS: ExampleConcat (0.00s)
PASS
coverage: 100.0% of statements
ok  	listops	1.013s	coverage: 100.0% of statements

real	0m1.258s
user	0m0.285s
sys	0m0.140s


 ==============================================================================

Exit code: 0

real	0m1.540s
user	0m0.575s
sys	0m0.382s

real	0m1.542s
user	0m0.577s
sys	0m0.382s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

gotest -v --run=xxx --bench . --benchmem |& tee benchstat-new.txt
PASS
ok  	listops	0.002s

real	0m0.157s
user	0m0.176s
sys	0m0.121s

===============================================================================

gotest -v -tags bonus
=== RUN   TestFold
    list_ops_test.go:77: PASS: foldl: empty list
    list_ops_test.go:77: PASS: foldl: direction independent function applied to non-empty list
    list_ops_test.go:77: PASS: foldl: direction dependent function applied to non-empty list
    list_ops_test.go:77: PASS: foldr: empty list
    list_ops_test.go:77: PASS: foldr: direction independent function applied to non-empty list
    list_ops_test.go:77: PASS: foldr: direction dependent function applied to non-empty list
--- PASS: TestFold (0.00s)
=== RUN   TestFilterMethod
    list_ops_test.go:114: PASS: filter: empty list
    list_ops_test.go:114: PASS: filter: non-empty list
--- PASS: TestFilterMethod (0.00s)
=== RUN   TestLengthMethod
    list_ops_test.go:146: PASS: length: empty list
    list_ops_test.go:146: PASS: length: non-empty list
--- PASS: TestLengthMethod (0.00s)
=== RUN   TestMapMethod
    list_ops_test.go:181: PASS: map: empty list
    list_ops_test.go:181: PASS: map: non-empty list
--- PASS: TestMapMethod (0.00s)
=== RUN   TestReverseMethod
    list_ops_test.go:213: PASS: reverse: empty list
    list_ops_test.go:213: PASS: reverse: non-empty list
--- PASS: TestReverseMethod (0.00s)
=== RUN   TestAppendMethod
    list_ops_test.go:255: PASS: append: empty list
    list_ops_test.go:255: PASS: append: empty list to list
    list_ops_test.go:255: PASS: append: non-empty lists
--- PASS: TestAppendMethod (0.00s)
=== RUN   TestConcatMethod
    list_ops_test.go:290: PASS: concat: empty list
    list_ops_test.go:290: PASS: concat: list of lists
--- PASS: TestConcatMethod (0.00s)
=== RUN   ExampleFoldl
--- PASS: ExampleFoldl (0.00s)
=== RUN   ExampleFoldr
--- PASS: ExampleFoldr (0.00s)
=== RUN   ExampleFilter
--- PASS: ExampleFilter (0.00s)
=== RUN   ExampleMap
--- PASS: ExampleMap (0.00s)
=== RUN   ExampleLen
--- PASS: ExampleLen (0.00s)
=== RUN   ExampleReverse
--- PASS: ExampleReverse (0.00s)
=== RUN   ExampleAppend
--- PASS: ExampleAppend (0.00s)
=== RUN   ExampleConcat
--- PASS: ExampleConcat (0.00s)
PASS
ok  	listops	0.003s

real	0m0.184s
user	0m0.271s
sys	0m0.163s

===============================================================================

benchstat benchstat-old.txt benchstat-new.txt

real	0m0.002s
user	0m0.000s
sys	0m0.002s

===============================================================================

gomarkdoc --output listops-doc.md

real	0m0.021s
user	0m0.016s
sys	0m0.007s

===============================================================================

go doc -all listops
package listops // import "listops"

Package listops is a library of list utility functions.

TYPES

type IntList []int
    IntList is an abstraction of a list of integers which we can define methods
    on

func (s IntList) Append(lst IntList) IntList
    Append returns an end-appended list.

func (s IntList) Concat(lists []IntList) IntList
    Concat returns a flattened list from all the lists passed.

func (s IntList) Filter(fn func(int) bool) IntList
    Filter returns list of all items for which predicate(item) is True.

func (s IntList) Foldl(fn func(int, int) int, acc int) int
    Foldl returns the left to right reduced value using the passed function.

func (s IntList) Foldr(fn func(int, int) int, acc int) int
    Foldl returns the right to left reduced value using the passed function.

func (s IntList) Length() int
    Length returns the length of the list.

func (s IntList) Map(fn func(int) int) IntList
    Map returns a list of the results of applying function(item) on all items.

func (s IntList) Reverse() IntList
    Reverse returns a reversed list.


real	0m0.032s
user	0m0.013s
sys	0m0.026s


===============================================================================

