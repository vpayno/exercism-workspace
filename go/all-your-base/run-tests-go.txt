Running automated test file(s):

Go packages: allyourbase 


===============================================================================

golint allyourbase

real	0m0.568s
user	0m0.669s
sys	0m0.445s

===============================================================================

go test -v -covermode=count -coverprofile coverage.out allyourbase
=== RUN   TestConvertToBase
=== RUN   TestConvertToBase/single_bit_one_to_decimal
=== RUN   TestConvertToBase/binary_to_single_decimal
=== RUN   TestConvertToBase/single_decimal_to_binary
=== RUN   TestConvertToBase/binary_to_multiple_decimal
=== RUN   TestConvertToBase/decimal_to_binary
=== RUN   TestConvertToBase/trinary_to_hexadecimal
=== RUN   TestConvertToBase/hexadecimal_to_trinary
=== RUN   TestConvertToBase/15-bit_integer
=== RUN   TestConvertToBase/empty_list
=== RUN   TestConvertToBase/single_zero
=== RUN   TestConvertToBase/multiple_zeros
=== RUN   TestConvertToBase/leading_zeros
=== RUN   TestConvertToBase/input_base_is_one
=== RUN   TestConvertToBase/input_base_is_zero
=== RUN   TestConvertToBase/input_base_is_negative
=== RUN   TestConvertToBase/negative_digit
=== RUN   TestConvertToBase/invalid_positive_digit
=== RUN   TestConvertToBase/output_base_is_one
=== RUN   TestConvertToBase/output_base_is_zero
=== RUN   TestConvertToBase/output_base_is_negative
=== RUN   TestConvertToBase/both_bases_are_negative
--- PASS: TestConvertToBase (0.00s)
    --- PASS: TestConvertToBase/single_bit_one_to_decimal (0.00s)
    --- PASS: TestConvertToBase/binary_to_single_decimal (0.00s)
    --- PASS: TestConvertToBase/single_decimal_to_binary (0.00s)
    --- PASS: TestConvertToBase/binary_to_multiple_decimal (0.00s)
    --- PASS: TestConvertToBase/decimal_to_binary (0.00s)
    --- PASS: TestConvertToBase/trinary_to_hexadecimal (0.00s)
    --- PASS: TestConvertToBase/hexadecimal_to_trinary (0.00s)
    --- PASS: TestConvertToBase/15-bit_integer (0.00s)
    --- PASS: TestConvertToBase/empty_list (0.00s)
    --- PASS: TestConvertToBase/single_zero (0.00s)
    --- PASS: TestConvertToBase/multiple_zeros (0.00s)
    --- PASS: TestConvertToBase/leading_zeros (0.00s)
    --- PASS: TestConvertToBase/input_base_is_one (0.00s)
    --- PASS: TestConvertToBase/input_base_is_zero (0.00s)
    --- PASS: TestConvertToBase/input_base_is_negative (0.00s)
    --- PASS: TestConvertToBase/negative_digit (0.00s)
    --- PASS: TestConvertToBase/invalid_positive_digit (0.00s)
    --- PASS: TestConvertToBase/output_base_is_one (0.00s)
    --- PASS: TestConvertToBase/output_base_is_zero (0.00s)
    --- PASS: TestConvertToBase/output_base_is_negative (0.00s)
    --- PASS: TestConvertToBase/both_bases_are_negative (0.00s)
=== RUN   ExampleConvertToBase
--- PASS: ExampleConvertToBase (0.00s)
=== RUN   ExampleConvertToBase10
--- PASS: ExampleConvertToBase10 (0.00s)
=== RUN   ExampleConvertFromBase10
--- PASS: ExampleConvertFromBase10 (0.00s)
=== RUN   ExampleConvertStrToIntList
--- PASS: ExampleConvertStrToIntList (0.00s)
PASS
coverage: 97.0% of statements
ok  	allyourbase	0.007s	coverage: 97.0% of statements

real	0m1.209s
user	0m1.536s
sys	0m0.781s

===============================================================================

go tool cover -func=coverage.out
allyourbase/all_your_base.go:12:	ConvertToBase		95.2%
allyourbase/all_your_base.go:61:	quickChecks		100.0%
allyourbase/all_your_base.go:93:	mathPow			100.0%
allyourbase/all_your_base.go:98:	ConvertIntToIntList	100.0%
allyourbase/all_your_base.go:108:	ConvertStrToIntList	85.7%
allyourbase/all_your_base.go:125:	ConvertToBase10		100.0%
allyourbase/all_your_base.go:147:	ConvertFromBase10	100.0%
total:					(statements)		97.0%

real	0m0.489s
user	0m0.586s
sys	0m0.393s

===============================================================================

go tool cover -html coverage.out -o coverage.html

real	0m0.415s
user	0m0.537s
sys	0m0.353s

===============================================================================

go test -v -race -covermode=atomic allyourbase
=== RUN   TestConvertToBase
=== RUN   TestConvertToBase/single_bit_one_to_decimal
=== RUN   TestConvertToBase/binary_to_single_decimal
=== RUN   TestConvertToBase/single_decimal_to_binary
=== RUN   TestConvertToBase/binary_to_multiple_decimal
=== RUN   TestConvertToBase/decimal_to_binary
=== RUN   TestConvertToBase/trinary_to_hexadecimal
=== RUN   TestConvertToBase/hexadecimal_to_trinary
=== RUN   TestConvertToBase/15-bit_integer
=== RUN   TestConvertToBase/empty_list
=== RUN   TestConvertToBase/single_zero
=== RUN   TestConvertToBase/multiple_zeros
=== RUN   TestConvertToBase/leading_zeros
=== RUN   TestConvertToBase/input_base_is_one
=== RUN   TestConvertToBase/input_base_is_zero
=== RUN   TestConvertToBase/input_base_is_negative
=== RUN   TestConvertToBase/negative_digit
=== RUN   TestConvertToBase/invalid_positive_digit
=== RUN   TestConvertToBase/output_base_is_one
=== RUN   TestConvertToBase/output_base_is_zero
=== RUN   TestConvertToBase/output_base_is_negative
=== RUN   TestConvertToBase/both_bases_are_negative
--- PASS: TestConvertToBase (0.01s)
    --- PASS: TestConvertToBase/single_bit_one_to_decimal (0.00s)
    --- PASS: TestConvertToBase/binary_to_single_decimal (0.00s)
    --- PASS: TestConvertToBase/single_decimal_to_binary (0.00s)
    --- PASS: TestConvertToBase/binary_to_multiple_decimal (0.00s)
    --- PASS: TestConvertToBase/decimal_to_binary (0.00s)
    --- PASS: TestConvertToBase/trinary_to_hexadecimal (0.00s)
    --- PASS: TestConvertToBase/hexadecimal_to_trinary (0.00s)
    --- PASS: TestConvertToBase/15-bit_integer (0.00s)
    --- PASS: TestConvertToBase/empty_list (0.00s)
    --- PASS: TestConvertToBase/single_zero (0.00s)
    --- PASS: TestConvertToBase/multiple_zeros (0.00s)
    --- PASS: TestConvertToBase/leading_zeros (0.00s)
    --- PASS: TestConvertToBase/input_base_is_one (0.00s)
    --- PASS: TestConvertToBase/input_base_is_zero (0.00s)
    --- PASS: TestConvertToBase/input_base_is_negative (0.00s)
    --- PASS: TestConvertToBase/negative_digit (0.00s)
    --- PASS: TestConvertToBase/invalid_positive_digit (0.00s)
    --- PASS: TestConvertToBase/output_base_is_one (0.00s)
    --- PASS: TestConvertToBase/output_base_is_zero (0.00s)
    --- PASS: TestConvertToBase/output_base_is_negative (0.00s)
    --- PASS: TestConvertToBase/both_bases_are_negative (0.00s)
=== RUN   ExampleConvertToBase
--- PASS: ExampleConvertToBase (0.00s)
=== RUN   ExampleConvertToBase10
--- PASS: ExampleConvertToBase10 (0.00s)
=== RUN   ExampleConvertFromBase10
--- PASS: ExampleConvertFromBase10 (0.00s)
=== RUN   ExampleConvertStrToIntList
--- PASS: ExampleConvertStrToIntList (0.00s)
PASS
coverage: 97.0% of statements
ok  	allyourbase	0.056s	coverage: 97.0% of statements

real	0m1.478s
user	0m1.837s
sys	0m0.748s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

go test --run=xxx --bench . --benchmem |& tee benchstat-new.txt
PASS
ok  	allyourbase	0.019s

real	0m1.079s
user	0m1.496s
sys	0m0.748s

===============================================================================

go test -tags bonus
PASS
ok  	allyourbase	0.008s

real	0m0.956s
user	0m1.235s
sys	0m0.688s

===============================================================================

go install golang.org/x/perf/cmd/benchstat@latest

real	0m1.212s
user	0m1.382s
sys	0m0.537s

benchstat benchstat-old.txt benchstat-new.txt

real	0m0.043s
user	0m0.041s
sys	0m0.027s

===============================================================================

go vet allyourbase

real	0m0.603s
user	0m0.833s
sys	0m0.452s

===============================================================================

go fix allyourbase

real	0m0.301s
user	0m0.410s
sys	0m0.301s

===============================================================================

gosec ./all-your-base
[gosec] 2022/07/30 13:57:02 Including rules: default
[gosec] 2022/07/30 13:57:02 Excluding rules: default
[gosec] 2022/07/30 13:57:02 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/all-your-base
2022/07/30 13:57:02 internal error: package "errors" without types was imported from "command-line-arguments"

real	0m0.864s
user	0m1.181s
sys	0m0.511s

===============================================================================

gomarkdoc --output allyourbase-doc.md

real	0m0.043s
user	0m0.034s
sys	0m0.022s

===============================================================================

go doc -all allyourbase
package allyourbase // import "allyourbase"

Package allyourbase is used to convert from any base to any other base.

FUNCTIONS

func ConvertFromBase10(outputBase int, inputNum int) []int
    ConvertFromBase10 returns a base x number. It didn't make sense to pass the
    functions an int slice so I'm hiding that part of the algorithm in the
    function.

func ConvertIntToIntList(num int) []int
    ConvertIntToIntList returns a list of intergers for the passed int.

func ConvertStrToIntList(inputStr string) []int
    ConvertStrToIntList returns a list of intergers for the passed string.

func ConvertToBase(inputBase int, inputDigits []int, outputBase int) ([]int, error)
    ConvertToBase returns an integer slice of converted numbers.

func ConvertToBase10(inputBase int, inputDigits []int) int
    ConvertToBase10 returns a base 10 number.


real	0m0.385s
user	0m0.439s
sys	0m0.349s


===============================================================================

