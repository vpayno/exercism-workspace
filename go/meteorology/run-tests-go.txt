Running automated test file(s):

Go packages: meteorology 


===============================================================================

Running: ../../.github/citools/go/go-lint-golangci-lint

Running GoLangCi-Lint

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.028s
user	0m0.022s
sys	0m0.029s


 ==============================================================================

Running: golangci-lint run --enable-all ./...

level=warning msg="[runner] The linter 'varcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'structcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'golint' is deprecated (since v1.41.0) due to: The repository of the linter has been archived by the owner. Replaced by revive."
level=warning msg="[runner] The linter 'maligned' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. Replaced by govet 'fieldalignment'."
level=warning msg="[runner] The linter 'exhaustivestruct' is deprecated (since v1.46.0) due to: The owner seems to have abandoned the linter. Replaced by exhaustruct."
level=warning msg="[runner] The linter 'deadcode' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'interfacer' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. "
level=warning msg="[runner] The linter 'nosnakecase' is deprecated (since v1.48.1) due to: The repository of the linter has been deprecated by the owner. Replaced by revive(var-naming)."
level=warning msg="[runner] The linter 'scopelint' is deprecated (since v1.39.0) due to: The repository of the linter has been deprecated by the owner. Replaced by exportloopref."
level=warning msg="[runner] The linter 'ifshort' is deprecated (since v1.48.0) due to: The repository of the linter has been deprecated by the owner. "
meteorology_examples_test.go:63: File is not `gofumpt`-ed (gofumpt)

meteorology.go:58:6: type name will be used as meteorology.MeteorologyData by other packages, and that stutters; consider calling this Data (golint)
type MeteorologyData struct {
     ^
meteorology_test.go:26:14: Using the variable on range scope `tt` in function literal (scopelint)
			if got := tt.unit.String(); got != tt.want {
			          ^
meteorology_test.go:27:48: Using the variable on range scope `tt` in function literal (scopelint)
				t.Errorf("unit.String()=%q, want %q", got, tt.want)
				                                           ^
meteorology_test.go:57:14: Using the variable on range scope `tt` in function literal (scopelint)
			if got := tt.temp.String(); got != tt.want {
			          ^
meteorology_examples_test.go:62: unnecessary leading newline (whitespace)
func ExampleMeteorologyData_String() {

meteorology.go:17:2: return with no blank line before (nlreturn)
	return units[index]
	^
meteorology.go:43:2: return with no blank line before (nlreturn)
	return units[index]
	^
meteorology_examples_test.go:5:6: ExampleTemperatureUnit_String contains underscore. You should use mixedCap or MixedCap. (nosnakecase)
func ExampleTemperatureUnit_String() {
     ^
meteorology_examples_test.go:16:6: ExampleTemperature_String contains underscore. You should use mixedCap or MixedCap. (nosnakecase)
func ExampleTemperature_String() {
     ^
meteorology_examples_test.go:34:6: ExampleSpeedUnit_String contains underscore. You should use mixedCap or MixedCap. (nosnakecase)
func ExampleSpeedUnit_String() {
     ^
meteorology_examples_test.go:45:6: ExampleSpeed_String contains underscore. You should use mixedCap or MixedCap. (nosnakecase)
func ExampleSpeed_String() {
     ^
meteorology_test.go:7:1: Function TestTemperatureUnitString missing the call to method parallel (paralleltest)
func TestTemperatureUnitString(t *testing.T) {
^
meteorology_test.go:24:2: Range statement for test TestTemperatureUnitString missing the call to method parallel in test Run (paralleltest)
	for _, tt := range tests {
	^
meteorology_test.go:33:1: Function TestTemperatureString missing the call to method parallel (paralleltest)
func TestTemperatureString(t *testing.T) {
^
meteorology_test.go:55:2: Range statement for test TestTemperatureString missing the call to method parallel in test Run (paralleltest)
	for _, tt := range tests {
	^
meteorology_test.go:64:1: Function TestSpeedUnitString missing the call to method parallel (paralleltest)
func TestSpeedUnitString(t *testing.T) {
^
meteorology_test.go:81:2: Range statement for test TestSpeedUnitString missing the call to method parallel in test Run (paralleltest)
	for _, tt := range tests {
	^
meteorology_test.go:90:1: Function TestSpeedString missing the call to method parallel (paralleltest)
func TestSpeedString(t *testing.T) {
^
meteorology_test.go:112:2: Range statement for test TestSpeedString missing the call to method parallel in test Run (paralleltest)
	for _, tt := range tests {
	^
meteorology_test.go:121:1: Function TestMeteorologyDataString missing the call to method parallel (paralleltest)
func TestMeteorologyDataString(t *testing.T) {
^
meteorology_test.go:143:2: Range statement for test TestMeteorologyDataString missing the call to method parallel in test Run (paralleltest)
	for _, tt := range tests {
	^
meteorology_examples_test.go:1:9: package should be `meteorology_test` instead of `meteorology` (testpackage)
package meteorology
        ^
meteorology_test.go:1:9: package should be `meteorology_test` instead of `meteorology` (testpackage)
package meteorology
        ^
meteorology.go:68:6: variable name 's' is too short for the scope of its usage (varnamelen)
	var s string
	    ^

real	0m0.501s
user	0m0.871s
sys	0m0.415s


 ==============================================================================

Exit code: -1

real	0m0.539s
user	0m0.900s
sys	0m0.449s

real	0m0.540s
user	0m0.902s
sys	0m0.449s

===============================================================================

Running: ../../.github/citools/go/go-lint-revive

Running Go Lint Revive

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.025s
user	0m0.024s
sys	0m0.026s


 ==============================================================================

Running: revive -formatter=stylish ./...

meteorology.go
  (1, 1)   https://revive.run/r#package-comments  should have a package comment                                                                                           
  (58, 6)  https://revive.run/r#exported          type name will be used as meteorology.MeteorologyData by other packages, and that stutters; consider calling this Data  


 âœ– 2 problems (0 errors) (2 warnings)

real	0m0.089s
user	0m0.025s
sys	0m0.044s


 ==============================================================================

Exit code: 0

real	0m0.125s
user	0m0.053s
sys	0m0.079s

real	0m0.127s
user	0m0.054s
sys	0m0.080s

===============================================================================

Running: ../../.github/citools/go/go-lint-ineffassign
../run-tests: line 41: .github/citools/go/go-lint-ineffassign: No such file or directory

real	0m0.001s
user	0m0.000s
sys	0m0.002s

===============================================================================

Running: ../../.github/citools/go/go-lint-go-consistent

Running Go go-consistent

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.021s
user	0m0.015s
sys	0m0.019s


 ==============================================================================

Running: go-consistent -v ./...

	info: check "./."
internal error: package "fmt" without types was imported from "meteorology"

real	0m0.085s
user	0m0.097s
sys	0m0.103s


 ==============================================================================

Exit code: -1

real	0m0.120s
user	0m0.118s
sys	0m0.135s

real	0m0.123s
user	0m0.120s
sys	0m0.136s

===============================================================================

Running: ../../.github/citools/go/go-lint-staticcheck

Running Go StaticCheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.020s
user	0m0.015s
sys	0m0.023s


 ==============================================================================

Running: staticcheck -checks=all ./...

meteorology.go:1:1: at least one file in a package should have a package comment (ST1000)
meteorology.go:14:1: comment on exported method String should be of the form "String ..." (ST1020)
meteorology.go:26:1: comment on exported method String should be of the form "String ..." (ST1020)
meteorology.go:40:1: comment on exported method String should be of the form "String ..." (ST1020)
meteorology.go:52:1: comment on exported method String should be of the form "String ..." (ST1020)
meteorology.go:66:1: comment on exported method String should be of the form "String ..." (ST1020)

real	0m0.208s
user	0m0.203s
sys	0m0.142s


 ==============================================================================

Exit code: -1

real	0m0.238s
user	0m0.220s
sys	0m0.176s

real	0m0.240s
user	0m0.220s
sys	0m0.178s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocritic

Running Go gocritic

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.026s
user	0m0.024s
sys	0m0.032s


 ==============================================================================

Running: gocritic check -enableAll ./...


real	0m0.833s
user	0m2.060s
sys	0m0.293s


 ==============================================================================

Exit code: 0

real	0m0.868s
user	0m2.091s
sys	0m0.331s

real	0m0.870s
user	0m2.091s
sys	0m0.332s

===============================================================================

Running: ../../.github/citools/go/go-lint-go_vet

Running Go Vet

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.019s
user	0m0.016s
sys	0m0.018s


 ==============================================================================

Running: go vet ./...


real	0m0.082s
user	0m0.122s
sys	0m0.132s


 ==============================================================================

Exit code: 0

real	0m0.109s
user	0m0.140s
sys	0m0.161s

real	0m0.111s
user	0m0.141s
sys	0m0.161s

===============================================================================

Running: ../../.github/citools/go/go-fixer-go_fix

Running go fix

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.022s
user	0m0.022s
sys	0m0.015s


 ==============================================================================

Running: go fix ./...


real	0m0.043s
user	0m0.021s
sys	0m0.023s


 ==============================================================================

Exit code: 0

real	0m0.079s
user	0m0.051s
sys	0m0.049s

real	0m0.080s
user	0m0.051s
sys	0m0.051s

===============================================================================

Running: ../../.github/citools/go/go-lint-errcheck

Running Go errcheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.034s
user	0m0.030s
sys	0m0.035s


 ==============================================================================

Running: errcheck ./...


real	0m0.541s
user	0m1.532s
sys	0m0.368s


 ==============================================================================

Exit code: 0

real	0m0.592s
user	0m1.569s
sys	0m0.421s

real	0m0.595s
user	0m1.569s
sys	0m0.424s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocyclo

Running Go gocyclo

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.022s
user	0m0.023s
sys	0m0.020s


 ==============================================================================

Running: gocyclo .

3 meteorology TestMeteorologyDataString meteorology_test.go:121:1
3 meteorology TestSpeedString meteorology_test.go:90:1
3 meteorology TestSpeedUnitString meteorology_test.go:64:1
3 meteorology TestTemperatureString meteorology_test.go:33:1
3 meteorology TestTemperatureUnitString meteorology_test.go:7:1
1 meteorology ExampleMeteorologyData_String meteorology_examples_test.go:62:1
1 meteorology ExampleSpeed_String meteorology_examples_test.go:45:1
1 meteorology ExampleSpeedUnit_String meteorology_examples_test.go:34:1
1 meteorology ExampleTemperature_String meteorology_examples_test.go:16:1
1 meteorology ExampleTemperatureUnit_String meteorology_examples_test.go:5:1
1 meteorology (MeteorologyData).String meteorology.go:67:1
1 meteorology (Speed).String meteorology.go:53:1
1 meteorology (SpeedUnit).String meteorology.go:41:1
1 meteorology (Temperature).String meteorology.go:27:1
1 meteorology (TemperatureUnit).String meteorology.go:15:1

real	0m0.023s
user	0m0.003s
sys	0m0.005s


 ==============================================================================

Exit code: 0

real	0m0.055s
user	0m0.032s
sys	0m0.031s

real	0m0.057s
user	0m0.032s
sys	0m0.033s

===============================================================================

Running: ../../.github/citools/go/go-lint-misspell

Running Go misspell

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: misspell .


real	0m0.059s
user	0m0.043s
sys	0m0.024s


 ==============================================================================

Exit code: 0

real	0m0.078s
user	0m0.052s
sys	0m0.041s

real	0m0.082s
user	0m0.054s
sys	0m0.043s

===============================================================================

Running: ../../.github/citools/go/go-lint-gosec

Running Go GoSec

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.031s
user	0m0.026s
sys	0m0.033s


 ==============================================================================

Running: gosec ./...

[gosec] 2023/09/10 01:27:05 Including rules: default
[gosec] 2023/09/10 01:27:05 Excluding rules: default
[gosec] 2023/09/10 01:27:05 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/meteorology
[gosec] 2023/09/10 01:27:05 Checking package: meteorology
[gosec] 2023/09/10 01:27:05 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/meteorology/meteorology.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 1
  Lines  : 75
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.139s
user	0m0.155s
sys	0m0.092s


 ==============================================================================

Exit code: 0

real	0m0.192s
user	0m0.195s
sys	0m0.140s

real	0m0.196s
user	0m0.197s
sys	0m0.142s

===============================================================================

Running: ../../.github/citools/go/go-test-cover-report

Running Go Test, Coverage & Reports

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.028s
user	0m0.021s
sys	0m0.029s


 ==============================================================================

Running: gotest -v -covermode=count -coverprofile coverage.out ./...

=== RUN   TestTemperatureUnitString
=== RUN   TestTemperatureUnitString/Celsius_unit
=== RUN   TestTemperatureUnitString/Fahrenheit_unit
--- PASS: TestTemperatureUnitString (0.00s)
    --- PASS: TestTemperatureUnitString/Celsius_unit (0.00s)
    --- PASS: TestTemperatureUnitString/Fahrenheit_unit (0.00s)
=== RUN   TestTemperatureString
=== RUN   TestTemperatureString/21_degree_Celsius
=== RUN   TestTemperatureString/32_degree_Fahrenheit
=== RUN   TestTemperatureString/minus_17_degree_Celsius
--- PASS: TestTemperatureString (0.00s)
    --- PASS: TestTemperatureString/21_degree_Celsius (0.00s)
    --- PASS: TestTemperatureString/32_degree_Fahrenheit (0.00s)
    --- PASS: TestTemperatureString/minus_17_degree_Celsius (0.00s)
=== RUN   TestSpeedUnitString
=== RUN   TestSpeedUnitString/kmPerHour
=== RUN   TestSpeedUnitString/milesPerHour
--- PASS: TestSpeedUnitString (0.00s)
    --- PASS: TestSpeedUnitString/kmPerHour (0.00s)
    --- PASS: TestSpeedUnitString/milesPerHour (0.00s)
=== RUN   TestSpeedString
=== RUN   TestSpeedString/18_kilometers_per_hour
=== RUN   TestSpeedString/30_miles_per_hour
=== RUN   TestSpeedString/0_kilometers_per_hour
--- PASS: TestSpeedString (0.00s)
    --- PASS: TestSpeedString/18_kilometers_per_hour (0.00s)
    --- PASS: TestSpeedString/30_miles_per_hour (0.00s)
    --- PASS: TestSpeedString/0_kilometers_per_hour (0.00s)
=== RUN   TestMeteorologyDataString
=== RUN   TestMeteorologyDataString/Athens
=== RUN   TestMeteorologyDataString/Delhi
=== RUN   TestMeteorologyDataString/San_Francisco
--- PASS: TestMeteorologyDataString (0.00s)
    --- PASS: TestMeteorologyDataString/Athens (0.00s)
    --- PASS: TestMeteorologyDataString/Delhi (0.00s)
    --- PASS: TestMeteorologyDataString/San_Francisco (0.00s)
=== RUN   ExampleTemperatureUnit_String
--- PASS: ExampleTemperatureUnit_String (0.00s)
=== RUN   ExampleTemperature_String
--- PASS: ExampleTemperature_String (0.00s)
=== RUN   ExampleSpeedUnit_String
--- PASS: ExampleSpeedUnit_String (0.00s)
=== RUN   ExampleSpeed_String
--- PASS: ExampleSpeed_String (0.00s)
=== RUN   ExampleMeteorologyData_String
--- PASS: ExampleMeteorologyData_String (0.00s)
PASS
coverage: 100.0% of statements
ok  	meteorology	0.006s	coverage: 100.0% of statements

real	0m0.236s
user	0m0.285s
sys	0m0.177s


 ==============================================================================

Running: go tool cover -func=coverage.out

meteorology/meteorology.go:15:	String		100.0%
meteorology/meteorology.go:27:	String		100.0%
meteorology/meteorology.go:41:	String		100.0%
meteorology/meteorology.go:53:	String		100.0%
meteorology/meteorology.go:67:	String		100.0%
total:				(statements)	100.0%

real	0m0.060s
user	0m0.078s
sys	0m0.089s


 ==============================================================================

Running: go tool cover -html coverage.out -o coverage.html


real	0m0.043s
user	0m0.069s
sys	0m0.058s


 ==============================================================================

Running: cover_annotate

Running: gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

real	0m0.090s
user	0m0.023s
sys	0m0.051s

real	0m0.090s
user	0m0.023s
sys	0m0.051s


 ==============================================================================

Running: gotest -v -race -covermode=atomic ./...

=== RUN   TestTemperatureUnitString
=== RUN   TestTemperatureUnitString/Celsius_unit
=== RUN   TestTemperatureUnitString/Fahrenheit_unit
--- PASS: TestTemperatureUnitString (0.00s)
    --- PASS: TestTemperatureUnitString/Celsius_unit (0.00s)
    --- PASS: TestTemperatureUnitString/Fahrenheit_unit (0.00s)
=== RUN   TestTemperatureString
=== RUN   TestTemperatureString/21_degree_Celsius
=== RUN   TestTemperatureString/32_degree_Fahrenheit
=== RUN   TestTemperatureString/minus_17_degree_Celsius
--- PASS: TestTemperatureString (0.00s)
    --- PASS: TestTemperatureString/21_degree_Celsius (0.00s)
    --- PASS: TestTemperatureString/32_degree_Fahrenheit (0.00s)
    --- PASS: TestTemperatureString/minus_17_degree_Celsius (0.00s)
=== RUN   TestSpeedUnitString
=== RUN   TestSpeedUnitString/kmPerHour
=== RUN   TestSpeedUnitString/milesPerHour
--- PASS: TestSpeedUnitString (0.00s)
    --- PASS: TestSpeedUnitString/kmPerHour (0.00s)
    --- PASS: TestSpeedUnitString/milesPerHour (0.00s)
=== RUN   TestSpeedString
=== RUN   TestSpeedString/18_kilometers_per_hour
=== RUN   TestSpeedString/30_miles_per_hour
=== RUN   TestSpeedString/0_kilometers_per_hour
--- PASS: TestSpeedString (0.00s)
    --- PASS: TestSpeedString/18_kilometers_per_hour (0.00s)
    --- PASS: TestSpeedString/30_miles_per_hour (0.00s)
    --- PASS: TestSpeedString/0_kilometers_per_hour (0.00s)
=== RUN   TestMeteorologyDataString
=== RUN   TestMeteorologyDataString/Athens
=== RUN   TestMeteorologyDataString/Delhi
=== RUN   TestMeteorologyDataString/San_Francisco
--- PASS: TestMeteorologyDataString (0.00s)
    --- PASS: TestMeteorologyDataString/Athens (0.00s)
    --- PASS: TestMeteorologyDataString/Delhi (0.00s)
    --- PASS: TestMeteorologyDataString/San_Francisco (0.00s)
=== RUN   ExampleTemperatureUnit_String
--- PASS: ExampleTemperatureUnit_String (0.00s)
=== RUN   ExampleTemperature_String
--- PASS: ExampleTemperature_String (0.00s)
=== RUN   ExampleSpeedUnit_String
--- PASS: ExampleSpeedUnit_String (0.00s)
=== RUN   ExampleSpeed_String
--- PASS: ExampleSpeed_String (0.00s)
=== RUN   ExampleMeteorologyData_String
--- PASS: ExampleMeteorologyData_String (0.00s)
PASS
coverage: 100.0% of statements
ok  	meteorology	1.014s	coverage: 100.0% of statements

real	0m1.428s
user	0m0.370s
sys	0m0.219s


 ==============================================================================

Exit code: 0

real	0m1.896s
user	0m0.855s
sys	0m0.629s

real	0m1.898s
user	0m0.857s
sys	0m0.629s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

gotest -v --run=xxx --bench . --benchmem |& tee benchstat-new.txt
PASS
ok  	meteorology	0.002s

real	0m0.163s
user	0m0.210s
sys	0m0.179s

===============================================================================

gotest -v -tags bonus
=== RUN   TestTemperatureUnitString
=== RUN   TestTemperatureUnitString/Celsius_unit
=== RUN   TestTemperatureUnitString/Fahrenheit_unit
--- PASS: TestTemperatureUnitString (0.00s)
    --- PASS: TestTemperatureUnitString/Celsius_unit (0.00s)
    --- PASS: TestTemperatureUnitString/Fahrenheit_unit (0.00s)
=== RUN   TestTemperatureString
=== RUN   TestTemperatureString/21_degree_Celsius
=== RUN   TestTemperatureString/32_degree_Fahrenheit
=== RUN   TestTemperatureString/minus_17_degree_Celsius
--- PASS: TestTemperatureString (0.00s)
    --- PASS: TestTemperatureString/21_degree_Celsius (0.00s)
    --- PASS: TestTemperatureString/32_degree_Fahrenheit (0.00s)
    --- PASS: TestTemperatureString/minus_17_degree_Celsius (0.00s)
=== RUN   TestSpeedUnitString
=== RUN   TestSpeedUnitString/kmPerHour
=== RUN   TestSpeedUnitString/milesPerHour
--- PASS: TestSpeedUnitString (0.00s)
    --- PASS: TestSpeedUnitString/kmPerHour (0.00s)
    --- PASS: TestSpeedUnitString/milesPerHour (0.00s)
=== RUN   TestSpeedString
=== RUN   TestSpeedString/18_kilometers_per_hour
=== RUN   TestSpeedString/30_miles_per_hour
=== RUN   TestSpeedString/0_kilometers_per_hour
--- PASS: TestSpeedString (0.00s)
    --- PASS: TestSpeedString/18_kilometers_per_hour (0.00s)
    --- PASS: TestSpeedString/30_miles_per_hour (0.00s)
    --- PASS: TestSpeedString/0_kilometers_per_hour (0.00s)
=== RUN   TestMeteorologyDataString
=== RUN   TestMeteorologyDataString/Athens
=== RUN   TestMeteorologyDataString/Delhi
=== RUN   TestMeteorologyDataString/San_Francisco
--- PASS: TestMeteorologyDataString (0.00s)
    --- PASS: TestMeteorologyDataString/Athens (0.00s)
    --- PASS: TestMeteorologyDataString/Delhi (0.00s)
    --- PASS: TestMeteorologyDataString/San_Francisco (0.00s)
=== RUN   ExampleTemperatureUnit_String
--- PASS: ExampleTemperatureUnit_String (0.00s)
=== RUN   ExampleTemperature_String
--- PASS: ExampleTemperature_String (0.00s)
=== RUN   ExampleSpeedUnit_String
--- PASS: ExampleSpeedUnit_String (0.00s)
=== RUN   ExampleSpeed_String
--- PASS: ExampleSpeed_String (0.00s)
=== RUN   ExampleMeteorologyData_String
--- PASS: ExampleMeteorologyData_String (0.00s)
PASS
ok  	meteorology	0.002s

real	0m0.126s
user	0m0.184s
sys	0m0.107s

===============================================================================

benchstat benchstat-old.txt benchstat-new.txt

real	0m0.017s
user	0m0.001s
sys	0m0.002s

===============================================================================

gomarkdoc --output meteorology-doc.md

real	0m0.030s
user	0m0.008s
sys	0m0.005s

===============================================================================

go doc -all meteorology
package meteorology // import "meteorology"


TYPES

type MeteorologyData struct {
	// Has unexported fields.
}
    MeteorologyData type tracks location weather information.

func (md MeteorologyData) String() string
    MeteorologyData String() method that returns a human readable meteorology
    reading.

type Speed struct {
	// Has unexported fields.
}
    Speed type tracks wind speed value and unit type.

func (s Speed) String() string
    Speed String() method that returns a human readable speed reading.

type SpeedUnit int
    SpeedUnit Emum declaration.

const (
	KmPerHour    SpeedUnit = 0
	MilesPerHour SpeedUnit = 1
)
    Speed Unit Enum definitions.

func (index SpeedUnit) String() string
    SpeedUnit String() method that returns a human readable speed unit.

type Temperature struct {
	// Has unexported fields.
}
    Temperature type tracks temperature value and unit type.

func (t Temperature) String() string
    Temperature String() method that returns a human readable temperature
    reading.

type TemperatureUnit int
    TemperatureUnit Enum declaration.

const (
	Celsius    TemperatureUnit = 0
	Fahrenheit TemperatureUnit = 1
)
    Temperature Units Enum definitions.

func (index TemperatureUnit) String() string
    TemperatureUnit String() method that returns a human readable temperature
    unit.


real	0m0.050s
user	0m0.032s
sys	0m0.042s


===============================================================================

