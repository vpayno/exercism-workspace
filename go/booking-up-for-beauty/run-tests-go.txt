Running automated test file(s):

Go packages: booking 


===============================================================================

golint booking

real	0m0.241s
user	0m0.225s
sys	0m0.219s

===============================================================================

go test -v -covermode=count -coverprofile coverage.out booking
=== RUN   TestSchedule
=== RUN   TestSchedule/Schedule_1
=== RUN   TestSchedule/Schedule_2
=== RUN   TestSchedule/Schedule_3
--- PASS: TestSchedule (0.00s)
    --- PASS: TestSchedule/Schedule_1 (0.00s)
    --- PASS: TestSchedule/Schedule_2 (0.00s)
    --- PASS: TestSchedule/Schedule_3 (0.00s)
=== RUN   TestHasPassed
=== RUN   TestHasPassed/HasPassed_3
=== RUN   TestHasPassed/HasPassed_1
=== RUN   TestHasPassed/HasPassed_2
--- PASS: TestHasPassed (0.00s)
    --- PASS: TestHasPassed/HasPassed_3 (0.00s)
    --- PASS: TestHasPassed/HasPassed_1 (0.00s)
    --- PASS: TestHasPassed/HasPassed_2 (0.00s)
=== RUN   TestIsAfternoonAppointment
=== RUN   TestIsAfternoonAppointment/IsAfternoonAppointment_2
=== RUN   TestIsAfternoonAppointment/IsAfternoonAppointment_3
=== RUN   TestIsAfternoonAppointment/IsAfternoonAppointment_1
--- PASS: TestIsAfternoonAppointment (0.00s)
    --- PASS: TestIsAfternoonAppointment/IsAfternoonAppointment_2 (0.00s)
    --- PASS: TestIsAfternoonAppointment/IsAfternoonAppointment_3 (0.00s)
    --- PASS: TestIsAfternoonAppointment/IsAfternoonAppointment_1 (0.00s)
=== RUN   TestDescription
=== RUN   TestDescription/Description_1
=== RUN   TestDescription/Description_2
=== RUN   TestDescription/Description_3
--- PASS: TestDescription (0.00s)
    --- PASS: TestDescription/Description_1 (0.00s)
    --- PASS: TestDescription/Description_2 (0.00s)
    --- PASS: TestDescription/Description_3 (0.00s)
=== RUN   TestAnniversaryDate
=== RUN   TestAnniversaryDate/AnniversaryDate_1
--- PASS: TestAnniversaryDate (0.00s)
    --- PASS: TestAnniversaryDate/AnniversaryDate_1 (0.00s)
=== RUN   ExampleSchedule
--- PASS: ExampleSchedule (0.00s)
=== RUN   ExampleHasPassed
--- PASS: ExampleHasPassed (0.00s)
=== RUN   ExampleIsAfternoonAppointment
--- PASS: ExampleIsAfternoonAppointment (0.00s)
=== RUN   ExampleDescription
--- PASS: ExampleDescription (0.00s)
=== RUN   ExampleAnniversaryDate
--- PASS: ExampleAnniversaryDate (0.00s)
PASS
coverage: 87.5% of statements
ok  	booking	0.026s	coverage: 87.5% of statements

real	0m0.496s
user	0m0.571s
sys	0m0.338s

===============================================================================

go tool cover -func=coverage.out
booking/booking_up_for_beauty.go:10:	Schedule		80.0%
booking/booking_up_for_beauty.go:22:	HasPassed		80.0%
booking/booking_up_for_beauty.go:34:	IsAfternoonAppointment	90.0%
booking/booking_up_for_beauty.go:56:	Description		88.9%
booking/booking_up_for_beauty.go:76:	AnniversaryDate		100.0%
total:					(statements)		87.5%

real	0m0.298s
user	0m0.281s
sys	0m0.321s

===============================================================================

go test -v -race -covermode=atomic booking
=== RUN   TestSchedule
=== RUN   TestSchedule/Schedule_1
=== RUN   TestSchedule/Schedule_2
=== RUN   TestSchedule/Schedule_3
--- PASS: TestSchedule (0.00s)
    --- PASS: TestSchedule/Schedule_1 (0.00s)
    --- PASS: TestSchedule/Schedule_2 (0.00s)
    --- PASS: TestSchedule/Schedule_3 (0.00s)
=== RUN   TestHasPassed
=== RUN   TestHasPassed/HasPassed_1
=== RUN   TestHasPassed/HasPassed_2
=== RUN   TestHasPassed/HasPassed_3
--- PASS: TestHasPassed (0.00s)
    --- PASS: TestHasPassed/HasPassed_1 (0.00s)
    --- PASS: TestHasPassed/HasPassed_2 (0.00s)
    --- PASS: TestHasPassed/HasPassed_3 (0.00s)
=== RUN   TestIsAfternoonAppointment
=== RUN   TestIsAfternoonAppointment/IsAfternoonAppointment_1
=== RUN   TestIsAfternoonAppointment/IsAfternoonAppointment_2
=== RUN   TestIsAfternoonAppointment/IsAfternoonAppointment_3
--- PASS: TestIsAfternoonAppointment (0.00s)
    --- PASS: TestIsAfternoonAppointment/IsAfternoonAppointment_1 (0.00s)
    --- PASS: TestIsAfternoonAppointment/IsAfternoonAppointment_2 (0.00s)
    --- PASS: TestIsAfternoonAppointment/IsAfternoonAppointment_3 (0.00s)
=== RUN   TestDescription
=== RUN   TestDescription/Description_1
=== RUN   TestDescription/Description_2
=== RUN   TestDescription/Description_3
--- PASS: TestDescription (0.00s)
    --- PASS: TestDescription/Description_1 (0.00s)
    --- PASS: TestDescription/Description_2 (0.00s)
    --- PASS: TestDescription/Description_3 (0.00s)
=== RUN   TestAnniversaryDate
=== RUN   TestAnniversaryDate/AnniversaryDate_1
--- PASS: TestAnniversaryDate (0.00s)
    --- PASS: TestAnniversaryDate/AnniversaryDate_1 (0.00s)
=== RUN   ExampleSchedule
--- PASS: ExampleSchedule (0.00s)
=== RUN   ExampleHasPassed
--- PASS: ExampleHasPassed (0.00s)
=== RUN   ExampleIsAfternoonAppointment
--- PASS: ExampleIsAfternoonAppointment (0.00s)
=== RUN   ExampleDescription
--- PASS: ExampleDescription (0.00s)
=== RUN   ExampleAnniversaryDate
--- PASS: ExampleAnniversaryDate (0.00s)
PASS
coverage: 87.5% of statements
ok  	booking	(cached)	coverage: 87.5% of statements

real	0m0.440s
user	0m0.483s
sys	0m0.394s

===============================================================================

go test --bench . --benchmem
PASS
ok  	booking	0.019s

real	0m0.494s
user	0m0.587s
sys	0m0.360s

===============================================================================

go test -tags bonus
PASS
ok  	booking	0.005s

real	0m0.474s
user	0m0.557s
sys	0m0.308s

===============================================================================

go vet booking

real	0m0.343s
user	0m0.414s
sys	0m0.333s

===============================================================================

go fix booking

real	0m0.163s
user	0m0.194s
sys	0m0.191s

===============================================================================

gosec ./booking-up-for-beauty
[gosec] 2022/06/18 16:51:23 Including rules: default
[gosec] 2022/06/18 16:51:23 Excluding rules: default
[gosec] 2022/06/18 16:51:23 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/booking-up-for-beauty
2022/06/18 16:51:23 internal error: package "fmt" without types was imported from "command-line-arguments"

real	0m0.598s
user	0m0.583s
sys	0m0.422s

===============================================================================

gomarkdoc --output booking-doc.md

real	0m0.024s
user	0m0.021s
sys	0m0.020s

===============================================================================

go doc -all booking
package booking // import "booking"


FUNCTIONS

func AnniversaryDate() time.Time
    AnniversaryDate returns a Time with this year's anniversary

func Description(date string) string
    Description returns a formatted string of the appointment time

func HasPassed(date string) bool
    HasPassed returns whether a date has passed.

func IsAfternoonAppointment(date string) bool
    IsAfternoonAppointment returns whether a time is in the afternoon

func Schedule(date string) time.Time
    Schedule returns a time.Time from a string containing a date


real	0m0.292s
user	0m0.235s
sys	0m0.263s


===============================================================================

