Running automated test file(s):

Go packages: cars 


===============================================================================

golint cars

real	0m0.090s
user	0m0.074s
sys	0m0.079s

===============================================================================

go test -v -covermode=count -coverprofile coverage.out cars
=== RUN   TestCalculateWorkingCarsPerHour
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_production_rate_0
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_100%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_80%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_20.5%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_0%_success_rate
--- PASS: TestCalculateWorkingCarsPerHour (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_production_rate_0 (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_100%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_80%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_20.5%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_0%_success_rate (0.00s)
=== RUN   TestCalculateWorkingCarsPerMinute
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_production_rate_0
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_100%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_80%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_20.5%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_0%_success_rate
--- PASS: TestCalculateWorkingCarsPerMinute (0.02s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_production_rate_0 (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_100%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_80%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_20.5%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_0%_success_rate (0.00s)
=== RUN   TestCalculateCost
=== RUN   TestCalculateCost/calculate_cost_to_produce_0_cars
=== RUN   TestCalculateCost/calculate_the_cost_of_materials_to_produce_1_car
=== RUN   TestCalculateCost/calculate_cost_to_produce_2_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_9_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_10_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_100_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_21_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_37_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_56_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_148_cars
--- PASS: TestCalculateCost (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_0_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_the_cost_of_materials_to_produce_1_car (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_2_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_9_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_10_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_100_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_21_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_37_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_56_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_148_cars (0.00s)
=== RUN   ExampleCalculateWorkingCarsPerHour
--- PASS: ExampleCalculateWorkingCarsPerHour (0.00s)
=== RUN   ExampleCalculateWorkingCarsPerMinute
--- PASS: ExampleCalculateWorkingCarsPerMinute (0.00s)
=== RUN   ExampleCalculateCost
--- PASS: ExampleCalculateCost (0.00s)
PASS
coverage: 100.0% of statements
ok  	cars	0.034s	coverage: 100.0% of statements

real	0m0.628s
user	0m0.712s
sys	0m0.496s

===============================================================================

go tool cover -func=coverage.out
cars/cars_assemble.go:5:	CalculateWorkingCarsPerHour	100.0%
cars/cars_assemble.go:11:	CalculateWorkingCarsPerMinute	100.0%
cars/cars_assemble.go:16:	CalculateCost			100.0%
total:				(statements)			100.0%

real	0m0.086s
user	0m0.034s
sys	0m0.104s

===============================================================================

go test -v -race -covermode=atomic cars
=== RUN   TestCalculateWorkingCarsPerHour
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_production_rate_0
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_100%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_80%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_20.5%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_0%_success_rate
--- PASS: TestCalculateWorkingCarsPerHour (0.01s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_production_rate_0 (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_100%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_80%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_20.5%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_0%_success_rate (0.00s)
=== RUN   TestCalculateWorkingCarsPerMinute
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_production_rate_0
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_100%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_80%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_20.5%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_0%_success_rate
--- PASS: TestCalculateWorkingCarsPerMinute (0.01s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_production_rate_0 (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_100%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_80%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_20.5%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_0%_success_rate (0.00s)
=== RUN   TestCalculateCost
=== RUN   TestCalculateCost/calculate_cost_to_produce_0_cars
=== RUN   TestCalculateCost/calculate_the_cost_of_materials_to_produce_1_car
=== RUN   TestCalculateCost/calculate_cost_to_produce_2_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_9_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_10_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_100_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_21_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_37_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_56_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_148_cars
--- PASS: TestCalculateCost (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_0_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_the_cost_of_materials_to_produce_1_car (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_2_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_9_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_10_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_100_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_21_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_37_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_56_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_148_cars (0.00s)
=== RUN   ExampleCalculateWorkingCarsPerHour
--- PASS: ExampleCalculateWorkingCarsPerHour (0.00s)
=== RUN   ExampleCalculateWorkingCarsPerMinute
--- PASS: ExampleCalculateWorkingCarsPerMinute (0.00s)
=== RUN   ExampleCalculateCost
--- PASS: ExampleCalculateCost (0.00s)
PASS
coverage: 100.0% of statements
ok  	cars	0.054s	coverage: 100.0% of statements

real	0m0.718s
user	0m0.834s
sys	0m0.455s

===============================================================================

go test --bench . --benchmem
PASS
ok  	cars	0.021s

real	0m0.601s
user	0m0.701s
sys	0m0.452s

===============================================================================

go test -tags bonus
PASS
ok  	cars	0.007s

real	0m0.551s
user	0m0.700s
sys	0m0.364s

===============================================================================

go vet cars

real	0m0.393s
user	0m0.486s
sys	0m0.338s

===============================================================================

go fix cars

real	0m0.077s
user	0m0.047s
sys	0m0.097s

===============================================================================

gosec ./cars-assemble
[gosec] 2022/06/15 22:10:02 Including rules: default
[gosec] 2022/06/15 22:10:02 Excluding rules: default
[gosec] 2022/06/15 22:10:02 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/cars-assemble
[gosec] 2022/06/15 22:10:03 Checking package: cars
[gosec] 2022/06/15 22:10:03 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/cars-assemble/cars_assemble.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 1
  Lines  : 24
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.269s
user	0m0.268s
sys	0m0.194s

===============================================================================

gomarkdoc --output cars-doc.md

real	0m0.038s
user	0m0.028s
sys	0m0.024s

===============================================================================

go doc -all cars
package cars // import "cars"


FUNCTIONS

func CalculateCost(carsCount int) uint
    CalculateCost works out the cost of producing the given number of cars

func CalculateWorkingCarsPerHour(productionRate int, successRate float64) float64
    CalculateWorkingCarsPerHour calculates how many working cars are produced by
    the assembly line every hour

func CalculateWorkingCarsPerMinute(productionRate int, successRate float64) int
    CalculateWorkingCarsPerMinute calculates how many working cars are produced
    by the assembly line every minute


real	0m0.138s
user	0m0.056s
sys	0m0.139s


===============================================================================

