Running automated test file(s):

Go packages: cars 


===============================================================================

Running: ../../.github/citools/go/go-lint-golangci-lint

Running GoLangCi-Lint

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.019s
user	0m0.012s
sys	0m0.013s


 ==============================================================================

Running: golangci-lint run --enable-all ./...

level=warning msg="[runner] The linter 'nosnakecase' is deprecated (since v1.48.1) due to: The repository of the linter has been deprecated by the owner. Replaced by revive(var-naming)."
level=warning msg="[runner] The linter 'structcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'interfacer' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. "
level=warning msg="[runner] The linter 'exhaustivestruct' is deprecated (since v1.46.0) due to: The owner seems to have abandoned the linter. Replaced by exhaustruct."
level=warning msg="[runner] The linter 'ifshort' is deprecated (since v1.48.0) due to: The repository of the linter has been deprecated by the owner. "
level=warning msg="[runner] The linter 'maligned' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. Replaced by govet 'fieldalignment'."
level=warning msg="[runner] The linter 'varcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'deadcode' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'golint' is deprecated (since v1.41.0) due to: The repository of the linter has been archived by the owner. Replaced by revive."
level=warning msg="[runner] The linter 'scopelint' is deprecated (since v1.39.0) due to: The repository of the linter has been deprecated by the owner. Replaced by exportloopref."
cars_assemble_test.go:126: Function 'TestCalculateCost' is too long (70 > 60) (funlen)
func TestCalculateCost(t *testing.T) {
cars_assemble.go:4:44: Comment should end in a period (godot)
// produced by the assembly line every hour
                                           ^
cars_assemble.go:10:46: Comment should end in a period (godot)
// produced by the assembly line every minute
                                             ^
cars_assemble.go:15:74: Comment should end in a period (godot)
// CalculateCost works out the cost of producing the given number of cars
                                                                         ^
cars_assemble_test.go:57:39: Using the variable on range scope `tt` in function literal (scopelint)
			got := CalculateWorkingCarsPerHour(tt.productionRate, tt.successRate)
			                                   ^
cars_assemble_test.go:58:33: Using the variable on range scope `tt` in function literal (scopelint)
			if !floatingPointEquals(got, tt.want) {
			                             ^
cars_assemble_test.go:61:6: Using the variable on range scope `tt` in function literal (scopelint)
					tt.productionRate,
					^
cars_assemble.go:18:2: declarations should never be cuddled (wsl)
	var individualCars int
	^
cars_assemble_test.go:13:2: return statements should not be cuddled if block has more than two lines (wsl)
	return absoluteDifferenceBelowThreshold || relativeDifferenceBelowThreshold
	^
cars_assemble.go:12:63: mnd: Magic number: 60.0, in <argument> detected (gomnd)
	return int(float64(productionRate) * (successRate / 100.0) / 60.0)
	                                                             ^
cars_assemble.go:6:50: mnd: Magic number: 100.0, in <operation> detected (gomnd)
	return float64(productionRate) * (successRate / 100.0)
	                                                ^
cars_assemble.go:20:28: mnd: Magic number: 10, in <operation> detected (gomnd)
	groupsOfTen = carsCount / 10
	                          ^
cars_assemble.go:21:31: mnd: Magic number: 10, in <operation> detected (gomnd)
	individualCars = carsCount % 10
	                             ^
cars_assemble_test.go:16:1: Function TestCalculateWorkingCarsPerHour missing the call to method parallel (paralleltest)
func TestCalculateWorkingCarsPerHour(t *testing.T) {
^
cars_assemble_test.go:55:2: Range statement for test TestCalculateWorkingCarsPerHour missing the call to method parallel in test Run (paralleltest)
	for _, tt := range tests {
	^
cars_assemble_test.go:71:1: Function TestCalculateWorkingCarsPerMinute missing the call to method parallel (paralleltest)
func TestCalculateWorkingCarsPerMinute(t *testing.T) {
^
cars_assemble_test.go:110:2: Range statement for test TestCalculateWorkingCarsPerMinute missing the call to method parallel in test Run (paralleltest)
	for _, tt := range tests {
	^
cars_assemble_test.go:184:2: Range statement for test TestCalculateCost missing the call to method parallel in test Run (paralleltest)
	for _, tt := range tests {
	^
cars_assemble_examples_test.go:1:9: package should be `cars_test` instead of `cars` (testpackage)
package cars
        ^
cars_assemble_test.go:1:9: package should be `cars_test` instead of `cars` (testpackage)
package cars
        ^

real	0m0.462s
user	0m0.650s
sys	0m0.390s


 ==============================================================================

Exit code: -1

real	0m0.500s
user	0m0.671s
sys	0m0.422s

real	0m0.503s
user	0m0.671s
sys	0m0.425s

===============================================================================

Running: ../../.github/citools/go/go-lint-revive

Running Go Lint Revive

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.011s
user	0m0.005s
sys	0m0.008s


 ==============================================================================

Running: revive -formatter=stylish ./...

cars_assemble.go
  (1, 1)  https://revive.run/r#package-comments  should have a package comment  


 âœ– 1 problem (0 errors) (1 warnings)

real	0m0.045s
user	0m0.027s
sys	0m0.030s


 ==============================================================================

Exit code: 0

real	0m0.068s
user	0m0.038s
sys	0m0.047s

real	0m0.070s
user	0m0.040s
sys	0m0.048s

===============================================================================

Running: ../../.github/citools/go/go-lint-ineffassign
../run-tests: line 41: .github/citools/go/go-lint-ineffassign: No such file or directory

real	0m0.001s
user	0m0.000s
sys	0m0.001s

===============================================================================

Running: ../../.github/citools/go/go-lint-go-consistent

Running Go go-consistent

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.011s
user	0m0.006s
sys	0m0.007s


 ==============================================================================

Running: go-consistent -v ./...

	info: check "./."
internal error: package "fmt" without types was imported from "cars [cars.test]"

real	0m0.101s
user	0m0.124s
sys	0m0.107s


 ==============================================================================

Exit code: -1

real	0m0.124s
user	0m0.134s
sys	0m0.127s

real	0m0.126s
user	0m0.135s
sys	0m0.128s

===============================================================================

Running: ../../.github/citools/go/go-lint-staticcheck

Running Go StaticCheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.011s
user	0m0.006s
sys	0m0.008s


 ==============================================================================

Running: staticcheck -checks=all ./...

cars_assemble.go:1:1: at least one file in a package should have a package comment (ST1000)

real	0m0.162s
user	0m0.196s
sys	0m0.126s


 ==============================================================================

Exit code: -1

real	0m0.184s
user	0m0.211s
sys	0m0.140s

real	0m0.186s
user	0m0.211s
sys	0m0.142s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocritic

Running Go gocritic

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.014s
user	0m0.010s
sys	0m0.008s


 ==============================================================================

Running: gocritic check -enableAll ./...


real	0m0.779s
user	0m1.851s
sys	0m0.248s


 ==============================================================================

Exit code: 0

real	0m0.804s
user	0m1.864s
sys	0m0.268s

real	0m0.806s
user	0m1.866s
sys	0m0.268s

===============================================================================

Running: ../../.github/citools/go/go-lint-go_vet

Running Go Vet

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.012s
user	0m0.006s
sys	0m0.008s


 ==============================================================================

Running: go vet ./...


real	0m0.078s
user	0m0.109s
sys	0m0.106s


 ==============================================================================

Exit code: 0

real	0m0.100s
user	0m0.122s
sys	0m0.121s

real	0m0.102s
user	0m0.122s
sys	0m0.123s

===============================================================================

Running: ../../.github/citools/go/go-fixer-go_fix

Running go fix

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.013s
user	0m0.004s
sys	0m0.013s


 ==============================================================================

Running: go fix ./...


real	0m0.016s
user	0m0.008s
sys	0m0.011s


 ==============================================================================

Exit code: 0

real	0m0.041s
user	0m0.018s
sys	0m0.034s

real	0m0.043s
user	0m0.018s
sys	0m0.036s

===============================================================================

Running: ../../.github/citools/go/go-lint-errcheck

Running Go errcheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.018s
user	0m0.006s
sys	0m0.015s


 ==============================================================================

Running: errcheck ./...


real	0m0.477s
user	0m1.497s
sys	0m0.275s


 ==============================================================================

Exit code: 0

real	0m0.506s
user	0m1.509s
sys	0m0.300s

real	0m0.508s
user	0m1.510s
sys	0m0.301s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocyclo

Running Go gocyclo

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.012s
user	0m0.006s
sys	0m0.009s


 ==============================================================================

Running: gocyclo .

3 cars TestCalculateCost cars_assemble_test.go:126:1
3 cars TestCalculateWorkingCarsPerMinute cars_assemble_test.go:71:1
3 cars TestCalculateWorkingCarsPerHour cars_assemble_test.go:16:1
2 cars floatingPointEquals cars_assemble_test.go:10:1
1 cars ExampleCalculateCost cars_assemble_examples_test.go:19:1
1 cars ExampleCalculateWorkingCarsPerMinute cars_assemble_examples_test.go:13:1
1 cars ExampleCalculateWorkingCarsPerHour cars_assemble_examples_test.go:7:1
1 cars CalculateCost cars_assemble.go:16:1
1 cars CalculateWorkingCarsPerMinute cars_assemble.go:11:1
1 cars CalculateWorkingCarsPerHour cars_assemble.go:5:1

real	0m0.003s
user	0m0.003s
sys	0m0.000s


 ==============================================================================

Exit code: 0

real	0m0.024s
user	0m0.013s
sys	0m0.017s

real	0m0.025s
user	0m0.014s
sys	0m0.019s

===============================================================================

Running: ../../.github/citools/go/go-lint-misspell

Running Go misspell

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: misspell .


real	0m0.043s
user	0m0.068s
sys	0m0.018s


 ==============================================================================

Exit code: 0

real	0m0.063s
user	0m0.075s
sys	0m0.034s

real	0m0.065s
user	0m0.076s
sys	0m0.036s

===============================================================================

Running: ../../.github/citools/go/go-lint-gosec

Running Go GoSec

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.019s
user	0m0.008s
sys	0m0.016s


 ==============================================================================

Running: gosec ./...

[gosec] 2023/09/07 00:21:27 Including rules: default
[gosec] 2023/09/07 00:21:27 Excluding rules: default
[gosec] 2023/09/07 00:21:27 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/cars-assemble
[gosec] 2023/09/07 00:21:27 Checking package: cars
[gosec] 2023/09/07 00:21:27 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/cars-assemble/cars_assemble.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 1
  Lines  : 24
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.080s
user	0m0.068s
sys	0m0.044s


 ==============================================================================

Exit code: 0

real	0m0.114s
user	0m0.087s
sys	0m0.071s

real	0m0.117s
user	0m0.090s
sys	0m0.072s

===============================================================================

Running: ../../.github/citools/go/go-test-cover-report

Running Go Test, Coverage & Reports

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.011s
user	0m0.005s
sys	0m0.009s


 ==============================================================================

Running: gotest -v -covermode=count -coverprofile coverage.out ./...

=== RUN   TestCalculateWorkingCarsPerHour
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_production_rate_0
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_100%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_80%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_20.5%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_0%_success_rate
--- PASS: TestCalculateWorkingCarsPerHour (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_production_rate_0 (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_100%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_80%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_20.5%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_0%_success_rate (0.00s)
=== RUN   TestCalculateWorkingCarsPerMinute
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_production_rate_0
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_100%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_80%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_20.5%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_0%_success_rate
--- PASS: TestCalculateWorkingCarsPerMinute (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_production_rate_0 (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_100%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_80%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_20.5%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_0%_success_rate (0.00s)
=== RUN   TestCalculateCost
=== RUN   TestCalculateCost/calculate_cost_to_produce_0_cars
=== RUN   TestCalculateCost/calculate_the_cost_of_materials_to_produce_1_car
=== RUN   TestCalculateCost/calculate_cost_to_produce_2_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_9_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_10_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_100_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_21_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_37_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_56_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_148_cars
--- PASS: TestCalculateCost (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_0_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_the_cost_of_materials_to_produce_1_car (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_2_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_9_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_10_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_100_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_21_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_37_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_56_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_148_cars (0.00s)
=== RUN   ExampleCalculateWorkingCarsPerHour
--- PASS: ExampleCalculateWorkingCarsPerHour (0.00s)
=== RUN   ExampleCalculateWorkingCarsPerMinute
--- PASS: ExampleCalculateWorkingCarsPerMinute (0.00s)
=== RUN   ExampleCalculateCost
--- PASS: ExampleCalculateCost (0.00s)
PASS
coverage: 100.0% of statements
ok  	cars	0.005s	coverage: 100.0% of statements

real	0m0.192s
user	0m0.259s
sys	0m0.206s


 ==============================================================================

Running: go tool cover -func=coverage.out

cars/cars_assemble.go:5:	CalculateWorkingCarsPerHour	100.0%
cars/cars_assemble.go:11:	CalculateWorkingCarsPerMinute	100.0%
cars/cars_assemble.go:16:	CalculateCost			100.0%
total:				(statements)			100.0%

real	0m0.023s
user	0m0.011s
sys	0m0.018s


 ==============================================================================

Running: go tool cover -html coverage.out -o coverage.html


real	0m0.022s
user	0m0.009s
sys	0m0.019s


 ==============================================================================

Running: cover_annotate

Running: gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

real	0m0.009s
user	0m0.005s
sys	0m0.009s

real	0m0.009s
user	0m0.005s
sys	0m0.009s


 ==============================================================================

Running: gotest -v -race -covermode=atomic ./...

=== RUN   TestCalculateWorkingCarsPerHour
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_production_rate_0
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_100%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_80%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_20.5%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_0%_success_rate
--- PASS: TestCalculateWorkingCarsPerHour (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_production_rate_0 (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_100%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_80%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_20.5%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_0%_success_rate (0.00s)
=== RUN   TestCalculateWorkingCarsPerMinute
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_production_rate_0
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_100%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_80%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_20.5%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_0%_success_rate
--- PASS: TestCalculateWorkingCarsPerMinute (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_production_rate_0 (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_100%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_80%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_20.5%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_0%_success_rate (0.00s)
=== RUN   TestCalculateCost
=== RUN   TestCalculateCost/calculate_cost_to_produce_0_cars
=== RUN   TestCalculateCost/calculate_the_cost_of_materials_to_produce_1_car
=== RUN   TestCalculateCost/calculate_cost_to_produce_2_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_9_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_10_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_100_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_21_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_37_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_56_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_148_cars
--- PASS: TestCalculateCost (0.01s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_0_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_the_cost_of_materials_to_produce_1_car (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_2_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_9_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_10_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_100_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_21_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_37_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_56_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_148_cars (0.00s)
=== RUN   ExampleCalculateWorkingCarsPerHour
--- PASS: ExampleCalculateWorkingCarsPerHour (0.00s)
=== RUN   ExampleCalculateWorkingCarsPerMinute
--- PASS: ExampleCalculateWorkingCarsPerMinute (0.00s)
=== RUN   ExampleCalculateCost
--- PASS: ExampleCalculateCost (0.00s)
PASS
coverage: 100.0% of statements
ok  	cars	1.034s	coverage: 100.0% of statements

real	0m1.271s
user	0m0.317s
sys	0m0.169s


 ==============================================================================

Exit code: 0

real	0m1.540s
user	0m0.612s
sys	0m0.439s

real	0m1.542s
user	0m0.613s
sys	0m0.440s

===============================================================================

gotest -v --run=xxx --bench . --benchmem |& tee benchstat-new.txt
PASS
ok  	cars	0.002s

real	0m0.141s
user	0m0.183s
sys	0m0.137s

===============================================================================

gotest -v -tags bonus
=== RUN   TestCalculateWorkingCarsPerHour
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_production_rate_0
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_100%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_80%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_20.5%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_0%_success_rate
--- PASS: TestCalculateWorkingCarsPerHour (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_production_rate_0 (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_100%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_80%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_20.5%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_0%_success_rate (0.00s)
=== RUN   TestCalculateWorkingCarsPerMinute
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_production_rate_0
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_100%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_80%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_20.5%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_0%_success_rate
--- PASS: TestCalculateWorkingCarsPerMinute (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_production_rate_0 (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_100%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_80%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_20.5%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_0%_success_rate (0.00s)
=== RUN   TestCalculateCost
=== RUN   TestCalculateCost/calculate_cost_to_produce_0_cars
=== RUN   TestCalculateCost/calculate_the_cost_of_materials_to_produce_1_car
=== RUN   TestCalculateCost/calculate_cost_to_produce_2_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_9_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_10_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_100_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_21_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_37_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_56_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_148_cars
--- PASS: TestCalculateCost (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_0_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_the_cost_of_materials_to_produce_1_car (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_2_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_9_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_10_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_100_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_21_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_37_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_56_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_148_cars (0.00s)
=== RUN   ExampleCalculateWorkingCarsPerHour
--- PASS: ExampleCalculateWorkingCarsPerHour (0.00s)
=== RUN   ExampleCalculateWorkingCarsPerMinute
--- PASS: ExampleCalculateWorkingCarsPerMinute (0.00s)
=== RUN   ExampleCalculateCost
--- PASS: ExampleCalculateCost (0.00s)
PASS
ok  	cars	0.002s

real	0m0.144s
user	0m0.208s
sys	0m0.147s

===============================================================================

No old benchmarks to run benchstat against.

===============================================================================

gomarkdoc --output cars-doc.md

real	0m0.019s
user	0m0.011s
sys	0m0.008s

===============================================================================

go doc -all cars
package cars // import "cars"


FUNCTIONS

func CalculateCost(carsCount int) uint
    CalculateCost works out the cost of producing the given number of cars

func CalculateWorkingCarsPerHour(productionRate int, successRate float64) float64
    CalculateWorkingCarsPerHour calculates how many working cars are produced by
    the assembly line every hour

func CalculateWorkingCarsPerMinute(productionRate int, successRate float64) int
    CalculateWorkingCarsPerMinute calculates how many working cars are produced
    by the assembly line every minute


real	0m0.031s
user	0m0.013s
sys	0m0.026s


===============================================================================

