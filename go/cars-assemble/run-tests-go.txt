Running automated test file(s):

Go packages: cars 


===============================================================================

golint cars

real	0m0.077s
user	0m0.045s
sys	0m0.080s

===============================================================================

go test -v -covermode=count -coverprofile coverage.out cars
=== RUN   TestCalculateWorkingCarsPerHour
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_production_rate_0
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_100%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_80%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_20.5%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_0%_success_rate
--- PASS: TestCalculateWorkingCarsPerHour (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_production_rate_0 (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_100%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_80%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_20.5%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_0%_success_rate (0.00s)
=== RUN   TestCalculateWorkingCarsPerMinute
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_production_rate_0
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_100%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_80%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_20.5%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_0%_success_rate
--- PASS: TestCalculateWorkingCarsPerMinute (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_production_rate_0 (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_100%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_80%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_20.5%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_0%_success_rate (0.00s)
=== RUN   TestCalculateCost
=== RUN   TestCalculateCost/calculate_cost_to_produce_0_cars
=== RUN   TestCalculateCost/calculate_the_cost_of_materials_to_produce_1_car
=== RUN   TestCalculateCost/calculate_cost_to_produce_2_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_9_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_10_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_100_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_21_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_37_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_56_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_148_cars
--- PASS: TestCalculateCost (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_0_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_the_cost_of_materials_to_produce_1_car (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_2_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_9_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_10_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_100_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_21_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_37_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_56_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_148_cars (0.00s)
=== RUN   ExampleCalculateWorkingCarsPerHour
--- PASS: ExampleCalculateWorkingCarsPerHour (0.00s)
=== RUN   ExampleCalculateWorkingCarsPerMinute
--- PASS: ExampleCalculateWorkingCarsPerMinute (0.00s)
=== RUN   ExampleCalculateCost
--- PASS: ExampleCalculateCost (0.00s)
PASS
coverage: 100.0% of statements
ok  	cars	0.022s	coverage: 100.0% of statements

real	0m0.691s
user	0m0.747s
sys	0m0.527s

===============================================================================

go tool cover -func=coverage.out
cars/cars_assemble.go:5:	CalculateWorkingCarsPerHour	100.0%
cars/cars_assemble.go:11:	CalculateWorkingCarsPerMinute	100.0%
cars/cars_assemble.go:16:	CalculateCost			100.0%
total:				(statements)			100.0%

real	0m0.100s
user	0m0.062s
sys	0m0.069s

===============================================================================

go test -v -race -covermode=atomic cars
=== RUN   TestCalculateWorkingCarsPerHour
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_production_rate_0
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_100%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_80%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_20.5%_success_rate
=== RUN   TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_0%_success_rate
--- PASS: TestCalculateWorkingCarsPerHour (0.01s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_production_rate_0 (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_100%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_80%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_20.5%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerHour/calculate_working_cars_per_hour_for_0%_success_rate (0.00s)
=== RUN   TestCalculateWorkingCarsPerMinute
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_production_rate_0
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_100%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_80%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_20.5%_success_rate
=== RUN   TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_0%_success_rate
--- PASS: TestCalculateWorkingCarsPerMinute (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_production_rate_0 (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_100%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_80%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_20.5%_success_rate (0.00s)
    --- PASS: TestCalculateWorkingCarsPerMinute/calculate_working_cars_per_minute_for_0%_success_rate (0.00s)
=== RUN   TestCalculateCost
=== RUN   TestCalculateCost/calculate_cost_to_produce_0_cars
=== RUN   TestCalculateCost/calculate_the_cost_of_materials_to_produce_1_car
=== RUN   TestCalculateCost/calculate_cost_to_produce_2_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_9_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_10_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_100_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_21_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_37_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_56_cars
=== RUN   TestCalculateCost/calculate_cost_to_produce_148_cars
--- PASS: TestCalculateCost (0.01s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_0_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_the_cost_of_materials_to_produce_1_car (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_2_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_9_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_10_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_100_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_21_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_37_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_56_cars (0.00s)
    --- PASS: TestCalculateCost/calculate_cost_to_produce_148_cars (0.00s)
=== RUN   ExampleCalculateWorkingCarsPerHour
--- PASS: ExampleCalculateWorkingCarsPerHour (0.00s)
=== RUN   ExampleCalculateWorkingCarsPerMinute
--- PASS: ExampleCalculateWorkingCarsPerMinute (0.00s)
=== RUN   ExampleCalculateCost
--- PASS: ExampleCalculateCost (0.00s)
PASS
coverage: 100.0% of statements
ok  	cars	0.051s	coverage: 100.0% of statements

real	0m0.823s
user	0m0.889s
sys	0m0.594s

===============================================================================

go test --bench . --benchmem
PASS
ok  	cars	0.016s

real	0m0.725s
user	0m0.770s
sys	0m0.615s

===============================================================================

go test -tags bonus
PASS
ok  	cars	0.010s

real	0m0.573s
user	0m0.681s
sys	0m0.450s

===============================================================================

go vet cars

real	0m0.392s
user	0m0.427s
sys	0m0.352s

===============================================================================

go fix cars

real	0m0.054s
user	0m0.031s
sys	0m0.058s

===============================================================================

gosec ./cars-assemble
[gosec] 2022/06/20 23:18:18 Including rules: default
[gosec] 2022/06/20 23:18:18 Excluding rules: default
[gosec] 2022/06/20 23:18:18 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/cars-assemble
[gosec] 2022/06/20 23:18:19 Checking package: cars
[gosec] 2022/06/20 23:18:19 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/cars-assemble/cars_assemble.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 1
  Lines  : 24
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.283s
user	0m0.252s
sys	0m0.216s

===============================================================================

gomarkdoc --output cars-doc.md

real	0m0.067s
user	0m0.041s
sys	0m0.044s

===============================================================================

go doc -all cars
package cars // import "cars"


FUNCTIONS

func CalculateCost(carsCount int) uint
    CalculateCost works out the cost of producing the given number of cars

func CalculateWorkingCarsPerHour(productionRate int, successRate float64) float64
    CalculateWorkingCarsPerHour calculates how many working cars are produced by
    the assembly line every hour

func CalculateWorkingCarsPerMinute(productionRate int, successRate float64) int
    CalculateWorkingCarsPerMinute calculates how many working cars are produced
    by the assembly line every minute


real	0m0.161s
user	0m0.082s
sys	0m0.135s


===============================================================================

