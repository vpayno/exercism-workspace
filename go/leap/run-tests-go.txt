Running automated test file(s):

Go packages: leap 


===============================================================================

golangci-lint run ./...

real	0m2.588s
user	0m10.241s
sys	0m1.535s

===============================================================================

golint ./...

real	0m0.015s
user	0m0.010s
sys	0m0.018s

===============================================================================

revive -formatter=stylish ./...

real	0m0.007s
user	0m0.003s
sys	0m0.006s

===============================================================================

ineffassign ./...

real	0m0.092s
user	0m0.142s
sys	0m0.139s

===============================================================================

go-consistent -v ./...
	info: check "./."
./leap_examples_test.go:3:1: unit import: omit parenthesis in a single-package import

real	0m0.119s
user	0m0.184s
sys	0m0.151s

===============================================================================

staticcheck ./...

real	0m0.174s
user	0m0.246s
sys	0m0.218s

===============================================================================

gocritic check -enableAll ./...

real	0m0.888s
user	0m2.930s
sys	0m0.569s

===============================================================================

go vet ./...

real	0m0.102s
user	0m0.238s
sys	0m0.217s

===============================================================================

go fix ./...

real	0m0.016s
user	0m0.007s
sys	0m0.014s

===============================================================================

gocyclo .
4 leap Benchmark400 leap_test.go:17:1
4 leap IsLeapYear leap.go:9:1
3 leap TestLeapYears leap_test.go:5:1
2 leap ExampleIsLeapYear leap_examples_test.go:7:1

real	0m0.002s
user	0m0.002s
sys	0m0.000s

===============================================================================

misspell .

real	0m0.026s
user	0m0.032s
sys	0m0.010s

===============================================================================

gosec ./...
[gosec] 2023/02/07 22:52:34 Including rules: default
[gosec] 2023/02/07 22:52:34 Excluding rules: default
[gosec] 2023/02/07 22:52:34 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/leap
[gosec] 2023/02/07 22:52:34 Checking package: leap
[gosec] 2023/02/07 22:52:34 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/leap/leap.go
Results:


Summary:
   Files: 1
   Lines: 24
   Nosec: 0
  Issues: 0


real	0m0.070s
user	0m0.064s
sys	0m0.057s

===============================================================================

gotest -v -covermode=count -coverprofile coverage.out ./...
=== RUN   TestLeapYears
=== RUN   TestLeapYears/year_not_divisible_by_4_in_common_year
=== RUN   TestLeapYears/year_divisible_by_2,_not_divisible_by_4_in_common_year
=== RUN   TestLeapYears/year_divisible_by_4,_not_divisible_by_100_in_leap_year
=== RUN   TestLeapYears/year_divisible_by_4_and_5_is_still_a_leap_year
=== RUN   TestLeapYears/year_divisible_by_100,_not_divisible_by_400_in_common_year
=== RUN   TestLeapYears/year_divisible_by_100_but_not_by_3_is_still_not_a_leap_year
=== RUN   TestLeapYears/year_divisible_by_400_is_leap_year
=== RUN   TestLeapYears/year_divisible_by_400_but_not_by_125_is_still_a_leap_year
=== RUN   TestLeapYears/year_divisible_by_200,_not_divisible_by_400_in_common_year
--- PASS: TestLeapYears (0.00s)
    --- PASS: TestLeapYears/year_not_divisible_by_4_in_common_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_2,_not_divisible_by_4_in_common_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_4,_not_divisible_by_100_in_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_4_and_5_is_still_a_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_100,_not_divisible_by_400_in_common_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_100_but_not_by_3_is_still_not_a_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_400_is_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_400_but_not_by_125_is_still_a_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_200,_not_divisible_by_400_in_common_year (0.00s)
=== RUN   ExampleIsLeapYear
--- PASS: ExampleIsLeapYear (0.00s)
PASS
coverage: 100.0% of statements
ok  	leap	0.002s	coverage: 100.0% of statements

real	0m0.191s
user	0m0.315s
sys	0m0.253s

===============================================================================

go tool cover -func=coverage.out
leap/leap.go:9:	IsLeapYear	100.0%
total:		(statements)	100.0%

real	0m0.037s
user	0m0.016s
sys	0m0.045s

===============================================================================

go tool cover -html coverage.out -o coverage.html

real	0m0.026s
user	0m0.013s
sys	0m0.025s

===============================================================================

gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

real	0m0.011s
user	0m0.007s
sys	0m0.009s

===============================================================================

gotest -v -race -covermode=atomic ./...
=== RUN   TestLeapYears
=== RUN   TestLeapYears/year_not_divisible_by_4_in_common_year
=== RUN   TestLeapYears/year_divisible_by_2,_not_divisible_by_4_in_common_year
=== RUN   TestLeapYears/year_divisible_by_4,_not_divisible_by_100_in_leap_year
=== RUN   TestLeapYears/year_divisible_by_4_and_5_is_still_a_leap_year
=== RUN   TestLeapYears/year_divisible_by_100,_not_divisible_by_400_in_common_year
=== RUN   TestLeapYears/year_divisible_by_100_but_not_by_3_is_still_not_a_leap_year
=== RUN   TestLeapYears/year_divisible_by_400_is_leap_year
=== RUN   TestLeapYears/year_divisible_by_400_but_not_by_125_is_still_a_leap_year
=== RUN   TestLeapYears/year_divisible_by_200,_not_divisible_by_400_in_common_year
--- PASS: TestLeapYears (0.00s)
    --- PASS: TestLeapYears/year_not_divisible_by_4_in_common_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_2,_not_divisible_by_4_in_common_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_4,_not_divisible_by_100_in_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_4_and_5_is_still_a_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_100,_not_divisible_by_400_in_common_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_100_but_not_by_3_is_still_not_a_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_400_is_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_400_but_not_by_125_is_still_a_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_200,_not_divisible_by_400_in_common_year (0.00s)
=== RUN   ExampleIsLeapYear
--- PASS: ExampleIsLeapYear (0.00s)
PASS
coverage: 100.0% of statements
ok  	leap	(cached)	coverage: 100.0% of statements

real	0m0.131s
user	0m0.247s
sys	0m0.248s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

gotest -v --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: leap
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
Benchmark400
Benchmark400-16    	14443444	        77.36 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	leap	1.209s

real	0m1.373s
user	0m1.454s
sys	0m0.228s

===============================================================================

gotest -v -tags bonus
=== RUN   TestLeapYears
=== RUN   TestLeapYears/year_not_divisible_by_4_in_common_year
=== RUN   TestLeapYears/year_divisible_by_2,_not_divisible_by_4_in_common_year
=== RUN   TestLeapYears/year_divisible_by_4,_not_divisible_by_100_in_leap_year
=== RUN   TestLeapYears/year_divisible_by_4_and_5_is_still_a_leap_year
=== RUN   TestLeapYears/year_divisible_by_100,_not_divisible_by_400_in_common_year
=== RUN   TestLeapYears/year_divisible_by_100_but_not_by_3_is_still_not_a_leap_year
=== RUN   TestLeapYears/year_divisible_by_400_is_leap_year
=== RUN   TestLeapYears/year_divisible_by_400_but_not_by_125_is_still_a_leap_year
=== RUN   TestLeapYears/year_divisible_by_200,_not_divisible_by_400_in_common_year
--- PASS: TestLeapYears (0.00s)
    --- PASS: TestLeapYears/year_not_divisible_by_4_in_common_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_2,_not_divisible_by_4_in_common_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_4,_not_divisible_by_100_in_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_4_and_5_is_still_a_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_100,_not_divisible_by_400_in_common_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_100_but_not_by_3_is_still_not_a_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_400_is_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_400_but_not_by_125_is_still_a_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_200,_not_divisible_by_400_in_common_year (0.00s)
=== RUN   ExampleIsLeapYear
--- PASS: ExampleIsLeapYear (0.00s)
PASS
ok  	leap	0.002s

real	0m0.163s
user	0m0.275s
sys	0m0.266s

===============================================================================

benchstat benchstat-old.txt benchstat-new.txt
name    old time/op    new time/op    delta
400-16    81.9ns ± 0%    77.4ns ± 0%   ~     (p=1.000 n=1+1)

name    old alloc/op   new alloc/op   delta
400-16     0.00B          0.00B        ~     (all equal)

name    old allocs/op  new allocs/op  delta
400-16      0.00           0.00        ~     (all equal)

real	0m0.008s
user	0m0.005s
sys	0m0.008s

===============================================================================

gomarkdoc --output leap-doc.md

real	0m0.011s
user	0m0.007s
sys	0m0.006s

===============================================================================

go doc -all leap
package leap // import "leap"

Package leap is used to report if a year is a leap year in the Gregorian
calendar.

FUNCTIONS

func IsLeapYear(year int) bool
    IsLeapYear returns true if the year is a leap year.

    on every year that is evenly divisible by 4 except every year that is evenly
    divisible by 100 unless the year is also evenly divisible by 400


real	0m0.046s
user	0m0.021s
sys	0m0.041s


===============================================================================

