Running automated test file(s):

Go packages: leap 


===============================================================================

golint leap

real	0m0.072s
user	0m0.050s
sys	0m0.064s

===============================================================================

go test -v -covermode=count -coverprofile coverage.out leap
=== RUN   TestLeapYears
=== RUN   TestLeapYears/year_not_divisible_by_4_in_common_year
=== RUN   TestLeapYears/year_divisible_by_2,_not_divisible_by_4_in_common_year
=== RUN   TestLeapYears/year_divisible_by_4,_not_divisible_by_100_in_leap_year
=== RUN   TestLeapYears/year_divisible_by_4_and_5_is_still_a_leap_year
=== RUN   TestLeapYears/year_divisible_by_100,_not_divisible_by_400_in_common_year
=== RUN   TestLeapYears/year_divisible_by_100_but_not_by_3_is_still_not_a_leap_year
=== RUN   TestLeapYears/year_divisible_by_400_is_leap_year
=== RUN   TestLeapYears/year_divisible_by_400_but_not_by_125_is_still_a_leap_year
=== RUN   TestLeapYears/year_divisible_by_200,_not_divisible_by_400_in_common_year
--- PASS: TestLeapYears (0.00s)
    --- PASS: TestLeapYears/year_not_divisible_by_4_in_common_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_2,_not_divisible_by_4_in_common_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_4,_not_divisible_by_100_in_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_4_and_5_is_still_a_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_100,_not_divisible_by_400_in_common_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_100_but_not_by_3_is_still_not_a_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_400_is_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_400_but_not_by_125_is_still_a_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_200,_not_divisible_by_400_in_common_year (0.00s)
=== RUN   ExampleIsLeapYear
--- PASS: ExampleIsLeapYear (0.00s)
PASS
coverage: 100.0% of statements
ok  	leap	0.006s	coverage: 100.0% of statements

real	0m0.549s
user	0m0.638s
sys	0m0.449s

===============================================================================

go tool cover -func=coverage.out
leap/leap.go:5:	IsLeapYear	100.0%
total:		(statements)	100.0%

real	0m0.073s
user	0m0.039s
sys	0m0.083s

===============================================================================

go tool cover -html coverage.out -o coverage.html

real	0m0.087s
user	0m0.055s
sys	0m0.082s

===============================================================================

go test -v -race -covermode=atomic leap
=== RUN   TestLeapYears
=== RUN   TestLeapYears/year_not_divisible_by_4_in_common_year
=== RUN   TestLeapYears/year_divisible_by_2,_not_divisible_by_4_in_common_year
=== RUN   TestLeapYears/year_divisible_by_4,_not_divisible_by_100_in_leap_year
=== RUN   TestLeapYears/year_divisible_by_4_and_5_is_still_a_leap_year
=== RUN   TestLeapYears/year_divisible_by_100,_not_divisible_by_400_in_common_year
=== RUN   TestLeapYears/year_divisible_by_100_but_not_by_3_is_still_not_a_leap_year
=== RUN   TestLeapYears/year_divisible_by_400_is_leap_year
=== RUN   TestLeapYears/year_divisible_by_400_but_not_by_125_is_still_a_leap_year
=== RUN   TestLeapYears/year_divisible_by_200,_not_divisible_by_400_in_common_year
--- PASS: TestLeapYears (0.00s)
    --- PASS: TestLeapYears/year_not_divisible_by_4_in_common_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_2,_not_divisible_by_4_in_common_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_4,_not_divisible_by_100_in_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_4_and_5_is_still_a_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_100,_not_divisible_by_400_in_common_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_100_but_not_by_3_is_still_not_a_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_400_is_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_400_but_not_by_125_is_still_a_leap_year (0.00s)
    --- PASS: TestLeapYears/year_divisible_by_200,_not_divisible_by_400_in_common_year (0.00s)
=== RUN   ExampleIsLeapYear
--- PASS: ExampleIsLeapYear (0.00s)
PASS
coverage: 100.0% of statements
ok  	leap	0.029s	coverage: 100.0% of statements

real	0m0.651s
user	0m0.700s
sys	0m0.456s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

go test --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: leap
cpu: Intel(R) Core(TM) i7-7Y75 CPU @ 1.30GHz
Benchmark400-4   	 7068912	       161.8 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	leap	1.356s

real	0m1.822s
user	0m1.929s
sys	0m0.382s

===============================================================================

go test -tags bonus
PASS
ok  	leap	0.011s

real	0m0.463s
user	0m0.568s
sys	0m0.341s

===============================================================================

go install golang.org/x/perf/cmd/benchstat@latest

real	0m0.726s
user	0m0.733s
sys	0m0.337s

benchstat benchstat-old.txt benchstat-new.txt
name   old time/op    new time/op    delta
400-4     227ns ± 0%     162ns ± 0%   ~     (p=1.000 n=1+1)

name   old alloc/op   new alloc/op   delta
400-4     0.00B          0.00B        ~     (all equal)

name   old allocs/op  new allocs/op  delta
400-4      0.00           0.00        ~     (all equal)

real	0m0.017s
user	0m0.005s
sys	0m0.019s

===============================================================================

go vet leap

real	0m0.288s
user	0m0.346s
sys	0m0.310s

===============================================================================

go fix leap

real	0m0.045s
user	0m0.038s
sys	0m0.044s

===============================================================================

gosec ./leap
[gosec] 2022/07/26 07:42:09 Including rules: default
[gosec] 2022/07/26 07:42:09 Excluding rules: default
[gosec] 2022/07/26 07:42:09 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/leap
[gosec] 2022/07/26 07:42:10 Checking package: leap
[gosec] 2022/07/26 07:42:10 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/leap/leap.go
Results:


Summary:
   Files: 1
   Lines: 20
   Nosec: 0
  Issues: 0


real	0m0.230s
user	0m0.312s
sys	0m0.144s

===============================================================================

gomarkdoc --output leap-doc.md

real	0m0.028s
user	0m0.019s
sys	0m0.012s

===============================================================================

go doc -all leap
package leap // import "leap"

Package leap is used to report if a year is a leap year in the Gregorian
calendar.

FUNCTIONS

func IsLeapYear(year int) bool
    IsLeapYear retuns true if the year is a leap year.


real	0m0.121s
user	0m0.049s
sys	0m0.113s


===============================================================================

