Running automated test file(s):

Go packages: leap 


===============================================================================

golint leap

real	0m0.122s
user	0m0.093s
sys	0m0.090s

===============================================================================

go test -v -covermode=count -coverprofile coverage.out leap
=== RUN   TestLeapYears
--- PASS: TestLeapYears (0.00s)
=== RUN   ExampleIsLeapYear
--- PASS: ExampleIsLeapYear (0.00s)
PASS
coverage: 100.0% of statements
ok  	leap	0.021s	coverage: 100.0% of statements

real	0m0.778s
user	0m0.954s
sys	0m0.516s

===============================================================================

go tool cover -func=coverage.out
leap/leap.go:5:	IsLeapYear	100.0%
total:		(statements)	100.0%

real	0m0.088s
user	0m0.037s
sys	0m0.083s

===============================================================================

go tool cover -html coverage.out -o coverage.html

real	0m0.084s
user	0m0.046s
sys	0m0.100s

===============================================================================

go test -v -race -covermode=atomic leap
=== RUN   TestLeapYears
--- PASS: TestLeapYears (0.00s)
=== RUN   ExampleIsLeapYear
--- PASS: ExampleIsLeapYear (0.00s)
PASS
coverage: 100.0% of statements
ok  	leap	0.032s	coverage: 100.0% of statements

real	0m0.723s
user	0m0.748s
sys	0m0.580s

===============================================================================

go test --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: leap
cpu: Intel(R) Core(TM) i7-7Y75 CPU @ 1.30GHz
Benchmark400-4   	 7099906	       226.8 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	leap	1.835s

real	0m2.327s
user	0m2.476s
sys	0m0.396s

===============================================================================

go test -tags bonus
PASS
ok  	leap	0.008s

real	0m0.557s
user	0m0.662s
sys	0m0.492s

===============================================================================

No old benchmarks to run benchstat against.

===============================================================================

go vet leap

real	0m0.424s
user	0m0.500s
sys	0m0.395s

===============================================================================

go fix leap

real	0m0.052s
user	0m0.019s
sys	0m0.049s

===============================================================================

gosec ./leap
[gosec] 2022/06/27 08:06:55 Including rules: default
[gosec] 2022/06/27 08:06:55 Excluding rules: default
[gosec] 2022/06/27 08:06:55 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/leap
[gosec] 2022/06/27 08:06:55 Checking package: leap
[gosec] 2022/06/27 08:06:55 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/leap/leap.go
Results:


Summary:
   Files: 1
   Lines: 20
   Nosec: 0
  Issues: 0


real	0m0.247s
user	0m0.273s
sys	0m0.202s

===============================================================================

gomarkdoc --output leap-doc.md

real	0m0.034s
user	0m0.021s
sys	0m0.018s

===============================================================================

go doc -all leap
package leap // import "leap"

Package leap is used to report if a year is a leap year in the Gregorian
calendar.

FUNCTIONS

func IsLeapYear(year int) bool
    IsLeapYear retuns true if the year is a leap year.


real	0m0.148s
user	0m0.055s
sys	0m0.120s


===============================================================================

