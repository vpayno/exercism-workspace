Running automated test file(s):

Go packages: bob 


===============================================================================

Running: ../../.github/citools/go/go-lint-golangci-lint

Running GoLangCi-Lint

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.030s
user	0m0.018s
sys	0m0.028s


 ==============================================================================

Running: golangci-lint run --enable-all ./...

level=warning msg="[runner] The linter 'golint' is deprecated (since v1.41.0) due to: The repository of the linter has been archived by the owner. Replaced by revive."
level=warning msg="[runner] The linter 'interfacer' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. "
level=warning msg="[runner] The linter 'ifshort' is deprecated (since v1.48.0) due to: The repository of the linter has been deprecated by the owner. "
level=warning msg="[runner] The linter 'varcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'nosnakecase' is deprecated (since v1.48.1) due to: The repository of the linter has been deprecated by the owner. Replaced by revive(var-naming)."
level=warning msg="[runner] The linter 'exhaustivestruct' is deprecated (since v1.46.0) due to: The owner seems to have abandoned the linter. Replaced by exhaustruct."
level=warning msg="[runner] The linter 'scopelint' is deprecated (since v1.39.0) due to: The repository of the linter has been deprecated by the owner. Replaced by exportloopref."
level=warning msg="[runner] The linter 'structcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'deadcode' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'maligned' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. Replaced by govet 'fieldalignment'."
bob.go:10: Function 'Hey' is too long (61 > 60) (funlen)
func Hey(remark string) string {
bob_test.go:8:18: Using the variable on range scope `tc` in function literal (scopelint)
			actual := Hey(tc.input)
			              ^
bob_test.go:9:17: Using the variable on range scope `tc` in function literal (scopelint)
			if actual != tc.expected {
			             ^
bob_test.go:10:40: Using the variable on range scope `tc` in function literal (scopelint)
				t.Fatalf("Hey(%q) = %q, want: %q", tc.input, actual, tc.expected)
				                                   ^
bob.go:22:3: return statements should not be cuddled if block has more than two lines (wsl)
		return "Sure."
		^
bob.go:31:3: return statements should not be cuddled if block has more than two lines (wsl)
		return "Calm down, I know what I'm doing!"
		^
bob.go:40:3: return statements should not be cuddled if block has more than two lines (wsl)
		return "Sure."
		^
bob_test.go:20:2: for statements should only be cuddled with assignments used in the iteration (wsl)
	for i := 0; i < b.N; i++ {
	^
cases_test.go:6:5: testCases is a global variable (gochecknoglobals)
var testCases = []struct {
    ^
bob_test.go:5:1: Function TestHey missing the call to method parallel (paralleltest)
func TestHey(t *testing.T) {
^
bob_test.go:6:2: Range statement for test TestHey missing the call to method parallel in test Run (paralleltest)
	for _, tc := range testCases {
	^
bob_examples_test.go:1:9: package should be `bob_test` instead of `bob` (testpackage)
package bob
        ^
bob_test.go:1:9: package should be `bob_test` instead of `bob` (testpackage)
package bob
        ^
cases_test.go:1:9: package should be `bob_test` instead of `bob` (testpackage)
package bob
        ^

real	0m0.594s
user	0m0.817s
sys	0m0.563s


 ==============================================================================

Exit code: -1

real	0m0.635s
user	0m0.841s
sys	0m0.601s

real	0m0.637s
user	0m0.842s
sys	0m0.603s

===============================================================================

Running: ../../.github/citools/go/go-lint-revive

Running Go Lint Revive

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.038s
user	0m0.029s
sys	0m0.030s


 ==============================================================================

Running: revive -formatter=stylish ./...


real	0m0.063s
user	0m0.033s
sys	0m0.045s


 ==============================================================================

Exit code: 0

real	0m0.115s
user	0m0.066s
sys	0m0.089s

real	0m0.118s
user	0m0.068s
sys	0m0.091s

===============================================================================

Running: ../../.github/citools/go/go-lint-ineffassign
../run-tests: line 41: .github/citools/go/go-lint-ineffassign: No such file or directory

real	0m0.001s
user	0m0.000s
sys	0m0.000s

===============================================================================

Running: ../../.github/citools/go/go-lint-go-consistent

Running Go go-consistent

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.019s
user	0m0.015s
sys	0m0.015s


 ==============================================================================

Running: go-consistent -v ./...

	info: check "./."
internal error: package "regexp" without types was imported from "bob"

real	0m0.085s
user	0m0.095s
sys	0m0.105s


 ==============================================================================

Exit code: -1

real	0m0.116s
user	0m0.116s
sys	0m0.130s

real	0m0.118s
user	0m0.116s
sys	0m0.132s

===============================================================================

Running: ../../.github/citools/go/go-lint-staticcheck

Running Go StaticCheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.023s
user	0m0.014s
sys	0m0.023s


 ==============================================================================

Running: staticcheck -checks=all ./...


real	0m0.191s
user	0m0.234s
sys	0m0.123s


 ==============================================================================

Exit code: 0

real	0m0.224s
user	0m0.253s
sys	0m0.157s

real	0m0.226s
user	0m0.254s
sys	0m0.157s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocritic

Running Go gocritic

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.028s
user	0m0.017s
sys	0m0.026s


 ==============================================================================

Running: gocritic check -enableAll ./...


real	0m0.783s
user	0m1.959s
sys	0m0.283s


 ==============================================================================

Exit code: 0

real	0m0.831s
user	0m1.989s
sys	0m0.324s

real	0m0.834s
user	0m1.992s
sys	0m0.324s

===============================================================================

Running: ../../.github/citools/go/go-lint-go_vet

Running Go Vet

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.021s
user	0m0.015s
sys	0m0.017s


 ==============================================================================

Running: go vet ./...


real	0m0.078s
user	0m0.124s
sys	0m0.128s


 ==============================================================================

Exit code: 0

real	0m0.110s
user	0m0.141s
sys	0m0.158s

real	0m0.112s
user	0m0.142s
sys	0m0.158s

===============================================================================

Running: ../../.github/citools/go/go-fixer-go_fix

Running go fix

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.027s
user	0m0.020s
sys	0m0.021s


 ==============================================================================

Running: go fix ./...


real	0m0.025s
user	0m0.018s
sys	0m0.015s


 ==============================================================================

Exit code: 0

real	0m0.063s
user	0m0.045s
sys	0m0.045s

real	0m0.065s
user	0m0.046s
sys	0m0.046s

===============================================================================

Running: ../../.github/citools/go/go-lint-errcheck

Running Go errcheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.032s
user	0m0.026s
sys	0m0.022s


 ==============================================================================

Running: errcheck ./...


real	0m0.460s
user	0m1.371s
sys	0m0.269s


 ==============================================================================

Exit code: 0

real	0m0.506s
user	0m1.407s
sys	0m0.301s

real	0m0.508s
user	0m1.408s
sys	0m0.302s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocyclo

Running Go gocyclo

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.018s
user	0m0.016s
sys	0m0.015s


 ==============================================================================

Running: gocyclo .

13 bob Hey bob.go:10:1
4 bob BenchmarkHey bob_test.go:16:1
3 bob TestHey bob_test.go:5:1
1 bob ExampleHey bob_examples_test.go:5:1

real	0m0.002s
user	0m0.000s
sys	0m0.002s


 ==============================================================================

Exit code: 0

real	0m0.031s
user	0m0.023s
sys	0m0.024s

real	0m0.033s
user	0m0.025s
sys	0m0.024s

===============================================================================

Running: ../../.github/citools/go/go-lint-misspell

Running Go misspell

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: misspell .


real	0m0.031s
user	0m0.036s
sys	0m0.014s


 ==============================================================================

Exit code: 0

real	0m0.045s
user	0m0.041s
sys	0m0.026s

real	0m0.047s
user	0m0.042s
sys	0m0.027s

===============================================================================

Running: ../../.github/citools/go/go-lint-gosec

Running Go GoSec

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.030s
user	0m0.018s
sys	0m0.033s


 ==============================================================================

Running: gosec ./...

[gosec] 2023/09/07 00:21:05 Including rules: default
[gosec] 2023/09/07 00:21:05 Excluding rules: default
[gosec] 2023/09/07 00:21:05 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/bob
[gosec] 2023/09/07 00:21:05 Checking package: bob
[gosec] 2023/09/07 00:21:05 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/bob/bob.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 1
  Lines  : 72
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.108s
user	0m0.130s
sys	0m0.103s


 ==============================================================================

Exit code: 0

real	0m0.154s
user	0m0.154s
sys	0m0.150s

real	0m0.157s
user	0m0.156s
sys	0m0.152s

===============================================================================

Running: ../../.github/citools/go/go-test-cover-report

Running Go Test, Coverage & Reports

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.022s
user	0m0.017s
sys	0m0.018s


 ==============================================================================

Running: gotest -v -covermode=count -coverprofile coverage.out ./...

=== RUN   TestHey
=== RUN   TestHey/stating_something
=== RUN   TestHey/shouting
=== RUN   TestHey/shouting_gibberish
=== RUN   TestHey/asking_a_question
=== RUN   TestHey/asking_a_numeric_question
=== RUN   TestHey/asking_gibberish
=== RUN   TestHey/talking_forcefully
=== RUN   TestHey/using_acronyms_in_regular_speech
=== RUN   TestHey/forceful_question
=== RUN   TestHey/shouting_numbers
=== RUN   TestHey/no_letters
=== RUN   TestHey/question_with_no_letters
=== RUN   TestHey/shouting_with_special_characters
=== RUN   TestHey/shouting_with_no_exclamation_mark
=== RUN   TestHey/statement_containing_question_mark
=== RUN   TestHey/non-letters_with_question
=== RUN   TestHey/prattling_on
=== RUN   TestHey/silence
=== RUN   TestHey/prolonged_silence
=== RUN   TestHey/alternate_silence
=== RUN   TestHey/multiple_line_question
=== RUN   TestHey/starting_with_whitespace
=== RUN   TestHey/ending_with_whitespace
=== RUN   TestHey/other_whitespace
=== RUN   TestHey/non-question_ending_with_whitespace
--- PASS: TestHey (0.00s)
    --- PASS: TestHey/stating_something (0.00s)
    --- PASS: TestHey/shouting (0.00s)
    --- PASS: TestHey/shouting_gibberish (0.00s)
    --- PASS: TestHey/asking_a_question (0.00s)
    --- PASS: TestHey/asking_a_numeric_question (0.00s)
    --- PASS: TestHey/asking_gibberish (0.00s)
    --- PASS: TestHey/talking_forcefully (0.00s)
    --- PASS: TestHey/using_acronyms_in_regular_speech (0.00s)
    --- PASS: TestHey/forceful_question (0.00s)
    --- PASS: TestHey/shouting_numbers (0.00s)
    --- PASS: TestHey/no_letters (0.00s)
    --- PASS: TestHey/question_with_no_letters (0.00s)
    --- PASS: TestHey/shouting_with_special_characters (0.00s)
    --- PASS: TestHey/shouting_with_no_exclamation_mark (0.00s)
    --- PASS: TestHey/statement_containing_question_mark (0.00s)
    --- PASS: TestHey/non-letters_with_question (0.00s)
    --- PASS: TestHey/prattling_on (0.00s)
    --- PASS: TestHey/silence (0.00s)
    --- PASS: TestHey/prolonged_silence (0.00s)
    --- PASS: TestHey/alternate_silence (0.00s)
    --- PASS: TestHey/multiple_line_question (0.00s)
    --- PASS: TestHey/starting_with_whitespace (0.00s)
    --- PASS: TestHey/ending_with_whitespace (0.00s)
    --- PASS: TestHey/other_whitespace (0.00s)
    --- PASS: TestHey/non-question_ending_with_whitespace (0.00s)
=== RUN   ExampleHey
--- PASS: ExampleHey (0.00s)
PASS
coverage: 81.8% of statements
ok  	bob	0.005s	coverage: 81.8% of statements

real	0m0.173s
user	0m0.217s
sys	0m0.134s


 ==============================================================================

Running: go tool cover -func=coverage.out

bob/bob.go:10:	Hey		81.8%
total:		(statements)	81.8%

real	0m0.053s
user	0m0.064s
sys	0m0.072s


 ==============================================================================

Running: go tool cover -html coverage.out -o coverage.html


real	0m0.052s
user	0m0.056s
sys	0m0.078s


 ==============================================================================

Running: cover_annotate

Running: gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

10     	func Hey(remark string) string {
11     		// The extra whitespace just gets in the way.
12     		remark = strings.TrimSpace(remark)
13     	
14     		var reStr string
15     	
16     		// Question without letters.
17     		reStr = `^([[:punct:]|[[:space:]])+[?]$`
18     		if m, e := regexp.MatchString(reStr, remark); m {
19     			if e != nil {
20 MISS				panic(e)
21     			}
22     			return "Sure."
23     		}
24     	
25     		// Yelling a question.
26     		reStr = `^([[:upper:]]|[[:punct:]|[[:space:]])+[?]$`
27     		if m, e := regexp.MatchString(reStr, remark); m {
28     			if e != nil {
29 MISS				panic(e)
30     			}
31     			return "Calm down, I know what I'm doing!"
32     		}
33     	
34     		// Any normal question.
35     		reStr = `^([[:alpha:]]|[[:digit:]]|[[:punct:]])([[:alpha:]]|[[:digit:]]|[[:punct:]]|[[:space:]])*[?]$`
36     		if m, e := regexp.MatchString(reStr, remark); m {
37     			if e != nil {
38 MISS				panic(e)
39     			}
40     			return "Sure."
41     		}
42     	
43     		// Letterless statement.
44     		reStr = `^([[:digit:]]|[[:punct:]|[[:space:]])+$`
45     		if m, e := regexp.MatchString(reStr, remark); m {
46     			if e != nil {
47 MISS				panic(e)
48     			}
49     			return "Whatever."
50     		}
51     	
52     		// Yelling statement.
53     		reStr = `^([[:upper:]]|[[:digit:]]|[[:punct:]|[[:space:]])+$`
54     		if m, e := regexp.MatchString(reStr, remark); m {
55     			if e != nil {
56 MISS				panic(e)
57     			}
58     			return "Whoa, chill out!"
59     		}
60     	
61     		// Silence
62     		reStr = `^[[:space:]]*$`
63     		if m, e := regexp.MatchString(reStr, remark); m {
64     			if e != nil {
65 MISS				panic(e)
66     			}
67     			return "Fine. Be that way!"
68     		}
69     	
70     		// Default response.
71     		return "Whatever."
72     	}


real	0m0.017s
user	0m0.013s
sys	0m0.017s

real	0m0.017s
user	0m0.013s
sys	0m0.017s


 ==============================================================================

Running: gotest -v -race -covermode=atomic ./...

=== RUN   TestHey
=== RUN   TestHey/stating_something
=== RUN   TestHey/shouting
=== RUN   TestHey/shouting_gibberish
=== RUN   TestHey/asking_a_question
=== RUN   TestHey/asking_a_numeric_question
=== RUN   TestHey/asking_gibberish
=== RUN   TestHey/talking_forcefully
=== RUN   TestHey/using_acronyms_in_regular_speech
=== RUN   TestHey/forceful_question
=== RUN   TestHey/shouting_numbers
=== RUN   TestHey/no_letters
=== RUN   TestHey/question_with_no_letters
=== RUN   TestHey/shouting_with_special_characters
=== RUN   TestHey/shouting_with_no_exclamation_mark
=== RUN   TestHey/statement_containing_question_mark
=== RUN   TestHey/non-letters_with_question
=== RUN   TestHey/prattling_on
=== RUN   TestHey/silence
=== RUN   TestHey/prolonged_silence
=== RUN   TestHey/alternate_silence
=== RUN   TestHey/multiple_line_question
=== RUN   TestHey/starting_with_whitespace
=== RUN   TestHey/ending_with_whitespace
=== RUN   TestHey/other_whitespace
=== RUN   TestHey/non-question_ending_with_whitespace
--- PASS: TestHey (0.01s)
    --- PASS: TestHey/stating_something (0.00s)
    --- PASS: TestHey/shouting (0.00s)
    --- PASS: TestHey/shouting_gibberish (0.00s)
    --- PASS: TestHey/asking_a_question (0.00s)
    --- PASS: TestHey/asking_a_numeric_question (0.00s)
    --- PASS: TestHey/asking_gibberish (0.00s)
    --- PASS: TestHey/talking_forcefully (0.00s)
    --- PASS: TestHey/using_acronyms_in_regular_speech (0.00s)
    --- PASS: TestHey/forceful_question (0.00s)
    --- PASS: TestHey/shouting_numbers (0.00s)
    --- PASS: TestHey/no_letters (0.00s)
    --- PASS: TestHey/question_with_no_letters (0.00s)
    --- PASS: TestHey/shouting_with_special_characters (0.00s)
    --- PASS: TestHey/shouting_with_no_exclamation_mark (0.00s)
    --- PASS: TestHey/statement_containing_question_mark (0.00s)
    --- PASS: TestHey/non-letters_with_question (0.00s)
    --- PASS: TestHey/prattling_on (0.00s)
    --- PASS: TestHey/silence (0.00s)
    --- PASS: TestHey/prolonged_silence (0.00s)
    --- PASS: TestHey/alternate_silence (0.00s)
    --- PASS: TestHey/multiple_line_question (0.00s)
    --- PASS: TestHey/starting_with_whitespace (0.00s)
    --- PASS: TestHey/ending_with_whitespace (0.00s)
    --- PASS: TestHey/other_whitespace (0.00s)
    --- PASS: TestHey/non-question_ending_with_whitespace (0.00s)
=== RUN   ExampleHey
--- PASS: ExampleHey (0.00s)
PASS
coverage: 81.8% of statements
ok  	bob	1.029s	coverage: 81.8% of statements

real	0m1.281s
user	0m0.337s
sys	0m0.169s


 ==============================================================================

Exit code: 0

real	0m1.609s
user	0m0.711s
sys	0m0.496s

real	0m1.611s
user	0m0.712s
sys	0m0.497s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

gotest -v --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: bob
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
BenchmarkHey
BenchmarkHey-8   	    2659	    419768 ns/op	  453253 B/op	    5947 allocs/op
PASS
ok  	bob	1.167s

real	0m1.314s
user	0m1.407s
sys	0m0.172s

===============================================================================

gotest -v -tags bonus
=== RUN   TestHey
=== RUN   TestHey/stating_something
=== RUN   TestHey/shouting
=== RUN   TestHey/shouting_gibberish
=== RUN   TestHey/asking_a_question
=== RUN   TestHey/asking_a_numeric_question
=== RUN   TestHey/asking_gibberish
=== RUN   TestHey/talking_forcefully
=== RUN   TestHey/using_acronyms_in_regular_speech
=== RUN   TestHey/forceful_question
=== RUN   TestHey/shouting_numbers
=== RUN   TestHey/no_letters
=== RUN   TestHey/question_with_no_letters
=== RUN   TestHey/shouting_with_special_characters
=== RUN   TestHey/shouting_with_no_exclamation_mark
=== RUN   TestHey/statement_containing_question_mark
=== RUN   TestHey/non-letters_with_question
=== RUN   TestHey/prattling_on
=== RUN   TestHey/silence
=== RUN   TestHey/prolonged_silence
=== RUN   TestHey/alternate_silence
=== RUN   TestHey/multiple_line_question
=== RUN   TestHey/starting_with_whitespace
=== RUN   TestHey/ending_with_whitespace
=== RUN   TestHey/other_whitespace
=== RUN   TestHey/non-question_ending_with_whitespace
--- PASS: TestHey (0.00s)
    --- PASS: TestHey/stating_something (0.00s)
    --- PASS: TestHey/shouting (0.00s)
    --- PASS: TestHey/shouting_gibberish (0.00s)
    --- PASS: TestHey/asking_a_question (0.00s)
    --- PASS: TestHey/asking_a_numeric_question (0.00s)
    --- PASS: TestHey/asking_gibberish (0.00s)
    --- PASS: TestHey/talking_forcefully (0.00s)
    --- PASS: TestHey/using_acronyms_in_regular_speech (0.00s)
    --- PASS: TestHey/forceful_question (0.00s)
    --- PASS: TestHey/shouting_numbers (0.00s)
    --- PASS: TestHey/no_letters (0.00s)
    --- PASS: TestHey/question_with_no_letters (0.00s)
    --- PASS: TestHey/shouting_with_special_characters (0.00s)
    --- PASS: TestHey/shouting_with_no_exclamation_mark (0.00s)
    --- PASS: TestHey/statement_containing_question_mark (0.00s)
    --- PASS: TestHey/non-letters_with_question (0.00s)
    --- PASS: TestHey/prattling_on (0.00s)
    --- PASS: TestHey/silence (0.00s)
    --- PASS: TestHey/prolonged_silence (0.00s)
    --- PASS: TestHey/alternate_silence (0.00s)
    --- PASS: TestHey/multiple_line_question (0.00s)
    --- PASS: TestHey/starting_with_whitespace (0.00s)
    --- PASS: TestHey/ending_with_whitespace (0.00s)
    --- PASS: TestHey/other_whitespace (0.00s)
    --- PASS: TestHey/non-question_ending_with_whitespace (0.00s)
=== RUN   ExampleHey
--- PASS: ExampleHey (0.00s)
PASS
ok  	bob	0.007s

real	0m0.139s
user	0m0.185s
sys	0m0.133s

===============================================================================

benchstat benchstat-old.txt benchstat-new.txt
benchstat-new.txt:5: missing iteration count
goos: linux
goarch: amd64
pkg: bob
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
      │ benchstat-new.txt │
      │      sec/op       │
Hey-8        419.8µ ± ∞ ¹
¹ need >= 6 samples for confidence interval at level 0.95

      │ benchstat-new.txt │
      │       B/op        │
Hey-8       442.6Ki ± ∞ ¹
¹ need >= 6 samples for confidence interval at level 0.95

      │ benchstat-new.txt │
      │     allocs/op     │
Hey-8        5.947k ± ∞ ¹
¹ need >= 6 samples for confidence interval at level 0.95

cpu: Intel(R) Core(TM) i7-7Y75 CPU @ 1.30GHz
      │ benchstat-old.txt │
      │      sec/op       │
Hey-4        3.073m ± ∞ ¹
¹ need >= 6 samples for confidence interval at level 0.95

      │ benchstat-old.txt │
      │       B/op        │
Hey-4       441.1Ki ± ∞ ¹
¹ need >= 6 samples for confidence interval at level 0.95

      │ benchstat-old.txt │
      │     allocs/op     │
Hey-4        5.947k ± ∞ ¹
¹ need >= 6 samples for confidence interval at level 0.95

real	0m0.004s
user	0m0.002s
sys	0m0.003s

===============================================================================

gomarkdoc --output bob-doc.md

real	0m0.014s
user	0m0.006s
sys	0m0.008s

===============================================================================

go doc -all bob
package bob // import "bob"

Package bob is a lackadaisical teenage AI.

FUNCTIONS

func Hey(remark string) string
    Hey returns a response from the simulated teenager.


real	0m0.041s
user	0m0.024s
sys	0m0.037s


===============================================================================

