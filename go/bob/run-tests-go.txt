Running automated test file(s):

Go packages: bob 


===============================================================================

Running: ../../.github/citools/go/go-lint-golangci-lint

Running GoLangCi-Lint

Go version:

	go version go1.21.1 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.035s
user	0m0.024s
sys	0m0.032s


 ==============================================================================

Running: golangci-lint run --enable-all ./...

level=warning msg="[runner] The linter 'interfacer' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. "
level=warning msg="[runner] The linter 'varcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'nosnakecase' is deprecated (since v1.48.1) due to: The repository of the linter has been deprecated by the owner. Replaced by revive(var-naming)."
level=warning msg="[runner] The linter 'ifshort' is deprecated (since v1.48.0) due to: The repository of the linter has been deprecated by the owner. "
level=warning msg="[runner] The linter 'exhaustivestruct' is deprecated (since v1.46.0) due to: The owner seems to have abandoned the linter. Replaced by exhaustruct."
level=warning msg="[runner] The linter 'golint' is deprecated (since v1.41.0) due to: The repository of the linter has been archived by the owner. Replaced by revive."
level=warning msg="[runner] The linter 'structcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'scopelint' is deprecated (since v1.39.0) due to: The repository of the linter has been deprecated by the owner. Replaced by exportloopref."
level=warning msg="[runner] The linter 'deadcode' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'maligned' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. Replaced by govet 'fieldalignment'."
bob.go:10: Function 'Hey' is too long (67 > 60) (funlen)
func Hey(remark string) string {
bob_test.go:8:18: Using the variable on range scope `tc` in function literal (scopelint)
			actual := Hey(tc.input)
			              ^
bob_test.go:9:17: Using the variable on range scope `tc` in function literal (scopelint)
			if actual != tc.expected {
			             ^
bob_test.go:10:40: Using the variable on range scope `tc` in function literal (scopelint)
				t.Fatalf("Hey(%q) = %q, want: %q", tc.input, actual, tc.expected)
				                                   ^
cases_test.go:6:5: testCases is a global variable (gochecknoglobals)
var testCases = []struct {
    ^
bob_test.go:5:1: Function TestHey missing the call to method parallel (paralleltest)
func TestHey(t *testing.T) {
^
bob_test.go:6:2: Range statement for test TestHey missing the call to method parallel in test Run (paralleltest)
	for _, tc := range testCases {
	^
bob_examples_test.go:1:9: package should be `bob_test` instead of `bob` (testpackage)
package bob
        ^
bob_test.go:1:9: package should be `bob_test` instead of `bob` (testpackage)
package bob
        ^
cases_test.go:1:9: package should be `bob_test` instead of `bob` (testpackage)
package bob
        ^

real	0m0.292s
user	0m0.332s
sys	0m0.278s


 ==============================================================================

Exit code: -1

real	0m0.347s
user	0m0.364s
sys	0m0.331s

real	0m0.351s
user	0m0.367s
sys	0m0.333s

===============================================================================

Running: ../../.github/citools/go/go-lint-revive

Running Go Lint Revive

Go version:

	go version go1.21.1 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.025s
user	0m0.013s
sys	0m0.030s


 ==============================================================================

Running: revive -formatter=stylish ./...


real	0m0.072s
user	0m0.036s
sys	0m0.060s


 ==============================================================================

Exit code: 0

real	0m0.107s
user	0m0.055s
sys	0m0.097s

real	0m0.109s
user	0m0.056s
sys	0m0.097s

===============================================================================

Running: ../../.github/citools/go/go-lint-ineffassign

Running Go ineffassign

Go version:

	go version go1.21.1 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.035s
user	0m0.028s
sys	0m0.028s


 ==============================================================================

Running: ineffassign ./...


real	0m0.118s
user	0m0.125s
sys	0m0.091s


 ==============================================================================

Exit code: 0

real	0m0.172s
user	0m0.160s
sys	0m0.137s

real	0m0.176s
user	0m0.162s
sys	0m0.138s

===============================================================================

Running: ../../.github/citools/go/go-lint-go-consistent

Running Go go-consistent

Go version:

	go version go1.21.1 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.023s
user	0m0.013s
sys	0m0.026s


 ==============================================================================

Running: go-consistent -v ./...

	info: check "./."
internal error: package "regexp" without types was imported from "bob"

real	0m0.082s
user	0m0.113s
sys	0m0.078s


 ==============================================================================

Exit code: -1

real	0m0.115s
user	0m0.132s
sys	0m0.113s

real	0m0.116s
user	0m0.132s
sys	0m0.114s

===============================================================================

Running: ../../.github/citools/go/go-lint-staticcheck

Running Go StaticCheck

Go version:

	go version go1.21.1 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.026s
user	0m0.017s
sys	0m0.027s


 ==============================================================================

Running: staticcheck -checks=all ./...


real	0m0.126s
user	0m0.148s
sys	0m0.120s


 ==============================================================================

Exit code: 0

real	0m0.161s
user	0m0.170s
sys	0m0.156s

real	0m0.162s
user	0m0.171s
sys	0m0.156s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocritic

Running Go gocritic

Go version:

	go version go1.21.1 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.021s
user	0m0.017s
sys	0m0.015s


 ==============================================================================

Running: gocritic check -enableAll ./...


real	0m0.812s
user	0m2.073s
sys	0m0.283s


 ==============================================================================

Exit code: 0

real	0m0.843s
user	0m2.096s
sys	0m0.304s

real	0m0.844s
user	0m2.097s
sys	0m0.305s

===============================================================================

Running: ../../.github/citools/go/go-lint-go_vet

Running Go Vet

Go version:

	go version go1.21.1 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.023s
user	0m0.018s
sys	0m0.020s


 ==============================================================================

Running: go vet ./...


real	0m0.091s
user	0m0.143s
sys	0m0.111s


 ==============================================================================

Exit code: 0

real	0m0.126s
user	0m0.168s
sys	0m0.140s

real	0m0.127s
user	0m0.168s
sys	0m0.141s

===============================================================================

Running: ../../.github/citools/go/go-fixer-go_fix

Running go fix

Go version:

	go version go1.21.1 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.020s
user	0m0.012s
sys	0m0.020s


 ==============================================================================

Running: go fix ./...


real	0m0.026s
user	0m0.020s
sys	0m0.020s


 ==============================================================================

Exit code: 0

real	0m0.057s
user	0m0.039s
sys	0m0.050s

real	0m0.059s
user	0m0.040s
sys	0m0.050s

===============================================================================

Running: ../../.github/citools/go/go-lint-errcheck

Running Go errcheck

Go version:

	go version go1.21.1 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.019s
user	0m0.013s
sys	0m0.016s


 ==============================================================================

Running: errcheck ./...


real	0m0.456s
user	0m1.352s
sys	0m0.273s


 ==============================================================================

Exit code: 0

real	0m0.486s
user	0m1.369s
sys	0m0.302s

real	0m0.488s
user	0m1.369s
sys	0m0.303s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocyclo

Running Go gocyclo

Go version:

	go version go1.21.1 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.021s
user	0m0.014s
sys	0m0.020s


 ==============================================================================

Running: gocyclo .

13 bob Hey bob.go:10:1
4 bob BenchmarkHey bob_test.go:16:1
3 bob TestHey bob_test.go:5:1
1 bob ExampleHey bob_examples_test.go:5:1

real	0m0.003s
user	0m0.001s
sys	0m0.002s


 ==============================================================================

Exit code: 0

real	0m0.034s
user	0m0.020s
sys	0m0.032s

real	0m0.036s
user	0m0.020s
sys	0m0.034s

===============================================================================

Running: ../../.github/citools/go/go-lint-misspell

Running Go misspell

Go version:

	go version go1.21.1 linux/amd64


 ==============================================================================

Running: misspell .


real	0m0.026s
user	0m0.029s
sys	0m0.010s


 ==============================================================================

Exit code: 0

real	0m0.035s
user	0m0.031s
sys	0m0.019s

real	0m0.037s
user	0m0.032s
sys	0m0.021s

===============================================================================

Running: ../../.github/citools/go/go-lint-gosec

Running Go GoSec

Go version:

	go version go1.21.1 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.034s
user	0m0.027s
sys	0m0.029s


 ==============================================================================

Running: gosec ./...

[gosec] 2023/09/20 19:15:53 Including rules: default
[gosec] 2023/09/20 19:15:53 Excluding rules: default
[gosec] 2023/09/20 19:15:53 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/bob
[gosec] 2023/09/20 19:15:53 Checking package: bob
[gosec] 2023/09/20 19:15:53 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/bob/bob.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 1
  Lines  : 78
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.104s
user	0m0.121s
sys	0m0.091s


 ==============================================================================

Exit code: 0

real	0m0.154s
user	0m0.158s
sys	0m0.133s

real	0m0.156s
user	0m0.159s
sys	0m0.134s

===============================================================================

Running: ../../.github/citools/go/go-test-cover-report

Running Go Test, Coverage & Reports

Go version:

	go version go1.21.1 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.021s
user	0m0.016s
sys	0m0.016s


 ==============================================================================

Running: gotest -v -covermode=count -coverprofile coverage.out ./...

=== RUN   TestHey
=== RUN   TestHey/stating_something
=== RUN   TestHey/shouting
=== RUN   TestHey/shouting_gibberish
=== RUN   TestHey/asking_a_question
=== RUN   TestHey/asking_a_numeric_question
=== RUN   TestHey/asking_gibberish
=== RUN   TestHey/talking_forcefully
=== RUN   TestHey/using_acronyms_in_regular_speech
=== RUN   TestHey/forceful_question
=== RUN   TestHey/shouting_numbers
=== RUN   TestHey/no_letters
=== RUN   TestHey/question_with_no_letters
=== RUN   TestHey/shouting_with_special_characters
=== RUN   TestHey/shouting_with_no_exclamation_mark
=== RUN   TestHey/statement_containing_question_mark
=== RUN   TestHey/non-letters_with_question
=== RUN   TestHey/prattling_on
=== RUN   TestHey/silence
=== RUN   TestHey/prolonged_silence
=== RUN   TestHey/alternate_silence
=== RUN   TestHey/multiple_line_question
=== RUN   TestHey/starting_with_whitespace
=== RUN   TestHey/ending_with_whitespace
=== RUN   TestHey/other_whitespace
=== RUN   TestHey/non-question_ending_with_whitespace
--- PASS: TestHey (0.00s)
    --- PASS: TestHey/stating_something (0.00s)
    --- PASS: TestHey/shouting (0.00s)
    --- PASS: TestHey/shouting_gibberish (0.00s)
    --- PASS: TestHey/asking_a_question (0.00s)
    --- PASS: TestHey/asking_a_numeric_question (0.00s)
    --- PASS: TestHey/asking_gibberish (0.00s)
    --- PASS: TestHey/talking_forcefully (0.00s)
    --- PASS: TestHey/using_acronyms_in_regular_speech (0.00s)
    --- PASS: TestHey/forceful_question (0.00s)
    --- PASS: TestHey/shouting_numbers (0.00s)
    --- PASS: TestHey/no_letters (0.00s)
    --- PASS: TestHey/question_with_no_letters (0.00s)
    --- PASS: TestHey/shouting_with_special_characters (0.00s)
    --- PASS: TestHey/shouting_with_no_exclamation_mark (0.00s)
    --- PASS: TestHey/statement_containing_question_mark (0.00s)
    --- PASS: TestHey/non-letters_with_question (0.00s)
    --- PASS: TestHey/prattling_on (0.00s)
    --- PASS: TestHey/silence (0.00s)
    --- PASS: TestHey/prolonged_silence (0.00s)
    --- PASS: TestHey/alternate_silence (0.00s)
    --- PASS: TestHey/multiple_line_question (0.00s)
    --- PASS: TestHey/starting_with_whitespace (0.00s)
    --- PASS: TestHey/ending_with_whitespace (0.00s)
    --- PASS: TestHey/other_whitespace (0.00s)
    --- PASS: TestHey/non-question_ending_with_whitespace (0.00s)
=== RUN   ExampleHey
--- PASS: ExampleHey (0.00s)
PASS
coverage: 81.8% of statements
ok  	bob	0.004s	coverage: 81.8% of statements

real	0m0.147s
user	0m0.203s
sys	0m0.146s


 ==============================================================================

Running: go tool cover -func=coverage.out

bob/bob.go:10:	Hey		81.8%
total:		(statements)	81.8%

real	0m0.053s
user	0m0.061s
sys	0m0.080s


 ==============================================================================

Running: go tool cover -html coverage.out -o coverage.html


real	0m0.047s
user	0m0.062s
sys	0m0.057s


 ==============================================================================

Running: cover_annotate

Running: gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

10     	func Hey(remark string) string {
11     		// The extra whitespace just gets in the way.
12     		remark = strings.TrimSpace(remark)
13     	
14     		var reStr string
15     	
16     		// Question without letters.
17     		reStr = `^([[:punct:]|[[:space:]])+[?]$`
18     		if m, e := regexp.MatchString(reStr, remark); m {
19     			if e != nil {
20 MISS				panic(e)
21     			}
22     	
23     			return "Sure."
24     		}
25     	
26     		// Yelling a question.
27     		reStr = `^([[:upper:]]|[[:punct:]]|[[:space:]])+[?]$`
28     		if m, e := regexp.MatchString(reStr, remark); m {
29     			if e != nil {
30 MISS				panic(e)
31     			}
32     	
33     			return "Calm down, I know what I'm doing!"
34     		}
35     	
36     		// Any normal question.
37     		reStr = `^([[:alpha:]]|[[:digit:]]|[[:punct:]])([[:alpha:]]|[[:digit:]]|[[:punct:]]|[[:space:]])*[?]$`
38     		if m, e := regexp.MatchString(reStr, remark); m {
39     			if e != nil {
40 MISS				panic(e)
41     			}
42     	
43     			return "Sure."
44     		}
45     	
46     		// Letterless statement.
47     		reStr = `^([[:digit:]]|[[:punct:]|[[:space:]])+$`
48     		if m, e := regexp.MatchString(reStr, remark); m {
49     			if e != nil {
50 MISS				panic(e)
51     			}
52     	
53     			return "Whatever."
54     		}
55     	
56     		// Yelling statement.
57     		reStr = `^([[:upper:]]|[[:digit:]]|[[:punct:]|[[:space:]])+$`
58     		if m, e := regexp.MatchString(reStr, remark); m {
59     			if e != nil {
60 MISS				panic(e)
61     			}
62     	
63     			return "Whoa, chill out!"
64     		}
65     	
66     		// Silence
67     		reStr = `^[[:space:]]*$`
68     		if m, e := regexp.MatchString(reStr, remark); m {
69     			if e != nil {
70 MISS				panic(e)
71     			}
72     	
73     			return "Fine. Be that way!"
74     		}
75     	
76     		// Default response.
77     		return "Whatever."
78     	}


real	0m0.016s
user	0m0.013s
sys	0m0.020s

real	0m0.016s
user	0m0.013s
sys	0m0.020s


 ==============================================================================

Running: gotest -v -race -covermode=atomic ./...

=== RUN   TestHey
=== RUN   TestHey/stating_something
=== RUN   TestHey/shouting
=== RUN   TestHey/shouting_gibberish
=== RUN   TestHey/asking_a_question
=== RUN   TestHey/asking_a_numeric_question
=== RUN   TestHey/asking_gibberish
=== RUN   TestHey/talking_forcefully
=== RUN   TestHey/using_acronyms_in_regular_speech
=== RUN   TestHey/forceful_question
=== RUN   TestHey/shouting_numbers
=== RUN   TestHey/no_letters
=== RUN   TestHey/question_with_no_letters
=== RUN   TestHey/shouting_with_special_characters
=== RUN   TestHey/shouting_with_no_exclamation_mark
=== RUN   TestHey/statement_containing_question_mark
=== RUN   TestHey/non-letters_with_question
=== RUN   TestHey/prattling_on
=== RUN   TestHey/silence
=== RUN   TestHey/prolonged_silence
=== RUN   TestHey/alternate_silence
=== RUN   TestHey/multiple_line_question
=== RUN   TestHey/starting_with_whitespace
=== RUN   TestHey/ending_with_whitespace
=== RUN   TestHey/other_whitespace
=== RUN   TestHey/non-question_ending_with_whitespace
--- PASS: TestHey (0.01s)
    --- PASS: TestHey/stating_something (0.00s)
    --- PASS: TestHey/shouting (0.00s)
    --- PASS: TestHey/shouting_gibberish (0.00s)
    --- PASS: TestHey/asking_a_question (0.00s)
    --- PASS: TestHey/asking_a_numeric_question (0.00s)
    --- PASS: TestHey/asking_gibberish (0.00s)
    --- PASS: TestHey/talking_forcefully (0.00s)
    --- PASS: TestHey/using_acronyms_in_regular_speech (0.00s)
    --- PASS: TestHey/forceful_question (0.00s)
    --- PASS: TestHey/shouting_numbers (0.00s)
    --- PASS: TestHey/no_letters (0.00s)
    --- PASS: TestHey/question_with_no_letters (0.00s)
    --- PASS: TestHey/shouting_with_special_characters (0.00s)
    --- PASS: TestHey/shouting_with_no_exclamation_mark (0.00s)
    --- PASS: TestHey/statement_containing_question_mark (0.00s)
    --- PASS: TestHey/non-letters_with_question (0.00s)
    --- PASS: TestHey/prattling_on (0.00s)
    --- PASS: TestHey/silence (0.00s)
    --- PASS: TestHey/prolonged_silence (0.00s)
    --- PASS: TestHey/alternate_silence (0.00s)
    --- PASS: TestHey/multiple_line_question (0.00s)
    --- PASS: TestHey/starting_with_whitespace (0.00s)
    --- PASS: TestHey/ending_with_whitespace (0.00s)
    --- PASS: TestHey/other_whitespace (0.00s)
    --- PASS: TestHey/non-question_ending_with_whitespace (0.00s)
=== RUN   ExampleHey
--- PASS: ExampleHey (0.00s)
PASS
coverage: 81.8% of statements
ok  	bob	(cached)	coverage: 81.8% of statements

real	0m0.074s
user	0m0.121s
sys	0m0.112s


 ==============================================================================

Exit code: 0

real	0m0.370s
user	0m0.487s
sys	0m0.437s

real	0m0.372s
user	0m0.487s
sys	0m0.439s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

gotest -v --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: bob
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
BenchmarkHey
BenchmarkHey-8   	    2548	    398048 ns/op	  452062 B/op	    5947 allocs/op
PASS
ok  	bob	1.066s

real	0m1.202s
user	0m1.300s
sys	0m0.176s

===============================================================================

gotest -v -tags bonus
=== RUN   TestHey
=== RUN   TestHey/stating_something
=== RUN   TestHey/shouting
=== RUN   TestHey/shouting_gibberish
=== RUN   TestHey/asking_a_question
=== RUN   TestHey/asking_a_numeric_question
=== RUN   TestHey/asking_gibberish
=== RUN   TestHey/talking_forcefully
=== RUN   TestHey/using_acronyms_in_regular_speech
=== RUN   TestHey/forceful_question
=== RUN   TestHey/shouting_numbers
=== RUN   TestHey/no_letters
=== RUN   TestHey/question_with_no_letters
=== RUN   TestHey/shouting_with_special_characters
=== RUN   TestHey/shouting_with_no_exclamation_mark
=== RUN   TestHey/statement_containing_question_mark
=== RUN   TestHey/non-letters_with_question
=== RUN   TestHey/prattling_on
=== RUN   TestHey/silence
=== RUN   TestHey/prolonged_silence
=== RUN   TestHey/alternate_silence
=== RUN   TestHey/multiple_line_question
=== RUN   TestHey/starting_with_whitespace
=== RUN   TestHey/ending_with_whitespace
=== RUN   TestHey/other_whitespace
=== RUN   TestHey/non-question_ending_with_whitespace
--- PASS: TestHey (0.00s)
    --- PASS: TestHey/stating_something (0.00s)
    --- PASS: TestHey/shouting (0.00s)
    --- PASS: TestHey/shouting_gibberish (0.00s)
    --- PASS: TestHey/asking_a_question (0.00s)
    --- PASS: TestHey/asking_a_numeric_question (0.00s)
    --- PASS: TestHey/asking_gibberish (0.00s)
    --- PASS: TestHey/talking_forcefully (0.00s)
    --- PASS: TestHey/using_acronyms_in_regular_speech (0.00s)
    --- PASS: TestHey/forceful_question (0.00s)
    --- PASS: TestHey/shouting_numbers (0.00s)
    --- PASS: TestHey/no_letters (0.00s)
    --- PASS: TestHey/question_with_no_letters (0.00s)
    --- PASS: TestHey/shouting_with_special_characters (0.00s)
    --- PASS: TestHey/shouting_with_no_exclamation_mark (0.00s)
    --- PASS: TestHey/statement_containing_question_mark (0.00s)
    --- PASS: TestHey/non-letters_with_question (0.00s)
    --- PASS: TestHey/prattling_on (0.00s)
    --- PASS: TestHey/silence (0.00s)
    --- PASS: TestHey/prolonged_silence (0.00s)
    --- PASS: TestHey/alternate_silence (0.00s)
    --- PASS: TestHey/multiple_line_question (0.00s)
    --- PASS: TestHey/starting_with_whitespace (0.00s)
    --- PASS: TestHey/ending_with_whitespace (0.00s)
    --- PASS: TestHey/other_whitespace (0.00s)
    --- PASS: TestHey/non-question_ending_with_whitespace (0.00s)
=== RUN   ExampleHey
--- PASS: ExampleHey (0.00s)
PASS
ok  	bob	0.005s

real	0m0.132s
user	0m0.160s
sys	0m0.138s

===============================================================================

benchstat benchstat-old.txt benchstat-new.txt
benchstat-old.txt:5: missing iteration count
benchstat-new.txt:5: missing iteration count
goos: linux
goarch: amd64
pkg: bob
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
      │ benchstat-old.txt │        benchstat-new.txt        │
      │      sec/op       │    sec/op     vs base           │
Hey-8        427.7µ ± ∞ ¹   398.0µ ± ∞ ¹  ~ (p=1.000 n=1) ²
¹ need >= 6 samples for confidence interval at level 0.95
² need >= 4 samples to detect a difference at alpha level 0.05

      │ benchstat-old.txt │        benchstat-new.txt         │
      │       B/op        │     B/op       vs base           │
Hey-8       441.5Ki ± ∞ ¹   441.5Ki ± ∞ ¹  ~ (p=1.000 n=1) ²
¹ need >= 6 samples for confidence interval at level 0.95
² need >= 4 samples to detect a difference at alpha level 0.05

      │ benchstat-old.txt │        benchstat-new.txt        │
      │     allocs/op     │  allocs/op    vs base           │
Hey-8        5.947k ± ∞ ¹   5.947k ± ∞ ¹  ~ (p=1.000 n=1) ²
¹ need >= 6 samples for confidence interval at level 0.95
² all samples are equal

real	0m0.009s
user	0m0.002s
sys	0m0.003s

===============================================================================

gomarkdoc --output bob-doc.md

real	0m0.012s
user	0m0.010s
sys	0m0.004s

===============================================================================

go doc -all bob
package bob // import "bob"

Package bob is a lackadaisical teenage AI.

FUNCTIONS

func Hey(remark string) string
    Hey returns a response from the simulated teenager.


real	0m0.031s
user	0m0.022s
sys	0m0.028s


===============================================================================

