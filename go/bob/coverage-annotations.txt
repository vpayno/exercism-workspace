
10     	func Hey(remark string) string {
11     		// The extra whitespace just gets in the way.
12     		remark = strings.TrimSpace(remark)
13     	
14     		var reStr string
15     	
16     		// Question without letters.
17     		reStr = `^([[:punct:]|[[:space:]])+[?]$`
18     		if m, e := regexp.MatchString(reStr, remark); m {
19     			if e != nil {
20 MISS				panic(e)
21     			}
22     	
23     			return "Sure."
24     		}
25     	
26     		// Yelling a question.
27     		reStr = `^([[:upper:]]|[[:punct:]]|[[:space:]])+[?]$`
28     		if m, e := regexp.MatchString(reStr, remark); m {
29     			if e != nil {
30 MISS				panic(e)
31     			}
32     	
33     			return "Calm down, I know what I'm doing!"
34     		}
35     	
36     		// Any normal question.
37     		reStr = `^([[:alpha:]]|[[:digit:]]|[[:punct:]])([[:alpha:]]|[[:digit:]]|[[:punct:]]|[[:space:]])*[?]$`
38     		if m, e := regexp.MatchString(reStr, remark); m {
39     			if e != nil {
40 MISS				panic(e)
41     			}
42     	
43     			return "Sure."
44     		}
45     	
46     		// Letterless statement.
47     		reStr = `^([[:digit:]]|[[:punct:]|[[:space:]])+$`
48     		if m, e := regexp.MatchString(reStr, remark); m {
49     			if e != nil {
50 MISS				panic(e)
51     			}
52     	
53     			return "Whatever."
54     		}
55     	
56     		// Yelling statement.
57     		reStr = `^([[:upper:]]|[[:digit:]]|[[:punct:]|[[:space:]])+$`
58     		if m, e := regexp.MatchString(reStr, remark); m {
59     			if e != nil {
60 MISS				panic(e)
61     			}
62     	
63     			return "Whoa, chill out!"
64     		}
65     	
66     		// Silence
67     		reStr = `^[[:space:]]*$`
68     		if m, e := regexp.MatchString(reStr, remark); m {
69     			if e != nil {
70 MISS				panic(e)
71     			}
72     	
73     			return "Fine. Be that way!"
74     		}
75     	
76     		// Default response.
77     		return "Whatever."
78     	}

