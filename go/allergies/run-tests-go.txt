Running automated test file(s):

Go packages: allergies 


===============================================================================

Running: ../../.github/citools/go/go-lint-golangci-lint

Running GoLangCi-Lint

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.025s
user	0m0.012s
sys	0m0.024s


 ==============================================================================

Running: golangci-lint run --enable-all ./...

level=warning msg="[runner] The linter 'ifshort' is deprecated (since v1.48.0) due to: The repository of the linter has been deprecated by the owner. "
level=warning msg="[runner] The linter 'exhaustivestruct' is deprecated (since v1.46.0) due to: The owner seems to have abandoned the linter. Replaced by exhaustruct."
level=warning msg="[runner] The linter 'golint' is deprecated (since v1.41.0) due to: The repository of the linter has been archived by the owner. Replaced by revive."
level=warning msg="[runner] The linter 'interfacer' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. "
level=warning msg="[runner] The linter 'deadcode' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'nosnakecase' is deprecated (since v1.48.1) due to: The repository of the linter has been deprecated by the owner. Replaced by revive(var-naming)."
level=warning msg="[runner] The linter 'varcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'maligned' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. Replaced by govet 'fieldalignment'."
level=warning msg="[runner] The linter 'scopelint' is deprecated (since v1.39.0) due to: The repository of the linter has been deprecated by the owner. Replaced by exportloopref."
level=warning msg="[runner] The linter 'structcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
allergies_test.go:51:33: Comment should end in a period (godot)
// stringSet is a set of strings
                                ^
allergies_test.go:55:29: Comment should end in a period (godot)
// regardless of their order
                            ^
allergies_test.go:64:60: Comment should end in a period (godot)
// sliceSet creates a new stringSet from a slice of strings
                                                           ^
allergies_test.go:11:25: Using the variable on range scope `test` in function literal (scopelint)
			actual := AllergicTo(test.input.score, test.input.allergen)
			                     ^
allergies_test.go:12:17: Using the variable on range scope `test` in function literal (scopelint)
			if actual != test.expected {
			             ^
allergies_test.go:13:51: Using the variable on range scope `test` in function literal (scopelint)
				t.Errorf("AllergicTo(%d, %q) = %t, want: %t", test.input.score, test.input.allergen, actual, test.expected)
				                                              ^
allergies.go:82:41: unnecessary conversion (unconvert)
			allergies = append(allergies, allergy(flag).String())
			                                     ^
allergies_test.go:33:2: for statements should only be cuddled with assignments used in the iteration (wsl)
	for i := 0; i < b.N; i++ {
	^
allergies_test.go:44:2: for statements should only be cuddled with assignments used in the iteration (wsl)
	for i := 0; i < b.N; i++ {
	^
allergies.go:21:5: allergyNames is a global variable (gochecknoglobals)
var allergyNames = map[allergy]string{
    ^
cases_test.go:14:5: allergicToTests is a global variable (gochecknoglobals)
var allergicToTests = []struct {
    ^
cases_test.go:342:5: listTests is a global variable (gochecknoglobals)
var listTests = []struct {
    ^
allergies_test.go:8:1: Function TestAllergicTo missing the call to method parallel (paralleltest)
func TestAllergicTo(t *testing.T) {
^
allergies_test.go:9:2: Range statement for test TestAllergicTo missing the call to method parallel in test Run (paralleltest)
	for _, test := range allergicToTests {
	^
allergies_test.go:19:1: Function TestAllergies missing the call to method parallel (paralleltest)
func TestAllergies(t *testing.T) {
^
allergies_test.go:20:2: Range statement for test TestAllergies missing the call to method parallel in test Run (paralleltest)
	for _, test := range listTests {
	^
allergies_examples_test.go:1:9: package should be `allergies_test` instead of `allergies` (testpackage)
package allergies
        ^
allergies_test.go:1:9: package should be `allergies_test` instead of `allergies` (testpackage)
package allergies
        ^
cases_test.go:1:9: package should be `allergies_test` instead of `allergies` (testpackage)
package allergies
        ^

real	0m0.559s
user	0m0.753s
sys	0m0.553s


 ==============================================================================

Exit code: -1

real	0m0.595s
user	0m0.771s
sys	0m0.588s

real	0m0.598s
user	0m0.773s
sys	0m0.588s

===============================================================================

Running: ../../.github/citools/go/go-lint-revive

Running Go Lint Revive

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.017s
user	0m0.007s
sys	0m0.015s


 ==============================================================================

Running: revive -formatter=stylish ./...


real	0m0.053s
user	0m0.024s
sys	0m0.045s


 ==============================================================================

Exit code: 0

real	0m0.079s
user	0m0.037s
sys	0m0.065s

real	0m0.081s
user	0m0.039s
sys	0m0.066s

===============================================================================

Running: ../../.github/citools/go/go-lint-ineffassign
../run-tests: line 41: .github/citools/go/go-lint-ineffassign: No such file or directory

real	0m0.001s
user	0m0.001s
sys	0m0.000s

===============================================================================

Running: ../../.github/citools/go/go-lint-go-consistent

Running Go go-consistent

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.024s
user	0m0.013s
sys	0m0.019s


 ==============================================================================

Running: go-consistent -v ./...

	info: check "./."
internal error: package "sort" without types was imported from "allergies"

real	0m0.099s
user	0m0.127s
sys	0m0.115s


 ==============================================================================

Exit code: -1

real	0m0.139s
user	0m0.152s
sys	0m0.144s

real	0m0.140s
user	0m0.153s
sys	0m0.144s

===============================================================================

Running: ../../.github/citools/go/go-lint-staticcheck

Running Go StaticCheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.019s
user	0m0.013s
sys	0m0.014s


 ==============================================================================

Running: staticcheck -checks=all ./...


real	0m0.175s
user	0m0.217s
sys	0m0.121s


 ==============================================================================

Exit code: 0

real	0m0.203s
user	0m0.235s
sys	0m0.142s

real	0m0.205s
user	0m0.237s
sys	0m0.142s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocritic

Running Go gocritic

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.020s
user	0m0.008s
sys	0m0.017s


 ==============================================================================

Running: gocritic check -enableAll ./...

./allergies.go:59:1: paramTypeCombine: func(flags allergy, flag allergy) bool could be replaced with func(flags, flag allergy) bool

real	0m0.884s
user	0m2.051s
sys	0m0.300s


 ==============================================================================

Exit code: -1

real	0m0.920s
user	0m2.064s
sys	0m0.332s

real	0m0.922s
user	0m2.065s
sys	0m0.333s

===============================================================================

Running: ../../.github/citools/go/go-lint-go_vet

Running Go Vet

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.019s
user	0m0.012s
sys	0m0.014s


 ==============================================================================

Running: go vet ./...


real	0m0.083s
user	0m0.124s
sys	0m0.100s


 ==============================================================================

Exit code: 0

real	0m0.113s
user	0m0.145s
sys	0m0.121s

real	0m0.115s
user	0m0.146s
sys	0m0.121s

===============================================================================

Running: ../../.github/citools/go/go-fixer-go_fix

Running go fix

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.019s
user	0m0.007s
sys	0m0.017s


 ==============================================================================

Running: go fix ./...


real	0m0.032s
user	0m0.023s
sys	0m0.018s


 ==============================================================================

Exit code: 0

real	0m0.063s
user	0m0.034s
sys	0m0.047s

real	0m0.065s
user	0m0.035s
sys	0m0.048s

===============================================================================

Running: ../../.github/citools/go/go-lint-errcheck

Running Go errcheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.034s
user	0m0.020s
sys	0m0.026s


 ==============================================================================

Running: errcheck ./...


real	0m0.455s
user	0m1.383s
sys	0m0.274s


 ==============================================================================

Exit code: 0

real	0m0.509s
user	0m1.409s
sys	0m0.320s

real	0m0.512s
user	0m1.411s
sys	0m0.321s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocyclo

Running Go gocyclo

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.025s
user	0m0.014s
sys	0m0.019s


 ==============================================================================

Running: gocyclo .

5 allergies Allergies allergies.go:72:1
4 allergies BenchmarkAllergies allergies_test.go:40:1
4 allergies BenchmarkAllergicTo allergies_test.go:29:1
3 allergies TestAllergies allergies_test.go:19:1
3 allergies TestAllergicTo allergies_test.go:8:1
3 allergies AllergicTo allergies.go:59:1
3 allergies (allergy).Bits allergies.go:50:1
3 allergies (allergy).Uint allergies.go:42:1
2 allergies sliceSet allergies_test.go:65:1
2 allergies sameSliceElements allergies_test.go:56:1
2 allergies ExampleAllergies allergies_examples_test.go:32:1
2 allergies ExampleAllergicTo allergies_examples_test.go:5:1
2 allergies (allergy).String allergies.go:32:1

real	0m0.003s
user	0m0.002s
sys	0m0.002s


 ==============================================================================

Exit code: 0

real	0m0.041s
user	0m0.025s
sys	0m0.029s

real	0m0.043s
user	0m0.025s
sys	0m0.031s

===============================================================================

Running: ../../.github/citools/go/go-lint-misspell

Running Go misspell

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: misspell .


real	0m0.047s
user	0m0.053s
sys	0m0.027s


 ==============================================================================

Exit code: 0

real	0m0.067s
user	0m0.065s
sys	0m0.040s

real	0m0.070s
user	0m0.066s
sys	0m0.042s

===============================================================================

Running: ../../.github/citools/go/go-lint-gosec

Running Go GoSec

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.028s
user	0m0.010s
sys	0m0.028s


 ==============================================================================

Running: gosec ./...

[gosec] 2023/09/07 00:20:07 Including rules: default
[gosec] 2023/09/07 00:20:07 Excluding rules: default
[gosec] 2023/09/07 00:20:07 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/allergies
[gosec] 2023/09/07 00:20:07 Checking package: allergies
[gosec] 2023/09/07 00:20:07 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/allergies/allergies.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 1
  Lines  : 97
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.104s
user	0m0.115s
sys	0m0.076s


 ==============================================================================

Exit code: 0

real	0m0.152s
user	0m0.137s
sys	0m0.119s

real	0m0.156s
user	0m0.138s
sys	0m0.122s

===============================================================================

Running: ../../.github/citools/go/go-test-cover-report

Running Go Test, Coverage & Reports

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.019s
user	0m0.006s
sys	0m0.018s


 ==============================================================================

Running: gotest -v -covermode=count -coverprofile coverage.out ./...

=== RUN   TestAllergicTo
=== RUN   TestAllergicTo/not_allergic_to_anything
=== RUN   TestAllergicTo/allergic_only_to_eggs
=== RUN   TestAllergicTo/allergic_to_eggs_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_eggs
=== RUN   TestAllergicTo/allergic_to_everything
=== RUN   TestAllergicTo/not_allergic_to_anything#01
=== RUN   TestAllergicTo/allergic_only_to_peanuts
=== RUN   TestAllergicTo/allergic_to_peanuts_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_peanuts
=== RUN   TestAllergicTo/allergic_to_everything#01
=== RUN   TestAllergicTo/not_allergic_to_anything#02
=== RUN   TestAllergicTo/allergic_only_to_shellfish
=== RUN   TestAllergicTo/allergic_to_shellfish_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_shellfish
=== RUN   TestAllergicTo/allergic_to_everything#02
=== RUN   TestAllergicTo/not_allergic_to_anything#03
=== RUN   TestAllergicTo/allergic_only_to_strawberries
=== RUN   TestAllergicTo/allergic_to_strawberries_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_strawberries
=== RUN   TestAllergicTo/allergic_to_everything#03
=== RUN   TestAllergicTo/not_allergic_to_anything#04
=== RUN   TestAllergicTo/allergic_only_to_tomatoes
=== RUN   TestAllergicTo/allergic_to_tomatoes_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_tomatoes
=== RUN   TestAllergicTo/allergic_to_everything#04
=== RUN   TestAllergicTo/not_allergic_to_anything#05
=== RUN   TestAllergicTo/allergic_only_to_chocolate
=== RUN   TestAllergicTo/allergic_to_chocolate_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_chocolate
=== RUN   TestAllergicTo/allergic_to_everything#05
=== RUN   TestAllergicTo/not_allergic_to_anything#06
=== RUN   TestAllergicTo/allergic_only_to_pollen
=== RUN   TestAllergicTo/allergic_to_pollen_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_pollen
=== RUN   TestAllergicTo/allergic_to_everything#06
=== RUN   TestAllergicTo/not_allergic_to_anything#07
=== RUN   TestAllergicTo/allergic_only_to_cats
=== RUN   TestAllergicTo/allergic_to_cats_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_cats
=== RUN   TestAllergicTo/allergic_to_everything#07
--- PASS: TestAllergicTo (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_eggs (0.00s)
    --- PASS: TestAllergicTo/allergic_to_eggs_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_eggs (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#01 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_peanuts (0.00s)
    --- PASS: TestAllergicTo/allergic_to_peanuts_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_peanuts (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#01 (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#02 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_shellfish (0.00s)
    --- PASS: TestAllergicTo/allergic_to_shellfish_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_shellfish (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#02 (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#03 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_strawberries (0.00s)
    --- PASS: TestAllergicTo/allergic_to_strawberries_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_strawberries (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#03 (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#04 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_tomatoes (0.00s)
    --- PASS: TestAllergicTo/allergic_to_tomatoes_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_tomatoes (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#04 (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#05 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_chocolate (0.00s)
    --- PASS: TestAllergicTo/allergic_to_chocolate_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_chocolate (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#05 (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#06 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_pollen (0.00s)
    --- PASS: TestAllergicTo/allergic_to_pollen_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_pollen (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#06 (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#07 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_cats (0.00s)
    --- PASS: TestAllergicTo/allergic_to_cats_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_cats (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#07 (0.00s)
=== RUN   TestAllergies
=== RUN   TestAllergies/no_allergies
=== RUN   TestAllergies/just_eggs
=== RUN   TestAllergies/just_peanuts
=== RUN   TestAllergies/just_strawberries
=== RUN   TestAllergies/eggs_and_peanuts
=== RUN   TestAllergies/more_than_eggs_but_not_peanuts
=== RUN   TestAllergies/lots_of_stuff
=== RUN   TestAllergies/everything
=== RUN   TestAllergies/no_allergen_score_parts
=== RUN   TestAllergies/no_allergen_score_parts_without_highest_valid_score
--- PASS: TestAllergies (0.00s)
    --- PASS: TestAllergies/no_allergies (0.00s)
    --- PASS: TestAllergies/just_eggs (0.00s)
    --- PASS: TestAllergies/just_peanuts (0.00s)
    --- PASS: TestAllergies/just_strawberries (0.00s)
    --- PASS: TestAllergies/eggs_and_peanuts (0.00s)
    --- PASS: TestAllergies/more_than_eggs_but_not_peanuts (0.00s)
    --- PASS: TestAllergies/lots_of_stuff (0.00s)
    --- PASS: TestAllergies/everything (0.00s)
    --- PASS: TestAllergies/no_allergen_score_parts (0.00s)
    --- PASS: TestAllergies/no_allergen_score_parts_without_highest_valid_score (0.00s)
=== RUN   ExampleAllergicTo
--- PASS: ExampleAllergicTo (0.00s)
=== RUN   ExampleAllergies
--- PASS: ExampleAllergies (0.00s)
PASS
coverage: 81.5% of statements
ok  	allergies	0.003s	coverage: 81.5% of statements

real	0m0.178s
user	0m0.288s
sys	0m0.157s


 ==============================================================================

Running: go tool cover -func=coverage.out

allergies/allergies.go:32:	String		75.0%
allergies/allergies.go:42:	Uint		0.0%
allergies/allergies.go:50:	Bits		66.7%
allergies/allergies.go:59:	AllergicTo	100.0%
allergies/allergies.go:72:	Allergies	100.0%
total:				(statements)	81.5%

real	0m0.055s
user	0m0.027s
sys	0m0.063s


 ==============================================================================

Running: go tool cover -html coverage.out -o coverage.html


real	0m0.046s
user	0m0.029s
sys	0m0.061s


 ==============================================================================

Running: cover_annotate

Running: gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

50     	func (a allergy) Bits() allergy {
51     		if a < 1 || a > 255 {
52 MISS			return 0
53     		}
54     	
55     		return a
56     	}


32     	func (a allergy) String() string {
33     		name, ok := allergyNames[a]
34     	
35     		if !ok {
36 MISS			return ""
37     		}
38     	
39     		return name
40     	}


42     	func (a allergy) Uint() uint {
43 MISS		if a < 1 || a > 255 {
44 MISS			return 0
45     		}
46     	
47 MISS		return uint(a)
48     	}


real	0m0.015s
user	0m0.007s
sys	0m0.013s

real	0m0.015s
user	0m0.008s
sys	0m0.013s


 ==============================================================================

Running: gotest -v -race -covermode=atomic ./...

=== RUN   TestAllergicTo
=== RUN   TestAllergicTo/not_allergic_to_anything
=== RUN   TestAllergicTo/allergic_only_to_eggs
=== RUN   TestAllergicTo/allergic_to_eggs_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_eggs
=== RUN   TestAllergicTo/allergic_to_everything
=== RUN   TestAllergicTo/not_allergic_to_anything#01
=== RUN   TestAllergicTo/allergic_only_to_peanuts
=== RUN   TestAllergicTo/allergic_to_peanuts_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_peanuts
=== RUN   TestAllergicTo/allergic_to_everything#01
=== RUN   TestAllergicTo/not_allergic_to_anything#02
=== RUN   TestAllergicTo/allergic_only_to_shellfish
=== RUN   TestAllergicTo/allergic_to_shellfish_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_shellfish
=== RUN   TestAllergicTo/allergic_to_everything#02
=== RUN   TestAllergicTo/not_allergic_to_anything#03
=== RUN   TestAllergicTo/allergic_only_to_strawberries
=== RUN   TestAllergicTo/allergic_to_strawberries_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_strawberries
=== RUN   TestAllergicTo/allergic_to_everything#03
=== RUN   TestAllergicTo/not_allergic_to_anything#04
=== RUN   TestAllergicTo/allergic_only_to_tomatoes
=== RUN   TestAllergicTo/allergic_to_tomatoes_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_tomatoes
=== RUN   TestAllergicTo/allergic_to_everything#04
=== RUN   TestAllergicTo/not_allergic_to_anything#05
=== RUN   TestAllergicTo/allergic_only_to_chocolate
=== RUN   TestAllergicTo/allergic_to_chocolate_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_chocolate
=== RUN   TestAllergicTo/allergic_to_everything#05
=== RUN   TestAllergicTo/not_allergic_to_anything#06
=== RUN   TestAllergicTo/allergic_only_to_pollen
=== RUN   TestAllergicTo/allergic_to_pollen_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_pollen
=== RUN   TestAllergicTo/allergic_to_everything#06
=== RUN   TestAllergicTo/not_allergic_to_anything#07
=== RUN   TestAllergicTo/allergic_only_to_cats
=== RUN   TestAllergicTo/allergic_to_cats_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_cats
=== RUN   TestAllergicTo/allergic_to_everything#07
--- PASS: TestAllergicTo (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_eggs (0.00s)
    --- PASS: TestAllergicTo/allergic_to_eggs_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_eggs (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#01 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_peanuts (0.00s)
    --- PASS: TestAllergicTo/allergic_to_peanuts_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_peanuts (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#01 (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#02 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_shellfish (0.00s)
    --- PASS: TestAllergicTo/allergic_to_shellfish_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_shellfish (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#02 (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#03 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_strawberries (0.00s)
    --- PASS: TestAllergicTo/allergic_to_strawberries_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_strawberries (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#03 (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#04 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_tomatoes (0.00s)
    --- PASS: TestAllergicTo/allergic_to_tomatoes_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_tomatoes (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#04 (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#05 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_chocolate (0.00s)
    --- PASS: TestAllergicTo/allergic_to_chocolate_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_chocolate (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#05 (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#06 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_pollen (0.00s)
    --- PASS: TestAllergicTo/allergic_to_pollen_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_pollen (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#06 (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#07 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_cats (0.00s)
    --- PASS: TestAllergicTo/allergic_to_cats_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_cats (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#07 (0.00s)
=== RUN   TestAllergies
=== RUN   TestAllergies/no_allergies
=== RUN   TestAllergies/just_eggs
=== RUN   TestAllergies/just_peanuts
=== RUN   TestAllergies/just_strawberries
=== RUN   TestAllergies/eggs_and_peanuts
=== RUN   TestAllergies/more_than_eggs_but_not_peanuts
=== RUN   TestAllergies/lots_of_stuff
=== RUN   TestAllergies/everything
=== RUN   TestAllergies/no_allergen_score_parts
=== RUN   TestAllergies/no_allergen_score_parts_without_highest_valid_score
--- PASS: TestAllergies (0.00s)
    --- PASS: TestAllergies/no_allergies (0.00s)
    --- PASS: TestAllergies/just_eggs (0.00s)
    --- PASS: TestAllergies/just_peanuts (0.00s)
    --- PASS: TestAllergies/just_strawberries (0.00s)
    --- PASS: TestAllergies/eggs_and_peanuts (0.00s)
    --- PASS: TestAllergies/more_than_eggs_but_not_peanuts (0.00s)
    --- PASS: TestAllergies/lots_of_stuff (0.00s)
    --- PASS: TestAllergies/everything (0.00s)
    --- PASS: TestAllergies/no_allergen_score_parts (0.00s)
    --- PASS: TestAllergies/no_allergen_score_parts_without_highest_valid_score (0.00s)
=== RUN   ExampleAllergicTo
--- PASS: ExampleAllergicTo (0.00s)
=== RUN   ExampleAllergies
--- PASS: ExampleAllergies (0.00s)
PASS
coverage: 81.5% of statements
ok  	allergies	1.017s	coverage: 81.5% of statements

real	0m1.239s
user	0m0.289s
sys	0m0.153s


 ==============================================================================

Exit code: 0

real	0m1.564s
user	0m0.650s
sys	0m0.477s

real	0m1.566s
user	0m0.651s
sys	0m0.478s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

gotest -v --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: allergies
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
BenchmarkAllergicTo
BenchmarkAllergicTo-8   	32961602	        31.14 ns/op	       0 B/op	       0 allocs/op
BenchmarkAllergies
BenchmarkAllergies-8    	   63153	     16968 ns/op	    4608 B/op	     130 allocs/op
PASS
ok  	allergies	2.334s

real	0m2.494s
user	0m2.557s
sys	0m0.145s

===============================================================================

gotest -v -tags bonus
=== RUN   TestAllergicTo
=== RUN   TestAllergicTo/not_allergic_to_anything
=== RUN   TestAllergicTo/allergic_only_to_eggs
=== RUN   TestAllergicTo/allergic_to_eggs_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_eggs
=== RUN   TestAllergicTo/allergic_to_everything
=== RUN   TestAllergicTo/not_allergic_to_anything#01
=== RUN   TestAllergicTo/allergic_only_to_peanuts
=== RUN   TestAllergicTo/allergic_to_peanuts_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_peanuts
=== RUN   TestAllergicTo/allergic_to_everything#01
=== RUN   TestAllergicTo/not_allergic_to_anything#02
=== RUN   TestAllergicTo/allergic_only_to_shellfish
=== RUN   TestAllergicTo/allergic_to_shellfish_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_shellfish
=== RUN   TestAllergicTo/allergic_to_everything#02
=== RUN   TestAllergicTo/not_allergic_to_anything#03
=== RUN   TestAllergicTo/allergic_only_to_strawberries
=== RUN   TestAllergicTo/allergic_to_strawberries_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_strawberries
=== RUN   TestAllergicTo/allergic_to_everything#03
=== RUN   TestAllergicTo/not_allergic_to_anything#04
=== RUN   TestAllergicTo/allergic_only_to_tomatoes
=== RUN   TestAllergicTo/allergic_to_tomatoes_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_tomatoes
=== RUN   TestAllergicTo/allergic_to_everything#04
=== RUN   TestAllergicTo/not_allergic_to_anything#05
=== RUN   TestAllergicTo/allergic_only_to_chocolate
=== RUN   TestAllergicTo/allergic_to_chocolate_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_chocolate
=== RUN   TestAllergicTo/allergic_to_everything#05
=== RUN   TestAllergicTo/not_allergic_to_anything#06
=== RUN   TestAllergicTo/allergic_only_to_pollen
=== RUN   TestAllergicTo/allergic_to_pollen_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_pollen
=== RUN   TestAllergicTo/allergic_to_everything#06
=== RUN   TestAllergicTo/not_allergic_to_anything#07
=== RUN   TestAllergicTo/allergic_only_to_cats
=== RUN   TestAllergicTo/allergic_to_cats_and_something_else
=== RUN   TestAllergicTo/allergic_to_something,_but_not_cats
=== RUN   TestAllergicTo/allergic_to_everything#07
--- PASS: TestAllergicTo (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_eggs (0.00s)
    --- PASS: TestAllergicTo/allergic_to_eggs_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_eggs (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#01 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_peanuts (0.00s)
    --- PASS: TestAllergicTo/allergic_to_peanuts_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_peanuts (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#01 (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#02 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_shellfish (0.00s)
    --- PASS: TestAllergicTo/allergic_to_shellfish_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_shellfish (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#02 (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#03 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_strawberries (0.00s)
    --- PASS: TestAllergicTo/allergic_to_strawberries_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_strawberries (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#03 (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#04 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_tomatoes (0.00s)
    --- PASS: TestAllergicTo/allergic_to_tomatoes_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_tomatoes (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#04 (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#05 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_chocolate (0.00s)
    --- PASS: TestAllergicTo/allergic_to_chocolate_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_chocolate (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#05 (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#06 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_pollen (0.00s)
    --- PASS: TestAllergicTo/allergic_to_pollen_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_pollen (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#06 (0.00s)
    --- PASS: TestAllergicTo/not_allergic_to_anything#07 (0.00s)
    --- PASS: TestAllergicTo/allergic_only_to_cats (0.00s)
    --- PASS: TestAllergicTo/allergic_to_cats_and_something_else (0.00s)
    --- PASS: TestAllergicTo/allergic_to_something,_but_not_cats (0.00s)
    --- PASS: TestAllergicTo/allergic_to_everything#07 (0.00s)
=== RUN   TestAllergies
=== RUN   TestAllergies/no_allergies
=== RUN   TestAllergies/just_eggs
=== RUN   TestAllergies/just_peanuts
=== RUN   TestAllergies/just_strawberries
=== RUN   TestAllergies/eggs_and_peanuts
=== RUN   TestAllergies/more_than_eggs_but_not_peanuts
=== RUN   TestAllergies/lots_of_stuff
=== RUN   TestAllergies/everything
=== RUN   TestAllergies/no_allergen_score_parts
=== RUN   TestAllergies/no_allergen_score_parts_without_highest_valid_score
--- PASS: TestAllergies (0.00s)
    --- PASS: TestAllergies/no_allergies (0.00s)
    --- PASS: TestAllergies/just_eggs (0.00s)
    --- PASS: TestAllergies/just_peanuts (0.00s)
    --- PASS: TestAllergies/just_strawberries (0.00s)
    --- PASS: TestAllergies/eggs_and_peanuts (0.00s)
    --- PASS: TestAllergies/more_than_eggs_but_not_peanuts (0.00s)
    --- PASS: TestAllergies/lots_of_stuff (0.00s)
    --- PASS: TestAllergies/everything (0.00s)
    --- PASS: TestAllergies/no_allergen_score_parts (0.00s)
    --- PASS: TestAllergies/no_allergen_score_parts_without_highest_valid_score (0.00s)
=== RUN   ExampleAllergicTo
--- PASS: ExampleAllergicTo (0.00s)
=== RUN   ExampleAllergies
--- PASS: ExampleAllergies (0.00s)
PASS
ok  	allergies	0.002s

real	0m0.124s
user	0m0.177s
sys	0m0.133s

===============================================================================

benchstat benchstat-old.txt benchstat-new.txt
benchstat-old.txt:5: missing iteration count
benchstat-old.txt:7: missing iteration count
benchstat-new.txt:5: missing iteration count
benchstat-new.txt:7: missing iteration count
goos: linux
goarch: amd64
pkg: allergies
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
              │ benchstat-old.txt │  benchstat-new.txt  │
              │      sec/op       │    sec/op     vs base   │
AllergicTo-16        28.04n ± ∞ ¹
Allergies-16         17.79µ ± ∞ ¹
AllergicTo-8                        31.14n ± ∞ ¹
Allergies-8                         16.97µ ± ∞ ¹
geomean              706.3n         726.9n        ? ² ³
¹ need >= 6 samples for confidence interval at level 0.95
² benchmark set differs from baseline; geomeans may not be comparable
³ ratios must be >0 to compute geomean

              │ benchstat-old.txt │   benchstat-new.txt    │
              │       B/op        │     B/op       vs base │
AllergicTo-16         0.000 ± ∞ ¹
Allergies-16        4.500Ki ± ∞ ¹
AllergicTo-8                          0.000 ± ∞ ¹
Allergies-8                         4.500Ki ± ∞ ¹
geomean                         ²                  ? ³ ² ⁴
¹ need >= 6 samples for confidence interval at level 0.95
² summaries must be >0 to compute geomean
³ benchmark set differs from baseline; geomeans may not be comparable
⁴ ratios must be >0 to compute geomean

              │ benchstat-old.txt │  benchstat-new.txt   │
              │     allocs/op     │  allocs/op   vs base │
AllergicTo-16         0.000 ± ∞ ¹
Allergies-16          130.0 ± ∞ ¹
AllergicTo-8                        0.000 ± ∞ ¹
Allergies-8                         130.0 ± ∞ ¹
geomean                         ²                ? ³ ² ⁴
¹ need >= 6 samples for confidence interval at level 0.95
² summaries must be >0 to compute geomean
³ benchmark set differs from baseline; geomeans may not be comparable
⁴ ratios must be >0 to compute geomean

real	0m0.003s
user	0m0.000s
sys	0m0.003s

===============================================================================

gomarkdoc --output allergies-doc.md

real	0m0.009s
user	0m0.005s
sys	0m0.005s

===============================================================================

go doc -all allergies
package allergies // import "allergies"

Package allergies is used to identify a patient's allergies.

FUNCTIONS

func AllergicTo(flags allergy, flag allergy) bool
    AllergicTo returns true or false to each allergy test.

func Allergies(flags allergy) []string
    Allergies returns a list of allergies the patient is allergic to.


real	0m0.036s
user	0m0.016s
sys	0m0.031s


===============================================================================

