
48     	func Valid(id string) bool {
49     		var sum int
50     	
51     		dPrint("id", id)
52     	
53     		// 0. remove spaces from the string
54     		id = strings.ReplaceAll(id, " ", "")
55     	
56     		// 1. is the string is valid?
57     		if !isValidInput(id) {
58     			return false
59     		}
60     	
61     		dPrint("id", id)
62     	
63     		di := reverse(id)
64     	
65     		dPrint("di", di)
66     	
67     		// 2. reverse the string
68     		// 3. double numbers with index 1, 3, 5, ...
69     		// 4. if the doubled number is > 9, subtract 9 from it
70     		// 5. sum the numbers.
71     		for i, r := range di {
72     			dPrint("r", string(r))
73     			s := string(r)
74     			n, e := strconv.Atoi(s)
75     	
76     			if e != nil {
77 MISS				panic(e)
78     			}
79     	
80     			if i%2 != 0 {
81     				n *= 2
82     	
83     				if n > 9 {
84     					n -= 9
85     				}
86     			}
87     	
88     			dPrint("n", n)
89     	
90     			sum += n
91     		}
92     	
93     		// 6. if the sum is divisible by 10, it's valid
94     		return sum%10 == 0
95     	}


15     	func dPrint(s string, a ...interface{}) {
16     		if debug {
17 MISS			fmt.Println("DEBUG:", s, "=", a)
18     		}
19     	}


33     	func isValidInput(s string) bool {
34     		if len(s) <= 1 {
35     			return false
36     		}
37     	
38     		m, e := regexp.MatchString(`^[0-9]+$`, s)
39     	
40     		if e != nil {
41 MISS			panic(e)
42     		}
43     	
44     		return m
45     	}

