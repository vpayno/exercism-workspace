Running automated test file(s):

Go packages: clock 


===============================================================================

Running: ../../.github/citools/go/go-lint-golangci-lint

Running GoLangCi-Lint

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.042s
user	0m0.035s
sys	0m0.052s


 ==============================================================================

Running: golangci-lint run --enable-all ./...

level=warning msg="[runner] The linter 'nosnakecase' is deprecated (since v1.48.1) due to: The repository of the linter has been deprecated by the owner. Replaced by revive(var-naming)."
level=warning msg="[runner] The linter 'structcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'scopelint' is deprecated (since v1.39.0) due to: The repository of the linter has been deprecated by the owner. Replaced by exportloopref."
level=warning msg="[runner] The linter 'golint' is deprecated (since v1.41.0) due to: The repository of the linter has been archived by the owner. Replaced by revive."
level=warning msg="[runner] The linter 'interfacer' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. "
level=warning msg="[runner] The linter 'varcheck' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
level=warning msg="[runner] The linter 'maligned' is deprecated (since v1.38.0) due to: The repository of the linter has been archived by the owner. Replaced by govet 'fieldalignment'."
level=warning msg="[runner] The linter 'exhaustivestruct' is deprecated (since v1.46.0) due to: The owner seems to have abandoned the linter. Replaced by exhaustruct."
level=warning msg="[runner] The linter 'ifshort' is deprecated (since v1.48.0) due to: The repository of the linter has been deprecated by the owner. "
level=warning msg="[runner] The linter 'deadcode' is deprecated (since v1.49.0) due to: The owner seems to have abandoned the linter. Replaced by unused."
cases_test.go:261:35: Comment should end in a period (godot)
// Compare two clocks for equality
                                  ^
cases_test.go:268: File is not `gofumpt`-ed (gofumpt)
}{{
	description: "clocks with same time",
	c1:          hm{15, 37},
	c2:          hm{15, 37},
	expected:    true,
},
clock.go:12: line is 127 characters (lll)
// normalize returns hours and minutes after the hours have been normalized (it's late, that's the best name I could think of).
clock.go:23:14: var-declaration: should omit type int from declaration of var minutes; it will be inferred from the right-hand side (revive)
	var minutes int = h*60 + m
	            ^
clock_examples_test.go:7:11: var-declaration: should omit type Clock from declaration of var clock; it will be inferred from the right-hand side (revive)
var clock Clock = Clock{
          ^
clock_test.go:13:21: Using the variable on range scope `tc` in function literal (scopelint)
			if actual := New(tc.h, tc.m); tc.expected != actual.String() {
			                 ^
clock_test.go:14:43: Using the variable on range scope `tc` in function literal (scopelint)
				t.Errorf("New(%d, %d) = %q, want %q", tc.h, tc.m, actual, tc.expected)
				                                      ^
clock_test.go:23:21: Using the variable on range scope `tc` in function literal (scopelint)
			if actual := New(tc.h, tc.m).Add(tc.addedValue); tc.expected != actual.String() {
			                 ^
clock_test.go:99:2: assignments should only be cuddled with other assignments (wsl)
	c := New(12, 0)
	^
clock_test.go:100:2: only cuddled expressions if assigning variable or using from line above (wsl)
	b.ResetTimer()
	^
clock_test.go:101:2: only one cuddle assignment allowed before for statement (wsl)
	for i := 0; i < b.N; i++ {
	^
clock_test.go:112:2: assignments should only be cuddled with other assignments (wsl)
	c := New(12, 0)
	^
clock_test.go:113:2: only cuddled expressions if assigning variable or using from line above (wsl)
	b.ResetTimer()
	^
clock_test.go:114:2: only one cuddle assignment allowed before for statement (wsl)
	for i := 0; i < b.N; i++ {
	^
clock_test.go:125:2: for statements should only be cuddled with assignments used in the iteration (wsl)
	for i := 0; i < b.N; i++ {
	^
cases_test.go:8:5: timeTestCases is a global variable (gochecknoglobals)
var timeTestCases = []struct {
    ^
cases_test.go:135:5: addTestCases is a global variable (gochecknoglobals)
var addTestCases = []struct {
    ^
cases_test.go:198:5: subtractTestCases is a global variable (gochecknoglobals)
var subtractTestCases = []struct {
    ^
cases_test.go:264:5: equalTestCases is a global variable (gochecknoglobals)
var equalTestCases = []struct {
    ^
clock.go:25:15: mnd: Magic number: 60, in <condition> detected (gomnd)
	if minutes > 60 {
	             ^
clock.go:26:24: mnd: Magic number: 24, in <operation> detected (gomnd)
		h = (minutes / 60) % 24
		                     ^
clock.go:27:17: mnd: Magic number: 60, in <operation> detected (gomnd)
		m = minutes % 60
		              ^
clock_examples_test.go:12:6: ExampleClock_Add contains underscore. You should use mixedCap or MixedCap. (nosnakecase)
func ExampleClock_Add() {
     ^
clock_examples_test.go:20:6: ExampleClock_Subtract contains underscore. You should use mixedCap or MixedCap. (nosnakecase)
func ExampleClock_Subtract() {
     ^
clock_test.go:10:1: Function TestCreateClock missing the call to method parallel (paralleltest)
func TestCreateClock(t *testing.T) {
^
clock_test.go:11:2: Range statement for test TestCreateClock missing the call to method parallel in test Run (paralleltest)
	for _, tc := range timeTestCases {
	^
clock_test.go:20:1: Function TestAddMinutes missing the call to method parallel (paralleltest)
func TestAddMinutes(t *testing.T) {
^
clock_test.go:21:2: Range statement for test TestAddMinutes missing the call to method parallel in test Run (paralleltest)
	for _, tc := range addTestCases {
	^
clock_test.go:30:1: Function TestSubtractMinutes missing the call to method parallel (paralleltest)
func TestSubtractMinutes(t *testing.T) {
^
clock_test.go:31:2: Range statement for test TestSubtractMinutes missing the call to method parallel in test Run (paralleltest)
	for _, tc := range subtractTestCases {
	^
clock_test.go:40:1: Function TestAddMinutesStringless missing the call to method parallel (paralleltest)
func TestAddMinutesStringless(t *testing.T) {
^
clock_test.go:41:2: Range statement for test TestAddMinutesStringless missing the call to method parallel in test Run (paralleltest)
	for _, tc := range addTestCases {
	^
clock_test.go:59:1: Function TestSubtractMinutesStringless missing the call to method parallel (paralleltest)
func TestSubtractMinutesStringless(t *testing.T) {
^
clock_test.go:60:2: Range statement for test TestSubtractMinutesStringless missing the call to method parallel in test Run (paralleltest)
	for _, tc := range subtractTestCases {
	^
clock_test.go:78:1: Function TestCompareClocks missing the call to method parallel (paralleltest)
func TestCompareClocks(t *testing.T) {
^
clock_test.go:79:2: Range statement for test TestCompareClocks missing the call to method parallel in test Run (paralleltest)
	for _, tc := range equalTestCases {
	^
cases_test.go:1:9: package should be `clock_test` instead of `clock` (testpackage)
package clock
        ^
clock_examples_test.go:1:9: package should be `clock_test` instead of `clock` (testpackage)
package clock
        ^
clock_test.go:1:9: package should be `clock_test` instead of `clock` (testpackage)
package clock
        ^
clock.go:13:16: parameter name 'h' is too short for the scope of its usage (varnamelen)
func normalize(h, m int) (int, int) {
               ^

real	0m0.563s
user	0m0.900s
sys	0m0.499s


 ==============================================================================

Exit code: -1

real	0m0.629s
user	0m0.947s
sys	0m0.573s

real	0m0.633s
user	0m0.948s
sys	0m0.577s

===============================================================================

Running: ../../.github/citools/go/go-lint-revive

Running Go Lint Revive

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.026s
user	0m0.023s
sys	0m0.024s


 ==============================================================================

Running: revive -formatter=stylish ./...

clock.go
  (23, 14)  https://revive.run/r#var-declaration  should omit type int from declaration of var minutes; it will be inferred from the right-hand side  

clock_examples_test.go
  (7, 11)  https://revive.run/r#var-declaration  should omit type Clock from declaration of var clock; it will be inferred from the right-hand side  


 âœ– 2 problems (0 errors) (2 warnings)

real	0m0.057s
user	0m0.033s
sys	0m0.041s


 ==============================================================================

Exit code: 0

real	0m0.094s
user	0m0.061s
sys	0m0.075s

real	0m0.095s
user	0m0.063s
sys	0m0.075s

===============================================================================

Running: ../../.github/citools/go/go-lint-ineffassign
../run-tests: line 41: .github/citools/go/go-lint-ineffassign: No such file or directory

real	0m0.001s
user	0m0.000s
sys	0m0.000s

===============================================================================

Running: ../../.github/citools/go/go-lint-go-consistent

Running Go go-consistent

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.031s
user	0m0.022s
sys	0m0.033s


 ==============================================================================

Running: go-consistent -v ./...

	info: check "./."
internal error: package "fmt" without types was imported from "clock"

real	0m0.094s
user	0m0.142s
sys	0m0.131s


 ==============================================================================

Exit code: -1

real	0m0.138s
user	0m0.171s
sys	0m0.174s

real	0m0.140s
user	0m0.171s
sys	0m0.176s

===============================================================================

Running: ../../.github/citools/go/go-lint-staticcheck

Running Go StaticCheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.028s
user	0m0.027s
sys	0m0.027s


 ==============================================================================

Running: staticcheck -checks=all ./...

clock.go:23:14: should omit type int from declaration; it will be inferred from the right-hand side (ST1023)

real	0m0.166s
user	0m0.202s
sys	0m0.121s


 ==============================================================================

Exit code: -1

real	0m0.205s
user	0m0.236s
sys	0m0.155s

real	0m0.207s
user	0m0.238s
sys	0m0.155s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocritic

Running Go gocritic

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.036s
user	0m0.031s
sys	0m0.034s


 ==============================================================================

Running: gocritic check -enableAll ./...

./clock.go:13:1: unnamedResult: consider giving a name to these results

real	0m0.917s
user	0m2.344s
sys	0m0.286s


 ==============================================================================

Exit code: -1

real	0m0.969s
user	0m2.384s
sys	0m0.333s

real	0m0.972s
user	0m2.385s
sys	0m0.334s

===============================================================================

Running: ../../.github/citools/go/go-lint-go_vet

Running Go Vet

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.018s
user	0m0.014s
sys	0m0.018s


 ==============================================================================

Running: go vet ./...


real	0m0.075s
user	0m0.122s
sys	0m0.111s


 ==============================================================================

Exit code: 0

real	0m0.102s
user	0m0.140s
sys	0m0.138s

real	0m0.104s
user	0m0.142s
sys	0m0.138s

===============================================================================

Running: ../../.github/citools/go/go-fixer-go_fix

Running go fix

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.030s
user	0m0.025s
sys	0m0.029s


 ==============================================================================

Running: go fix ./...


real	0m0.027s
user	0m0.023s
sys	0m0.027s


 ==============================================================================

Exit code: 0

real	0m0.067s
user	0m0.053s
sys	0m0.066s

real	0m0.069s
user	0m0.053s
sys	0m0.067s

===============================================================================

Running: ../../.github/citools/go/go-lint-errcheck

Running Go errcheck

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.032s
user	0m0.023s
sys	0m0.027s


 ==============================================================================

Running: errcheck ./...


real	0m0.446s
user	0m1.169s
sys	0m0.295s


 ==============================================================================

Exit code: 0

real	0m0.492s
user	0m1.197s
sys	0m0.336s

real	0m0.494s
user	0m1.198s
sys	0m0.337s

===============================================================================

Running: ../../.github/citools/go/go-lint-gocyclo

Running Go gocyclo

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.026s
user	0m0.028s
sys	0m0.026s


 ==============================================================================

Running: gocyclo .

4 clock BenchmarkCreateClocks clock_test.go:121:1
4 clock BenchmarkSubtractMinutes clock_test.go:108:1
4 clock BenchmarkAddMinutes clock_test.go:95:1
4 clock TestCompareClocks clock_test.go:78:1
4 clock TestSubtractMinutesStringless clock_test.go:59:1
4 clock TestAddMinutesStringless clock_test.go:40:1
4 clock normalize clock.go:13:1
3 clock TestSubtractMinutes clock_test.go:30:1
3 clock TestAddMinutes clock_test.go:20:1
3 clock TestCreateClock clock_test.go:10:1
1 clock ExampleString clock_examples_test.go:28:1
1 clock ExampleClock_Subtract clock_examples_test.go:20:1
1 clock ExampleClock_Add clock_examples_test.go:12:1
1 clock (Clock).String clock.go:58:1
1 clock (Clock).Subtract clock.go:51:1
1 clock (Clock).Add clock.go:44:1
1 clock New clock.go:34:1

real	0m0.005s
user	0m0.004s
sys	0m0.001s


 ==============================================================================

Exit code: 0

real	0m0.041s
user	0m0.038s
sys	0m0.034s

real	0m0.043s
user	0m0.039s
sys	0m0.036s

===============================================================================

Running: ../../.github/citools/go/go-lint-misspell

Running Go misspell

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: misspell .


real	0m0.032s
user	0m0.040s
sys	0m0.014s


 ==============================================================================

Exit code: 0

real	0m0.046s
user	0m0.047s
sys	0m0.025s

real	0m0.049s
user	0m0.050s
sys	0m0.025s

===============================================================================

Running: ../../.github/citools/go/go-lint-gosec

Running Go GoSec

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.039s
user	0m0.030s
sys	0m0.044s


 ==============================================================================

Running: gosec ./...

[gosec] 2023/09/10 21:50:44 Including rules: default
[gosec] 2023/09/10 21:50:44 Excluding rules: default
[gosec] 2023/09/10 21:50:44 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/clock
[gosec] 2023/09/10 21:50:44 Checking package: clock
[gosec] 2023/09/10 21:50:44 Checking file: /home/vpayno/git_vpayno/exercism-workspace/go/clock/clock.go
Results:


[1;36mSummary:[0m
  Gosec  : dev
  Files  : 1
  Lines  : 60
  Nosec  : 0
  Issues : [1;32m0[0m


real	0m0.128s
user	0m0.151s
sys	0m0.119s


 ==============================================================================

Exit code: 0

real	0m0.189s
user	0m0.195s
sys	0m0.179s

real	0m0.192s
user	0m0.197s
sys	0m0.180s

===============================================================================

Running: ../../.github/citools/go/go-test-cover-report

Running Go Test, Coverage & Reports

Go version:

	go version go1.21.0 linux/amd64


 ==============================================================================

Running: go clean ./...


real	0m0.022s
user	0m0.019s
sys	0m0.025s


 ==============================================================================

Running: gotest -v -covermode=count -coverprofile coverage.out ./...

=== RUN   TestCreateClock
=== RUN   TestCreateClock/on_the_hour
=== RUN   TestCreateClock/past_the_hour
=== RUN   TestCreateClock/midnight_is_zero_hours
=== RUN   TestCreateClock/hour_rolls_over
=== RUN   TestCreateClock/hour_rolls_over_continuously
=== RUN   TestCreateClock/sixty_minutes_is_next_hour
=== RUN   TestCreateClock/minutes_roll_over
=== RUN   TestCreateClock/minutes_roll_over_continuously
=== RUN   TestCreateClock/hour_and_minutes_roll_over
=== RUN   TestCreateClock/hour_and_minutes_roll_over_continuously
=== RUN   TestCreateClock/hour_and_minutes_roll_over_to_exactly_midnight
=== RUN   TestCreateClock/negative_hour
=== RUN   TestCreateClock/negative_hour_rolls_over
=== RUN   TestCreateClock/negative_hour_rolls_over_continuously
=== RUN   TestCreateClock/negative_minutes
=== RUN   TestCreateClock/negative_minutes_roll_over
=== RUN   TestCreateClock/negative_minutes_roll_over_continuously
=== RUN   TestCreateClock/negative_sixty_minutes_is_previous_hour
=== RUN   TestCreateClock/negative_hour_and_minutes_both_roll_over
=== RUN   TestCreateClock/negative_hour_and_minutes_both_roll_over_continuously
--- PASS: TestCreateClock (0.00s)
    --- PASS: TestCreateClock/on_the_hour (0.00s)
    --- PASS: TestCreateClock/past_the_hour (0.00s)
    --- PASS: TestCreateClock/midnight_is_zero_hours (0.00s)
    --- PASS: TestCreateClock/hour_rolls_over (0.00s)
    --- PASS: TestCreateClock/hour_rolls_over_continuously (0.00s)
    --- PASS: TestCreateClock/sixty_minutes_is_next_hour (0.00s)
    --- PASS: TestCreateClock/minutes_roll_over (0.00s)
    --- PASS: TestCreateClock/minutes_roll_over_continuously (0.00s)
    --- PASS: TestCreateClock/hour_and_minutes_roll_over (0.00s)
    --- PASS: TestCreateClock/hour_and_minutes_roll_over_continuously (0.00s)
    --- PASS: TestCreateClock/hour_and_minutes_roll_over_to_exactly_midnight (0.00s)
    --- PASS: TestCreateClock/negative_hour (0.00s)
    --- PASS: TestCreateClock/negative_hour_rolls_over (0.00s)
    --- PASS: TestCreateClock/negative_hour_rolls_over_continuously (0.00s)
    --- PASS: TestCreateClock/negative_minutes (0.00s)
    --- PASS: TestCreateClock/negative_minutes_roll_over (0.00s)
    --- PASS: TestCreateClock/negative_minutes_roll_over_continuously (0.00s)
    --- PASS: TestCreateClock/negative_sixty_minutes_is_previous_hour (0.00s)
    --- PASS: TestCreateClock/negative_hour_and_minutes_both_roll_over (0.00s)
    --- PASS: TestCreateClock/negative_hour_and_minutes_both_roll_over_continuously (0.00s)
=== RUN   TestAddMinutes
=== RUN   TestAddMinutes/add_minutes
=== RUN   TestAddMinutes/add_no_minutes
=== RUN   TestAddMinutes/add_to_next_hour
=== RUN   TestAddMinutes/add_more_than_one_hour
=== RUN   TestAddMinutes/add_more_than_two_hours_with_carry
=== RUN   TestAddMinutes/add_across_midnight
=== RUN   TestAddMinutes/add_more_than_one_day_(1500_min_=_25_hrs)
=== RUN   TestAddMinutes/add_more_than_two_days
--- PASS: TestAddMinutes (0.00s)
    --- PASS: TestAddMinutes/add_minutes (0.00s)
    --- PASS: TestAddMinutes/add_no_minutes (0.00s)
    --- PASS: TestAddMinutes/add_to_next_hour (0.00s)
    --- PASS: TestAddMinutes/add_more_than_one_hour (0.00s)
    --- PASS: TestAddMinutes/add_more_than_two_hours_with_carry (0.00s)
    --- PASS: TestAddMinutes/add_across_midnight (0.00s)
    --- PASS: TestAddMinutes/add_more_than_one_day_(1500_min_=_25_hrs) (0.00s)
    --- PASS: TestAddMinutes/add_more_than_two_days (0.00s)
=== RUN   TestSubtractMinutes
=== RUN   TestSubtractMinutes/subtract_minutes
=== RUN   TestSubtractMinutes/subtract_to_previous_hour
=== RUN   TestSubtractMinutes/subtract_more_than_an_hour
=== RUN   TestSubtractMinutes/subtract_across_midnight
=== RUN   TestSubtractMinutes/subtract_more_than_two_hours
=== RUN   TestSubtractMinutes/subtract_more_than_two_hours_with_borrow
=== RUN   TestSubtractMinutes/subtract_more_than_one_day_(1500_min_=_25_hrs)
=== RUN   TestSubtractMinutes/subtract_more_than_two_days
--- PASS: TestSubtractMinutes (0.00s)
    --- PASS: TestSubtractMinutes/subtract_minutes (0.00s)
    --- PASS: TestSubtractMinutes/subtract_to_previous_hour (0.00s)
    --- PASS: TestSubtractMinutes/subtract_more_than_an_hour (0.00s)
    --- PASS: TestSubtractMinutes/subtract_across_midnight (0.00s)
    --- PASS: TestSubtractMinutes/subtract_more_than_two_hours (0.00s)
    --- PASS: TestSubtractMinutes/subtract_more_than_two_hours_with_borrow (0.00s)
    --- PASS: TestSubtractMinutes/subtract_more_than_one_day_(1500_min_=_25_hrs) (0.00s)
    --- PASS: TestSubtractMinutes/subtract_more_than_two_days (0.00s)
=== RUN   TestAddMinutesStringless
=== RUN   TestAddMinutesStringless/add_minutes
=== RUN   TestAddMinutesStringless/add_no_minutes
=== RUN   TestAddMinutesStringless/add_to_next_hour
=== RUN   TestAddMinutesStringless/add_more_than_one_hour
=== RUN   TestAddMinutesStringless/add_more_than_two_hours_with_carry
=== RUN   TestAddMinutesStringless/add_across_midnight
=== RUN   TestAddMinutesStringless/add_more_than_one_day_(1500_min_=_25_hrs)
=== RUN   TestAddMinutesStringless/add_more_than_two_days
--- PASS: TestAddMinutesStringless (0.00s)
    --- PASS: TestAddMinutesStringless/add_minutes (0.00s)
    --- PASS: TestAddMinutesStringless/add_no_minutes (0.00s)
    --- PASS: TestAddMinutesStringless/add_to_next_hour (0.00s)
    --- PASS: TestAddMinutesStringless/add_more_than_one_hour (0.00s)
    --- PASS: TestAddMinutesStringless/add_more_than_two_hours_with_carry (0.00s)
    --- PASS: TestAddMinutesStringless/add_across_midnight (0.00s)
    --- PASS: TestAddMinutesStringless/add_more_than_one_day_(1500_min_=_25_hrs) (0.00s)
    --- PASS: TestAddMinutesStringless/add_more_than_two_days (0.00s)
=== RUN   TestSubtractMinutesStringless
=== RUN   TestSubtractMinutesStringless/subtract_minutes
=== RUN   TestSubtractMinutesStringless/subtract_to_previous_hour
=== RUN   TestSubtractMinutesStringless/subtract_more_than_an_hour
=== RUN   TestSubtractMinutesStringless/subtract_across_midnight
=== RUN   TestSubtractMinutesStringless/subtract_more_than_two_hours
=== RUN   TestSubtractMinutesStringless/subtract_more_than_two_hours_with_borrow
=== RUN   TestSubtractMinutesStringless/subtract_more_than_one_day_(1500_min_=_25_hrs)
=== RUN   TestSubtractMinutesStringless/subtract_more_than_two_days
--- PASS: TestSubtractMinutesStringless (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_minutes (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_to_previous_hour (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_more_than_an_hour (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_across_midnight (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_more_than_two_hours (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_more_than_two_hours_with_borrow (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_more_than_one_day_(1500_min_=_25_hrs) (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_more_than_two_days (0.00s)
=== RUN   TestCompareClocks
=== RUN   TestCompareClocks/clocks_with_same_time
=== RUN   TestCompareClocks/clocks_a_minute_apart
=== RUN   TestCompareClocks/clocks_an_hour_apart
=== RUN   TestCompareClocks/clocks_with_hour_overflow
=== RUN   TestCompareClocks/clocks_with_hour_overflow_by_several_days
=== RUN   TestCompareClocks/clocks_with_negative_hour
=== RUN   TestCompareClocks/clocks_with_negative_hour_that_wraps
=== RUN   TestCompareClocks/clocks_with_negative_hour_that_wraps_multiple_times
=== RUN   TestCompareClocks/clocks_with_minute_overflow
=== RUN   TestCompareClocks/clocks_with_minute_overflow_by_several_days
=== RUN   TestCompareClocks/clocks_with_negative_minute
=== RUN   TestCompareClocks/clocks_with_negative_minute_that_wraps
=== RUN   TestCompareClocks/clocks_with_negative_minute_that_wraps_multiple_times
=== RUN   TestCompareClocks/clocks_with_negative_hours_and_minutes
=== RUN   TestCompareClocks/clocks_with_negative_hours_and_minutes_that_wrap
=== RUN   TestCompareClocks/full_clock_and_zeroed_clock
--- PASS: TestCompareClocks (0.00s)
    --- PASS: TestCompareClocks/clocks_with_same_time (0.00s)
    --- PASS: TestCompareClocks/clocks_a_minute_apart (0.00s)
    --- PASS: TestCompareClocks/clocks_an_hour_apart (0.00s)
    --- PASS: TestCompareClocks/clocks_with_hour_overflow (0.00s)
    --- PASS: TestCompareClocks/clocks_with_hour_overflow_by_several_days (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_hour (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_hour_that_wraps (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_hour_that_wraps_multiple_times (0.00s)
    --- PASS: TestCompareClocks/clocks_with_minute_overflow (0.00s)
    --- PASS: TestCompareClocks/clocks_with_minute_overflow_by_several_days (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_minute (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_minute_that_wraps (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_minute_that_wraps_multiple_times (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_hours_and_minutes (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_hours_and_minutes_that_wrap (0.00s)
    --- PASS: TestCompareClocks/full_clock_and_zeroed_clock (0.00s)
=== RUN   ExampleClock_Add
--- PASS: ExampleClock_Add (0.00s)
=== RUN   ExampleClock_Subtract
--- PASS: ExampleClock_Subtract (0.00s)
=== RUN   ExampleString
--- PASS: ExampleString (0.00s)
PASS
coverage: 100.0% of statements
ok  	clock	0.006s	coverage: 100.0% of statements

real	0m0.179s
user	0m0.245s
sys	0m0.137s


 ==============================================================================

Running: go tool cover -func=coverage.out

clock/clock.go:13:	normalize	100.0%
clock/clock.go:34:	New		100.0%
clock/clock.go:44:	Add		100.0%
clock/clock.go:51:	Subtract	100.0%
clock/clock.go:58:	String		100.0%
total:			(statements)	100.0%

real	0m0.047s
user	0m0.052s
sys	0m0.058s


 ==============================================================================

Running: go tool cover -html coverage.out -o coverage.html


real	0m0.049s
user	0m0.078s
sys	0m0.055s


 ==============================================================================

Running: cover_annotate

Running: gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

real	0m0.018s
user	0m0.019s
sys	0m0.020s

real	0m0.018s
user	0m0.019s
sys	0m0.020s


 ==============================================================================

Running: gotest -v -race -covermode=atomic ./...

=== RUN   TestCreateClock
=== RUN   TestCreateClock/on_the_hour
=== RUN   TestCreateClock/past_the_hour
=== RUN   TestCreateClock/midnight_is_zero_hours
=== RUN   TestCreateClock/hour_rolls_over
=== RUN   TestCreateClock/hour_rolls_over_continuously
=== RUN   TestCreateClock/sixty_minutes_is_next_hour
=== RUN   TestCreateClock/minutes_roll_over
=== RUN   TestCreateClock/minutes_roll_over_continuously
=== RUN   TestCreateClock/hour_and_minutes_roll_over
=== RUN   TestCreateClock/hour_and_minutes_roll_over_continuously
=== RUN   TestCreateClock/hour_and_minutes_roll_over_to_exactly_midnight
=== RUN   TestCreateClock/negative_hour
=== RUN   TestCreateClock/negative_hour_rolls_over
=== RUN   TestCreateClock/negative_hour_rolls_over_continuously
=== RUN   TestCreateClock/negative_minutes
=== RUN   TestCreateClock/negative_minutes_roll_over
=== RUN   TestCreateClock/negative_minutes_roll_over_continuously
=== RUN   TestCreateClock/negative_sixty_minutes_is_previous_hour
=== RUN   TestCreateClock/negative_hour_and_minutes_both_roll_over
=== RUN   TestCreateClock/negative_hour_and_minutes_both_roll_over_continuously
--- PASS: TestCreateClock (0.00s)
    --- PASS: TestCreateClock/on_the_hour (0.00s)
    --- PASS: TestCreateClock/past_the_hour (0.00s)
    --- PASS: TestCreateClock/midnight_is_zero_hours (0.00s)
    --- PASS: TestCreateClock/hour_rolls_over (0.00s)
    --- PASS: TestCreateClock/hour_rolls_over_continuously (0.00s)
    --- PASS: TestCreateClock/sixty_minutes_is_next_hour (0.00s)
    --- PASS: TestCreateClock/minutes_roll_over (0.00s)
    --- PASS: TestCreateClock/minutes_roll_over_continuously (0.00s)
    --- PASS: TestCreateClock/hour_and_minutes_roll_over (0.00s)
    --- PASS: TestCreateClock/hour_and_minutes_roll_over_continuously (0.00s)
    --- PASS: TestCreateClock/hour_and_minutes_roll_over_to_exactly_midnight (0.00s)
    --- PASS: TestCreateClock/negative_hour (0.00s)
    --- PASS: TestCreateClock/negative_hour_rolls_over (0.00s)
    --- PASS: TestCreateClock/negative_hour_rolls_over_continuously (0.00s)
    --- PASS: TestCreateClock/negative_minutes (0.00s)
    --- PASS: TestCreateClock/negative_minutes_roll_over (0.00s)
    --- PASS: TestCreateClock/negative_minutes_roll_over_continuously (0.00s)
    --- PASS: TestCreateClock/negative_sixty_minutes_is_previous_hour (0.00s)
    --- PASS: TestCreateClock/negative_hour_and_minutes_both_roll_over (0.00s)
    --- PASS: TestCreateClock/negative_hour_and_minutes_both_roll_over_continuously (0.00s)
=== RUN   TestAddMinutes
=== RUN   TestAddMinutes/add_minutes
=== RUN   TestAddMinutes/add_no_minutes
=== RUN   TestAddMinutes/add_to_next_hour
=== RUN   TestAddMinutes/add_more_than_one_hour
=== RUN   TestAddMinutes/add_more_than_two_hours_with_carry
=== RUN   TestAddMinutes/add_across_midnight
=== RUN   TestAddMinutes/add_more_than_one_day_(1500_min_=_25_hrs)
=== RUN   TestAddMinutes/add_more_than_two_days
--- PASS: TestAddMinutes (0.00s)
    --- PASS: TestAddMinutes/add_minutes (0.00s)
    --- PASS: TestAddMinutes/add_no_minutes (0.00s)
    --- PASS: TestAddMinutes/add_to_next_hour (0.00s)
    --- PASS: TestAddMinutes/add_more_than_one_hour (0.00s)
    --- PASS: TestAddMinutes/add_more_than_two_hours_with_carry (0.00s)
    --- PASS: TestAddMinutes/add_across_midnight (0.00s)
    --- PASS: TestAddMinutes/add_more_than_one_day_(1500_min_=_25_hrs) (0.00s)
    --- PASS: TestAddMinutes/add_more_than_two_days (0.00s)
=== RUN   TestSubtractMinutes
=== RUN   TestSubtractMinutes/subtract_minutes
=== RUN   TestSubtractMinutes/subtract_to_previous_hour
=== RUN   TestSubtractMinutes/subtract_more_than_an_hour
=== RUN   TestSubtractMinutes/subtract_across_midnight
=== RUN   TestSubtractMinutes/subtract_more_than_two_hours
=== RUN   TestSubtractMinutes/subtract_more_than_two_hours_with_borrow
=== RUN   TestSubtractMinutes/subtract_more_than_one_day_(1500_min_=_25_hrs)
=== RUN   TestSubtractMinutes/subtract_more_than_two_days
--- PASS: TestSubtractMinutes (0.00s)
    --- PASS: TestSubtractMinutes/subtract_minutes (0.00s)
    --- PASS: TestSubtractMinutes/subtract_to_previous_hour (0.00s)
    --- PASS: TestSubtractMinutes/subtract_more_than_an_hour (0.00s)
    --- PASS: TestSubtractMinutes/subtract_across_midnight (0.00s)
    --- PASS: TestSubtractMinutes/subtract_more_than_two_hours (0.00s)
    --- PASS: TestSubtractMinutes/subtract_more_than_two_hours_with_borrow (0.00s)
    --- PASS: TestSubtractMinutes/subtract_more_than_one_day_(1500_min_=_25_hrs) (0.00s)
    --- PASS: TestSubtractMinutes/subtract_more_than_two_days (0.00s)
=== RUN   TestAddMinutesStringless
=== RUN   TestAddMinutesStringless/add_minutes
=== RUN   TestAddMinutesStringless/add_no_minutes
=== RUN   TestAddMinutesStringless/add_to_next_hour
=== RUN   TestAddMinutesStringless/add_more_than_one_hour
=== RUN   TestAddMinutesStringless/add_more_than_two_hours_with_carry
=== RUN   TestAddMinutesStringless/add_across_midnight
=== RUN   TestAddMinutesStringless/add_more_than_one_day_(1500_min_=_25_hrs)
=== RUN   TestAddMinutesStringless/add_more_than_two_days
--- PASS: TestAddMinutesStringless (0.00s)
    --- PASS: TestAddMinutesStringless/add_minutes (0.00s)
    --- PASS: TestAddMinutesStringless/add_no_minutes (0.00s)
    --- PASS: TestAddMinutesStringless/add_to_next_hour (0.00s)
    --- PASS: TestAddMinutesStringless/add_more_than_one_hour (0.00s)
    --- PASS: TestAddMinutesStringless/add_more_than_two_hours_with_carry (0.00s)
    --- PASS: TestAddMinutesStringless/add_across_midnight (0.00s)
    --- PASS: TestAddMinutesStringless/add_more_than_one_day_(1500_min_=_25_hrs) (0.00s)
    --- PASS: TestAddMinutesStringless/add_more_than_two_days (0.00s)
=== RUN   TestSubtractMinutesStringless
=== RUN   TestSubtractMinutesStringless/subtract_minutes
=== RUN   TestSubtractMinutesStringless/subtract_to_previous_hour
=== RUN   TestSubtractMinutesStringless/subtract_more_than_an_hour
=== RUN   TestSubtractMinutesStringless/subtract_across_midnight
=== RUN   TestSubtractMinutesStringless/subtract_more_than_two_hours
=== RUN   TestSubtractMinutesStringless/subtract_more_than_two_hours_with_borrow
=== RUN   TestSubtractMinutesStringless/subtract_more_than_one_day_(1500_min_=_25_hrs)
=== RUN   TestSubtractMinutesStringless/subtract_more_than_two_days
--- PASS: TestSubtractMinutesStringless (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_minutes (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_to_previous_hour (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_more_than_an_hour (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_across_midnight (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_more_than_two_hours (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_more_than_two_hours_with_borrow (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_more_than_one_day_(1500_min_=_25_hrs) (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_more_than_two_days (0.00s)
=== RUN   TestCompareClocks
=== RUN   TestCompareClocks/clocks_with_same_time
=== RUN   TestCompareClocks/clocks_a_minute_apart
=== RUN   TestCompareClocks/clocks_an_hour_apart
=== RUN   TestCompareClocks/clocks_with_hour_overflow
=== RUN   TestCompareClocks/clocks_with_hour_overflow_by_several_days
=== RUN   TestCompareClocks/clocks_with_negative_hour
=== RUN   TestCompareClocks/clocks_with_negative_hour_that_wraps
=== RUN   TestCompareClocks/clocks_with_negative_hour_that_wraps_multiple_times
=== RUN   TestCompareClocks/clocks_with_minute_overflow
=== RUN   TestCompareClocks/clocks_with_minute_overflow_by_several_days
=== RUN   TestCompareClocks/clocks_with_negative_minute
=== RUN   TestCompareClocks/clocks_with_negative_minute_that_wraps
=== RUN   TestCompareClocks/clocks_with_negative_minute_that_wraps_multiple_times
=== RUN   TestCompareClocks/clocks_with_negative_hours_and_minutes
=== RUN   TestCompareClocks/clocks_with_negative_hours_and_minutes_that_wrap
=== RUN   TestCompareClocks/full_clock_and_zeroed_clock
--- PASS: TestCompareClocks (0.00s)
    --- PASS: TestCompareClocks/clocks_with_same_time (0.00s)
    --- PASS: TestCompareClocks/clocks_a_minute_apart (0.00s)
    --- PASS: TestCompareClocks/clocks_an_hour_apart (0.00s)
    --- PASS: TestCompareClocks/clocks_with_hour_overflow (0.00s)
    --- PASS: TestCompareClocks/clocks_with_hour_overflow_by_several_days (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_hour (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_hour_that_wraps (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_hour_that_wraps_multiple_times (0.00s)
    --- PASS: TestCompareClocks/clocks_with_minute_overflow (0.00s)
    --- PASS: TestCompareClocks/clocks_with_minute_overflow_by_several_days (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_minute (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_minute_that_wraps (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_minute_that_wraps_multiple_times (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_hours_and_minutes (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_hours_and_minutes_that_wrap (0.00s)
    --- PASS: TestCompareClocks/full_clock_and_zeroed_clock (0.00s)
=== RUN   ExampleClock_Add
--- PASS: ExampleClock_Add (0.00s)
=== RUN   ExampleClock_Subtract
--- PASS: ExampleClock_Subtract (0.00s)
=== RUN   ExampleString
--- PASS: ExampleString (0.00s)
PASS
coverage: 100.0% of statements
ok  	clock	1.034s	coverage: 100.0% of statements

real	0m1.280s
user	0m0.329s
sys	0m0.176s


 ==============================================================================

Exit code: 0

real	0m1.605s
user	0m0.747s
sys	0m0.480s

real	0m1.607s
user	0m0.749s
sys	0m0.481s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

gotest -v --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: clock
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
BenchmarkAddMinutes
BenchmarkAddMinutes-8        	128080137	         9.005 ns/op	       0 B/op	       0 allocs/op
BenchmarkSubtractMinutes
BenchmarkSubtractMinutes-8   	20420551	        55.56 ns/op	       0 B/op	       0 allocs/op
BenchmarkCreateClocks
BenchmarkCreateClocks-8      	 8791478	       124.3 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	clock	4.387s

real	0m4.554s
user	0m4.615s
sys	0m0.165s

===============================================================================

gotest -v -tags bonus
=== RUN   TestCreateClock
=== RUN   TestCreateClock/on_the_hour
=== RUN   TestCreateClock/past_the_hour
=== RUN   TestCreateClock/midnight_is_zero_hours
=== RUN   TestCreateClock/hour_rolls_over
=== RUN   TestCreateClock/hour_rolls_over_continuously
=== RUN   TestCreateClock/sixty_minutes_is_next_hour
=== RUN   TestCreateClock/minutes_roll_over
=== RUN   TestCreateClock/minutes_roll_over_continuously
=== RUN   TestCreateClock/hour_and_minutes_roll_over
=== RUN   TestCreateClock/hour_and_minutes_roll_over_continuously
=== RUN   TestCreateClock/hour_and_minutes_roll_over_to_exactly_midnight
=== RUN   TestCreateClock/negative_hour
=== RUN   TestCreateClock/negative_hour_rolls_over
=== RUN   TestCreateClock/negative_hour_rolls_over_continuously
=== RUN   TestCreateClock/negative_minutes
=== RUN   TestCreateClock/negative_minutes_roll_over
=== RUN   TestCreateClock/negative_minutes_roll_over_continuously
=== RUN   TestCreateClock/negative_sixty_minutes_is_previous_hour
=== RUN   TestCreateClock/negative_hour_and_minutes_both_roll_over
=== RUN   TestCreateClock/negative_hour_and_minutes_both_roll_over_continuously
--- PASS: TestCreateClock (0.00s)
    --- PASS: TestCreateClock/on_the_hour (0.00s)
    --- PASS: TestCreateClock/past_the_hour (0.00s)
    --- PASS: TestCreateClock/midnight_is_zero_hours (0.00s)
    --- PASS: TestCreateClock/hour_rolls_over (0.00s)
    --- PASS: TestCreateClock/hour_rolls_over_continuously (0.00s)
    --- PASS: TestCreateClock/sixty_minutes_is_next_hour (0.00s)
    --- PASS: TestCreateClock/minutes_roll_over (0.00s)
    --- PASS: TestCreateClock/minutes_roll_over_continuously (0.00s)
    --- PASS: TestCreateClock/hour_and_minutes_roll_over (0.00s)
    --- PASS: TestCreateClock/hour_and_minutes_roll_over_continuously (0.00s)
    --- PASS: TestCreateClock/hour_and_minutes_roll_over_to_exactly_midnight (0.00s)
    --- PASS: TestCreateClock/negative_hour (0.00s)
    --- PASS: TestCreateClock/negative_hour_rolls_over (0.00s)
    --- PASS: TestCreateClock/negative_hour_rolls_over_continuously (0.00s)
    --- PASS: TestCreateClock/negative_minutes (0.00s)
    --- PASS: TestCreateClock/negative_minutes_roll_over (0.00s)
    --- PASS: TestCreateClock/negative_minutes_roll_over_continuously (0.00s)
    --- PASS: TestCreateClock/negative_sixty_minutes_is_previous_hour (0.00s)
    --- PASS: TestCreateClock/negative_hour_and_minutes_both_roll_over (0.00s)
    --- PASS: TestCreateClock/negative_hour_and_minutes_both_roll_over_continuously (0.00s)
=== RUN   TestAddMinutes
=== RUN   TestAddMinutes/add_minutes
=== RUN   TestAddMinutes/add_no_minutes
=== RUN   TestAddMinutes/add_to_next_hour
=== RUN   TestAddMinutes/add_more_than_one_hour
=== RUN   TestAddMinutes/add_more_than_two_hours_with_carry
=== RUN   TestAddMinutes/add_across_midnight
=== RUN   TestAddMinutes/add_more_than_one_day_(1500_min_=_25_hrs)
=== RUN   TestAddMinutes/add_more_than_two_days
--- PASS: TestAddMinutes (0.00s)
    --- PASS: TestAddMinutes/add_minutes (0.00s)
    --- PASS: TestAddMinutes/add_no_minutes (0.00s)
    --- PASS: TestAddMinutes/add_to_next_hour (0.00s)
    --- PASS: TestAddMinutes/add_more_than_one_hour (0.00s)
    --- PASS: TestAddMinutes/add_more_than_two_hours_with_carry (0.00s)
    --- PASS: TestAddMinutes/add_across_midnight (0.00s)
    --- PASS: TestAddMinutes/add_more_than_one_day_(1500_min_=_25_hrs) (0.00s)
    --- PASS: TestAddMinutes/add_more_than_two_days (0.00s)
=== RUN   TestSubtractMinutes
=== RUN   TestSubtractMinutes/subtract_minutes
=== RUN   TestSubtractMinutes/subtract_to_previous_hour
=== RUN   TestSubtractMinutes/subtract_more_than_an_hour
=== RUN   TestSubtractMinutes/subtract_across_midnight
=== RUN   TestSubtractMinutes/subtract_more_than_two_hours
=== RUN   TestSubtractMinutes/subtract_more_than_two_hours_with_borrow
=== RUN   TestSubtractMinutes/subtract_more_than_one_day_(1500_min_=_25_hrs)
=== RUN   TestSubtractMinutes/subtract_more_than_two_days
--- PASS: TestSubtractMinutes (0.00s)
    --- PASS: TestSubtractMinutes/subtract_minutes (0.00s)
    --- PASS: TestSubtractMinutes/subtract_to_previous_hour (0.00s)
    --- PASS: TestSubtractMinutes/subtract_more_than_an_hour (0.00s)
    --- PASS: TestSubtractMinutes/subtract_across_midnight (0.00s)
    --- PASS: TestSubtractMinutes/subtract_more_than_two_hours (0.00s)
    --- PASS: TestSubtractMinutes/subtract_more_than_two_hours_with_borrow (0.00s)
    --- PASS: TestSubtractMinutes/subtract_more_than_one_day_(1500_min_=_25_hrs) (0.00s)
    --- PASS: TestSubtractMinutes/subtract_more_than_two_days (0.00s)
=== RUN   TestAddMinutesStringless
=== RUN   TestAddMinutesStringless/add_minutes
=== RUN   TestAddMinutesStringless/add_no_minutes
=== RUN   TestAddMinutesStringless/add_to_next_hour
=== RUN   TestAddMinutesStringless/add_more_than_one_hour
=== RUN   TestAddMinutesStringless/add_more_than_two_hours_with_carry
=== RUN   TestAddMinutesStringless/add_across_midnight
=== RUN   TestAddMinutesStringless/add_more_than_one_day_(1500_min_=_25_hrs)
=== RUN   TestAddMinutesStringless/add_more_than_two_days
--- PASS: TestAddMinutesStringless (0.00s)
    --- PASS: TestAddMinutesStringless/add_minutes (0.00s)
    --- PASS: TestAddMinutesStringless/add_no_minutes (0.00s)
    --- PASS: TestAddMinutesStringless/add_to_next_hour (0.00s)
    --- PASS: TestAddMinutesStringless/add_more_than_one_hour (0.00s)
    --- PASS: TestAddMinutesStringless/add_more_than_two_hours_with_carry (0.00s)
    --- PASS: TestAddMinutesStringless/add_across_midnight (0.00s)
    --- PASS: TestAddMinutesStringless/add_more_than_one_day_(1500_min_=_25_hrs) (0.00s)
    --- PASS: TestAddMinutesStringless/add_more_than_two_days (0.00s)
=== RUN   TestSubtractMinutesStringless
=== RUN   TestSubtractMinutesStringless/subtract_minutes
=== RUN   TestSubtractMinutesStringless/subtract_to_previous_hour
=== RUN   TestSubtractMinutesStringless/subtract_more_than_an_hour
=== RUN   TestSubtractMinutesStringless/subtract_across_midnight
=== RUN   TestSubtractMinutesStringless/subtract_more_than_two_hours
=== RUN   TestSubtractMinutesStringless/subtract_more_than_two_hours_with_borrow
=== RUN   TestSubtractMinutesStringless/subtract_more_than_one_day_(1500_min_=_25_hrs)
=== RUN   TestSubtractMinutesStringless/subtract_more_than_two_days
--- PASS: TestSubtractMinutesStringless (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_minutes (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_to_previous_hour (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_more_than_an_hour (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_across_midnight (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_more_than_two_hours (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_more_than_two_hours_with_borrow (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_more_than_one_day_(1500_min_=_25_hrs) (0.00s)
    --- PASS: TestSubtractMinutesStringless/subtract_more_than_two_days (0.00s)
=== RUN   TestCompareClocks
=== RUN   TestCompareClocks/clocks_with_same_time
=== RUN   TestCompareClocks/clocks_a_minute_apart
=== RUN   TestCompareClocks/clocks_an_hour_apart
=== RUN   TestCompareClocks/clocks_with_hour_overflow
=== RUN   TestCompareClocks/clocks_with_hour_overflow_by_several_days
=== RUN   TestCompareClocks/clocks_with_negative_hour
=== RUN   TestCompareClocks/clocks_with_negative_hour_that_wraps
=== RUN   TestCompareClocks/clocks_with_negative_hour_that_wraps_multiple_times
=== RUN   TestCompareClocks/clocks_with_minute_overflow
=== RUN   TestCompareClocks/clocks_with_minute_overflow_by_several_days
=== RUN   TestCompareClocks/clocks_with_negative_minute
=== RUN   TestCompareClocks/clocks_with_negative_minute_that_wraps
=== RUN   TestCompareClocks/clocks_with_negative_minute_that_wraps_multiple_times
=== RUN   TestCompareClocks/clocks_with_negative_hours_and_minutes
=== RUN   TestCompareClocks/clocks_with_negative_hours_and_minutes_that_wrap
=== RUN   TestCompareClocks/full_clock_and_zeroed_clock
--- PASS: TestCompareClocks (0.00s)
    --- PASS: TestCompareClocks/clocks_with_same_time (0.00s)
    --- PASS: TestCompareClocks/clocks_a_minute_apart (0.00s)
    --- PASS: TestCompareClocks/clocks_an_hour_apart (0.00s)
    --- PASS: TestCompareClocks/clocks_with_hour_overflow (0.00s)
    --- PASS: TestCompareClocks/clocks_with_hour_overflow_by_several_days (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_hour (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_hour_that_wraps (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_hour_that_wraps_multiple_times (0.00s)
    --- PASS: TestCompareClocks/clocks_with_minute_overflow (0.00s)
    --- PASS: TestCompareClocks/clocks_with_minute_overflow_by_several_days (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_minute (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_minute_that_wraps (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_minute_that_wraps_multiple_times (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_hours_and_minutes (0.00s)
    --- PASS: TestCompareClocks/clocks_with_negative_hours_and_minutes_that_wrap (0.00s)
    --- PASS: TestCompareClocks/full_clock_and_zeroed_clock (0.00s)
=== RUN   ExampleClock_Add
--- PASS: ExampleClock_Add (0.00s)
=== RUN   ExampleClock_Subtract
--- PASS: ExampleClock_Subtract (0.00s)
=== RUN   ExampleString
--- PASS: ExampleString (0.00s)
PASS
ok  	clock	0.003s

real	0m0.144s
user	0m0.208s
sys	0m0.136s

===============================================================================

benchstat benchstat-old.txt benchstat-new.txt
benchstat-old.txt:5: missing iteration count
benchstat-old.txt:7: missing iteration count
benchstat-old.txt:9: missing iteration count
benchstat-new.txt:5: missing iteration count
benchstat-new.txt:7: missing iteration count
benchstat-new.txt:9: missing iteration count
goos: linux
goarch: amd64
pkg: clock
cpu: 12th Gen Intel(R) Core(TM) i5-1240P
                  â”‚ benchstat-old.txt â”‚          benchstat-new.txt           â”‚
                  â”‚      sec/op       â”‚    sec/op     vs base                â”‚
AddMinutes-8             9.280n Â± âˆž Â¹   9.005n Â± âˆž Â¹       ~ (p=1.000 n=1) Â²
SubtractMinutes-8        56.32n Â± âˆž Â¹   55.56n Â± âˆž Â¹       ~ (p=1.000 n=1) Â²
CreateClocks-8           124.5n Â± âˆž Â¹   124.3n Â± âˆž Â¹       ~ (p=1.000 n=1) Â²
geomean                  40.22n         39.62n        -1.50%
Â¹ need >= 6 samples for confidence interval at level 0.95
Â² need >= 4 samples to detect a difference at alpha level 0.05

                  â”‚ benchstat-old.txt â”‚          benchstat-new.txt          â”‚
                  â”‚       B/op        â”‚    B/op      vs base                â”‚
AddMinutes-8              0.000 Â± âˆž Â¹   0.000 Â± âˆž Â¹       ~ (p=1.000 n=1) Â²
SubtractMinutes-8         0.000 Â± âˆž Â¹   0.000 Â± âˆž Â¹       ~ (p=1.000 n=1) Â²
CreateClocks-8            0.000 Â± âˆž Â¹   0.000 Â± âˆž Â¹       ~ (p=1.000 n=1) Â²
geomean                             Â³                +0.00%               Â³
Â¹ need >= 6 samples for confidence interval at level 0.95
Â² all samples are equal
Â³ summaries must be >0 to compute geomean

                  â”‚ benchstat-old.txt â”‚          benchstat-new.txt          â”‚
                  â”‚     allocs/op     â”‚  allocs/op   vs base                â”‚
AddMinutes-8              0.000 Â± âˆž Â¹   0.000 Â± âˆž Â¹       ~ (p=1.000 n=1) Â²
SubtractMinutes-8         0.000 Â± âˆž Â¹   0.000 Â± âˆž Â¹       ~ (p=1.000 n=1) Â²
CreateClocks-8            0.000 Â± âˆž Â¹   0.000 Â± âˆž Â¹       ~ (p=1.000 n=1) Â²
geomean                             Â³                +0.00%               Â³
Â¹ need >= 6 samples for confidence interval at level 0.95
Â² all samples are equal
Â³ summaries must be >0 to compute geomean

real	0m0.003s
user	0m0.002s
sys	0m0.002s

===============================================================================

gomarkdoc --output clock-doc.md

real	0m0.016s
user	0m0.009s
sys	0m0.008s

===============================================================================

go doc -all clock
package clock // import "clock"

Package clock that handles times without dates.

TYPES

type Clock struct {
	// Has unexported fields.
}
    Clock struct that uses hours and minutes to represent time.

func New(h, m int) Clock
    New returns a new clock with the normalized given hours and minutes.

func (c Clock) Add(m int) Clock
    Add returns a clock with the added minutes.

func (c Clock) String() string
    String retruns a string representation of the clock struct.

func (c Clock) Subtract(m int) Clock
    Subtract returns a clock with the subtracted minutes.


real	0m0.036s
user	0m0.023s
sys	0m0.030s


===============================================================================

