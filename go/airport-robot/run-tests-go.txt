Running automated test file(s):

Go packages: airportrobot 


===============================================================================

golangci-lint run ./...

real	0m0.234s
user	0m0.403s
sys	0m0.257s

===============================================================================

golint ./...

real	0m0.010s
user	0m0.006s
sys	0m0.009s

===============================================================================

revive -formatter=stylish ./...

real	0m0.008s
user	0m0.004s
sys	0m0.005s

===============================================================================

ineffassign ./...

real	0m0.099s
user	0m0.170s
sys	0m0.103s

===============================================================================

go-consistent -v ./...
	info: check "./."
internal error: package "fmt" without types was imported from "airportrobot"

real	0m0.117s
user	0m0.222s
sys	0m0.193s

===============================================================================

staticcheck ./...

real	0m0.148s
user	0m0.211s
sys	0m0.142s

===============================================================================

gocritic check -enableAll ./...

real	0m0.774s
user	0m2.757s
sys	0m0.422s

===============================================================================

go vet ./...

real	0m0.097s
user	0m0.243s
sys	0m0.178s

===============================================================================

go fix ./...

real	0m0.023s
user	0m0.021s
sys	0m0.027s

===============================================================================

gocyclo .
3 airportrobot TestSayHello_Portuguese airport_robot_test.go:32:1
3 airportrobot TestSayHello_Italien airport_robot_test.go:5:1
1 airportrobot ExampleSayHello airport_robot_examples_test.go:5:1
1 airportrobot (Portuguese).Greet airport_robot.go:57:1
1 airportrobot (Portuguese).LanguageName airport_robot.go:52:1
1 airportrobot (Italian).Greet airport_robot.go:43:1
1 airportrobot (Italian).LanguageName airport_robot.go:38:1
1 airportrobot (German).Greet airport_robot.go:29:1
1 airportrobot (German).LanguageName airport_robot.go:24:1
1 airportrobot SayHello airport_robot.go:13:1

real	0m0.002s
user	0m0.000s
sys	0m0.002s

===============================================================================

misspell .

real	0m0.025s
user	0m0.023s
sys	0m0.020s

===============================================================================

gosec ./...
[gosec] 2023/03/04 20:22:43 Including rules: default
[gosec] 2023/03/04 20:22:43 Excluding rules: default
[gosec] 2023/03/04 20:22:43 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/airport-robot
2023/03/04 20:22:43 internal error: package "fmt" without types was imported from "command-line-arguments"

real	0m0.116s
user	0m0.153s
sys	0m0.109s

===============================================================================

gotest -v -covermode=count -coverprofile coverage.out ./...
=== RUN   TestSayHello_Italien
=== RUN   TestSayHello_Italien/name_without_spaces
=== RUN   TestSayHello_Italien/full_name
--- PASS: TestSayHello_Italien (0.00s)
    --- PASS: TestSayHello_Italien/name_without_spaces (0.00s)
    --- PASS: TestSayHello_Italien/full_name (0.00s)
=== RUN   TestSayHello_Portuguese
=== RUN   TestSayHello_Portuguese/name_without_spaces
=== RUN   TestSayHello_Portuguese/full_name
--- PASS: TestSayHello_Portuguese (0.00s)
    --- PASS: TestSayHello_Portuguese/name_without_spaces (0.00s)
    --- PASS: TestSayHello_Portuguese/full_name (0.00s)
=== RUN   ExampleSayHello
--- PASS: ExampleSayHello (0.00s)
PASS
	airportrobot	coverage: 100.0% of statements
ok  	airportrobot	0.003s	coverage: 100.0% of statements

real	0m0.185s
user	0m0.325s
sys	0m0.209s

===============================================================================

go tool cover -func=coverage.out
airportrobot/airport_robot.go:13:	SayHello	100.0%
airportrobot/airport_robot.go:24:	LanguageName	100.0%
airportrobot/airport_robot.go:29:	Greet		100.0%
airportrobot/airport_robot.go:38:	LanguageName	100.0%
airportrobot/airport_robot.go:43:	Greet		100.0%
airportrobot/airport_robot.go:52:	LanguageName	100.0%
airportrobot/airport_robot.go:57:	Greet		100.0%
total:					(statements)	100.0%

real	0m0.060s
user	0m0.098s
sys	0m0.099s

===============================================================================

go tool cover -html coverage.out -o coverage.html

real	0m0.065s
user	0m0.101s
sys	0m0.083s

===============================================================================

gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt

real	0m0.021s
user	0m0.018s
sys	0m0.024s

===============================================================================

gotest -v -race -covermode=atomic ./...
=== RUN   TestSayHello_Italien
=== RUN   TestSayHello_Italien/name_without_spaces
=== RUN   TestSayHello_Italien/full_name
--- PASS: TestSayHello_Italien (0.00s)
    --- PASS: TestSayHello_Italien/name_without_spaces (0.00s)
    --- PASS: TestSayHello_Italien/full_name (0.00s)
=== RUN   TestSayHello_Portuguese
=== RUN   TestSayHello_Portuguese/name_without_spaces
=== RUN   TestSayHello_Portuguese/full_name
--- PASS: TestSayHello_Portuguese (0.00s)
    --- PASS: TestSayHello_Portuguese/name_without_spaces (0.00s)
    --- PASS: TestSayHello_Portuguese/full_name (0.00s)
=== RUN   ExampleSayHello
--- PASS: ExampleSayHello (0.00s)
PASS
	airportrobot	coverage: 100.0% of statements
ok  	airportrobot	(cached)	coverage: 100.0% of statements

real	0m0.119s
user	0m0.228s
sys	0m0.179s

===============================================================================

gotest -v --run=xxx --bench . --benchmem |& tee benchstat-new.txt
PASS
ok  	airportrobot	0.002s

real	0m0.149s
user	0m0.292s
sys	0m0.233s

===============================================================================

gotest -v -tags bonus
=== RUN   TestSayHello_Italien
=== RUN   TestSayHello_Italien/name_without_spaces
=== RUN   TestSayHello_Italien/full_name
--- PASS: TestSayHello_Italien (0.00s)
    --- PASS: TestSayHello_Italien/name_without_spaces (0.00s)
    --- PASS: TestSayHello_Italien/full_name (0.00s)
=== RUN   TestSayHello_Portuguese
=== RUN   TestSayHello_Portuguese/name_without_spaces
=== RUN   TestSayHello_Portuguese/full_name
--- PASS: TestSayHello_Portuguese (0.00s)
    --- PASS: TestSayHello_Portuguese/name_without_spaces (0.00s)
    --- PASS: TestSayHello_Portuguese/full_name (0.00s)
=== RUN   ExampleSayHello
--- PASS: ExampleSayHello (0.00s)
PASS
ok  	airportrobot	0.002s

real	0m0.139s
user	0m0.263s
sys	0m0.189s

===============================================================================

No old benchmarks to run benchstat against.

===============================================================================

gomarkdoc --output airportrobot-doc.md

real	0m0.013s
user	0m0.006s
sys	0m0.006s

===============================================================================

go doc -all airportrobot
package airportrobot // import "airportrobot"

Package airportrobot handles robot greetings.

FUNCTIONS

func SayHello(name string, greeter Greeter) string
    SayHello in many languates


TYPES

type German struct{}
    German language interface

func (s German) Greet(name string) string
    Greet implementation in German

func (s German) LanguageName() string
    LanguageName implementation in German

type Greeter interface {
	LanguageName() string
	Greet(name string) string
}
    Greeter language interface

type Italian struct{}
    Italian language interface

func (s Italian) Greet(name string) string
    Greet implementation in Italian

func (s Italian) LanguageName() string
    LanguageName implementation in Italian

type Portuguese struct{}
    Portuguese language interface

func (s Portuguese) Greet(name string) string
    Greet implementation in Portuguese

func (s Portuguese) LanguageName() string
    LanguageName implementation in Portuguese


real	0m0.042s
user	0m0.036s
sys	0m0.038s


===============================================================================

