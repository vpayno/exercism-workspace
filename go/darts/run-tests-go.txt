Running automated test file(s):

Go packages: darts 


===============================================================================

golint darts

real	0m0.140s
user	0m0.065s
sys	0m0.123s

===============================================================================

go test -v -covermode=count -coverprofile coverage.out darts
=== RUN   TestScore
=== RUN   TestScore/Missed_target
=== RUN   TestScore/On_the_outer_circle
=== RUN   TestScore/On_the_middle_circle
=== RUN   TestScore/On_the_inner_circle
=== RUN   TestScore/Exactly_on_centre
=== RUN   TestScore/Near_the_centre
=== RUN   TestScore/Just_within_the_inner_circle
=== RUN   TestScore/Just_outside_the_inner_circle
=== RUN   TestScore/Just_within_the_middle_circle
=== RUN   TestScore/Just_outside_the_middle_circle
=== RUN   TestScore/Just_within_the_outer_circle
=== RUN   TestScore/Just_outside_the_outer_circle
=== RUN   TestScore/Asymmetric_position_between_the_inner_and_middle_circles
--- PASS: TestScore (0.00s)
    --- PASS: TestScore/Missed_target (0.00s)
    --- PASS: TestScore/On_the_outer_circle (0.00s)
    --- PASS: TestScore/On_the_middle_circle (0.00s)
    --- PASS: TestScore/On_the_inner_circle (0.00s)
    --- PASS: TestScore/Exactly_on_centre (0.00s)
    --- PASS: TestScore/Near_the_centre (0.00s)
    --- PASS: TestScore/Just_within_the_inner_circle (0.00s)
    --- PASS: TestScore/Just_outside_the_inner_circle (0.00s)
    --- PASS: TestScore/Just_within_the_middle_circle (0.00s)
    --- PASS: TestScore/Just_outside_the_middle_circle (0.00s)
    --- PASS: TestScore/Just_within_the_outer_circle (0.00s)
    --- PASS: TestScore/Just_outside_the_outer_circle (0.00s)
    --- PASS: TestScore/Asymmetric_position_between_the_inner_and_middle_circles (0.00s)
=== RUN   ExampleScore
--- PASS: ExampleScore (0.00s)
PASS
coverage: 100.0% of statements
ok  	darts	0.006s	coverage: 100.0% of statements

real	0m0.633s
user	0m0.702s
sys	0m0.440s

===============================================================================

go tool cover -func=coverage.out
darts/darts.go:9:	Score		100.0%
total:			(statements)	100.0%

real	0m0.112s
user	0m0.069s
sys	0m0.104s

===============================================================================

go tool cover -html coverage.out -o coverage.html

real	0m0.086s
user	0m0.058s
sys	0m0.073s

===============================================================================

go test -v -race -covermode=atomic darts
=== RUN   TestScore
=== RUN   TestScore/Missed_target
=== RUN   TestScore/On_the_outer_circle
=== RUN   TestScore/On_the_middle_circle
=== RUN   TestScore/On_the_inner_circle
=== RUN   TestScore/Exactly_on_centre
=== RUN   TestScore/Near_the_centre
=== RUN   TestScore/Just_within_the_inner_circle
=== RUN   TestScore/Just_outside_the_inner_circle
=== RUN   TestScore/Just_within_the_middle_circle
=== RUN   TestScore/Just_outside_the_middle_circle
=== RUN   TestScore/Just_within_the_outer_circle
=== RUN   TestScore/Just_outside_the_outer_circle
=== RUN   TestScore/Asymmetric_position_between_the_inner_and_middle_circles
--- PASS: TestScore (0.02s)
    --- PASS: TestScore/Missed_target (0.00s)
    --- PASS: TestScore/On_the_outer_circle (0.00s)
    --- PASS: TestScore/On_the_middle_circle (0.00s)
    --- PASS: TestScore/On_the_inner_circle (0.00s)
    --- PASS: TestScore/Exactly_on_centre (0.00s)
    --- PASS: TestScore/Near_the_centre (0.00s)
    --- PASS: TestScore/Just_within_the_inner_circle (0.00s)
    --- PASS: TestScore/Just_outside_the_inner_circle (0.00s)
    --- PASS: TestScore/Just_within_the_middle_circle (0.00s)
    --- PASS: TestScore/Just_outside_the_middle_circle (0.00s)
    --- PASS: TestScore/Just_within_the_outer_circle (0.00s)
    --- PASS: TestScore/Just_outside_the_outer_circle (0.00s)
    --- PASS: TestScore/Asymmetric_position_between_the_inner_and_middle_circles (0.00s)
=== RUN   ExampleScore
--- PASS: ExampleScore (0.00s)
PASS
coverage: 100.0% of statements
ok  	darts	0.055s	coverage: 100.0% of statements

real	0m0.697s
user	0m0.710s
sys	0m0.496s

===============================================================================

mv -v benchstat-new.txt benchstat-old.txt
renamed 'benchstat-new.txt' -> 'benchstat-old.txt'

go test --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: darts
cpu: Intel(R) Core(TM) i7-7Y75 CPU @ 1.30GHz
BenchmarkScore-4   	 1764415	       811.8 ns/op	       0 B/op	       0 allocs/op
PASS
ok  	darts	2.170s

real	0m2.627s
user	0m2.749s
sys	0m0.359s

===============================================================================

go test -tags bonus
PASS
ok  	darts	0.008s

real	0m0.570s
user	0m0.706s
sys	0m0.471s

===============================================================================

go install golang.org/x/perf/cmd/benchstat@latest

real	0m0.693s
user	0m0.668s
sys	0m0.312s

benchstat benchstat-old.txt benchstat-new.txt
name     old time/op    new time/op    delta
Score-4     739ns ± 0%     812ns ± 0%   ~     (p=1.000 n=1+1)

name     old alloc/op   new alloc/op   delta
Score-4     0.00B          0.00B        ~     (all equal)

name     old allocs/op  new allocs/op  delta
Score-4      0.00           0.00        ~     (all equal)

real	0m0.035s
user	0m0.015s
sys	0m0.031s

===============================================================================

go vet darts

real	0m0.319s
user	0m0.355s
sys	0m0.319s

===============================================================================

go fix darts

real	0m0.061s
user	0m0.042s
sys	0m0.051s

===============================================================================

gosec ./darts
[gosec] 2022/07/24 00:39:00 Including rules: default
[gosec] 2022/07/24 00:39:00 Excluding rules: default
[gosec] 2022/07/24 00:39:00 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/darts
2022/07/24 00:39:00 internal error: package "math" without types was imported from "command-line-arguments"

real	0m0.329s
user	0m0.297s
sys	0m0.253s

===============================================================================

gomarkdoc --output darts-doc.md

real	0m0.027s
user	0m0.021s
sys	0m0.021s

===============================================================================

go doc -all darts
package darts // import "darts"

Package darts is used to calculate the score in a game of darts.

FUNCTIONS

func Score(x, y float64) int
    Score returns a score for a single dart throw.


real	0m0.140s
user	0m0.057s
sys	0m0.147s


===============================================================================

