Running automated test file(s):

Go packages: acronym 


===============================================================================

golint acronym

real	0m0.242s
user	0m0.205s
sys	0m0.282s

===============================================================================

go install golang.org/x/tools/cmd/cover@latest

real	0m0.801s
user	0m0.659s
sys	0m0.527s

go test -v -covermode=count -coverprofile coverage.out acronym
=== RUN   TestAcronym
--- PASS: TestAcronym (0.00s)
=== RUN   ExampleAbbreviate
--- PASS: ExampleAbbreviate (0.00s)
PASS
coverage: 88.9% of statements
ok  	acronym	0.010s	coverage: 88.9% of statements

real	0m0.962s
user	0m1.194s
sys	0m0.729s

===============================================================================

go tool cover -func=coverage.out
acronym/acronym.go:12:	Abbreviate	88.9%
total:			(statements)	88.9%

real	0m0.275s
user	0m0.314s
sys	0m0.251s

===============================================================================

go tool cover -html coverage.out -o coverage.html

real	0m0.357s
user	0m0.396s
sys	0m0.387s

===============================================================================

go test -v -race -covermode=atomic acronym
=== RUN   TestAcronym
--- PASS: TestAcronym (0.02s)
=== RUN   ExampleAbbreviate
--- PASS: ExampleAbbreviate (0.02s)
PASS
coverage: 88.9% of statements
ok  	acronym	0.081s	coverage: 88.9% of statements

real	0m4.608s
user	0m8.258s
sys	0m1.964s

===============================================================================

go test --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: acronym
cpu: Intel(R) Core(TM) i7-7Y75 CPU @ 1.30GHz
BenchmarkAcronym-4   	    9220	    168579 ns/op	   19183 B/op	     248 allocs/op
PASS
ok  	acronym	2.499s

real	0m3.237s
user	0m4.228s
sys	0m0.763s

===============================================================================

go test -tags bonus
PASS
ok  	acronym	0.008s

real	0m0.734s
user	0m0.883s
sys	0m0.568s

===============================================================================

No old benchmarks to run benchstat against.

===============================================================================

go vet acronym

real	0m1.116s
user	0m1.811s
sys	0m0.867s

===============================================================================

go fix acronym

real	0m0.175s
user	0m0.208s
sys	0m0.204s

===============================================================================

gosec ./acronym
[gosec] 2022/06/29 07:42:48 Including rules: default
[gosec] 2022/06/29 07:42:48 Excluding rules: default
[gosec] 2022/06/29 07:42:48 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/acronym
2022/06/29 07:42:48 internal error: package "regexp" without types was imported from "command-line-arguments"

real	0m0.489s
user	0m0.522s
sys	0m0.359s

===============================================================================

gomarkdoc --output acronym-doc.md

real	0m0.051s
user	0m0.026s
sys	0m0.026s

===============================================================================

go doc -all acronym
package acronym // import "acronym"

Package acronym converts a phrase to its acronym.

FUNCTIONS

func Abbreviate(s string) string
    Abbreviate returns an acronym from the supplied string.


real	0m0.436s
user	0m0.335s
sys	0m0.361s


===============================================================================

