Running automated test file(s):

Go packages: twofer 


===============================================================================

golint twofer

real	0m0.164s
user	0m0.142s
sys	0m0.144s

===============================================================================

go test -v -covermode=count -coverprofile coverage.out twofer
=== RUN   TestShareWith
--- PASS: TestShareWith (0.00s)
=== RUN   ExampleShareWith
--- PASS: ExampleShareWith (0.00s)
PASS
coverage: 100.0% of statements
ok  	twofer	0.011s	coverage: 100.0% of statements

real	0m0.570s
user	0m0.660s
sys	0m0.360s

===============================================================================

go tool cover -func=coverage.out
twofer/two_fer.go:9:	ShareWith	100.0%
total:			(statements)	100.0%

real	0m0.269s
user	0m0.212s
sys	0m0.246s

===============================================================================

go tool cover -html coverage.out -o coverage.html

real	0m0.228s
user	0m0.188s
sys	0m0.216s

===============================================================================

go test -v -race -covermode=atomic twofer
=== RUN   TestShareWith
--- PASS: TestShareWith (0.00s)
=== RUN   ExampleShareWith
--- PASS: ExampleShareWith (0.00s)
PASS
coverage: 100.0% of statements
ok  	twofer	0.034s	coverage: 100.0% of statements

real	0m0.616s
user	0m0.666s
sys	0m0.426s

===============================================================================

go test --run=xxx --bench . --benchmem |& tee benchstat-new.txt
goos: linux
goarch: amd64
pkg: twofer
cpu: Intel(R) Core(TM) i7-7Y75 CPU @ 1.30GHz
BenchmarkShareWith-4   	 2535352	       531.3 ns/op	      88 B/op	       4 allocs/op
PASS
ok  	twofer	1.873s

real	0m2.386s
user	0m2.904s
sys	0m0.477s

===============================================================================

go test -tags bonus
PASS
ok  	twofer	0.004s

real	0m0.495s
user	0m0.555s
sys	0m0.428s

===============================================================================

No old benchmarks to run benchstat against.

===============================================================================

go vet twofer

real	0m0.357s
user	0m0.342s
sys	0m0.312s

===============================================================================

go fix twofer

real	0m0.154s
user	0m0.136s
sys	0m0.153s

===============================================================================

gosec ./two-fer
[gosec] 2022/07/24 00:43:51 Including rules: default
[gosec] 2022/07/24 00:43:51 Excluding rules: default
[gosec] 2022/07/24 00:43:51 Import directory: /home/vpayno/git_vpayno/exercism-workspace/go/two-fer
2022/07/24 00:43:51 internal error: package "fmt" without types was imported from "command-line-arguments"

real	0m0.474s
user	0m0.524s
sys	0m0.369s

===============================================================================

gomarkdoc --output twofer-doc.md

real	0m0.047s
user	0m0.020s
sys	0m0.020s

===============================================================================

go doc -all twofer
package twofer // import "twofer"

Package twofer for https://exercism.org/tracks/go/exercises/two-fer

FUNCTIONS

func ShareWith(name string) string
    ShareWith returns a string with the sharing instructions.


real	0m0.249s
user	0m0.186s
sys	0m0.211s


===============================================================================

