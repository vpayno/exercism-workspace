Running automated test file(s):


===============================================================================

Running: make clean
rm -rf ./build

real	0m0.015s
user	0m0.002s
sys	0m0.013s

===============================================================================

Running: make coverage | ansifilter
rm -rf ./build
mkdir -pv ./build
mkdir: created directory './build'

cd ./build; LDFLAGS="-lgcov --coverage" CXXFLAGS="--coverage" cmake -G 'Unix Makefiles' ../; if make; then printf "\n=== All Tests Passed ===\n"; else printf "\n=== Test Failure ===\n"; false; fi
-- The CXX compiler identification is GNU 10.2.1
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++ - skipped
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: /home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/build
make[1]: Entering directory '/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/build'
make[2]: Entering directory '/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/build'
make[3]: Entering directory '/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/build'
make[3]: Leaving directory '/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/build'
make[3]: Entering directory '/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/build'
[ 25%] Building CXX object CMakeFiles/hello-world.dir/hello_world_test.cpp.o
[ 50%] Building CXX object CMakeFiles/hello-world.dir/hello_world.cpp.o
[ 75%] Building CXX object CMakeFiles/hello-world.dir/test/tests-main.cpp.o
[100%] Linking CXX executable hello-world
make[3]: Leaving directory '/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/build'
[100%] Built target hello-world
make[3]: Entering directory '/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/build'
make[3]: Leaving directory '/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/build'
make[3]: Entering directory '/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/build'
===============================================================================
All tests passed (1 assertion in 1 test case)

make[3]: Leaving directory '/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/build'
[100%] Built target test_hello-world
make[2]: Leaving directory '/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/build'
make[1]: Leaving directory '/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/build'

=== All Tests Passed ===

find . -regextype posix-egrep -regex "^.*(test|CompilerId).*[.](gcda|gcno)$" -print -delete
./build/CMakeFiles/3.22.2/CompilerIdCXX/CMakeCXXCompilerId.gcno
./build/CMakeFiles/hello-world.dir/test/tests-main.cpp.gcno
./build/CMakeFiles/hello-world.dir/test/tests-main.cpp.gcda
./build/CMakeFiles/hello-world.dir/hello_world_test.cpp.gcno
./build/CMakeFiles/hello-world.dir/hello_world_test.cpp.gcda

gcovr --print-summary
------------------------------------------------------------------------------
                           GCC Code Coverage Report
Directory: .
------------------------------------------------------------------------------
File                                       Lines    Exec  Cover   Missing
------------------------------------------------------------------------------
hello_world.cpp                                1       1   100%   
------------------------------------------------------------------------------
TOTAL                                          1       1   100%
------------------------------------------------------------------------------
lines: 100.0% (1 out of 1)
branches: 50.0% (1 out of 2)

real	0m8.911s
user	0m8.253s
sys	0m0.655s

===============================================================================

cmake-format --in-place CMakeLists.txt

real	0m0.159s
user	0m0.111s
sys	0m0.048s

===============================================================================

cmake-lint CMakeLists.txt
CMakeLists.txt
==============
CMakeLists.txt:15,06: [C0103] Invalid directory variable name "exercise_cpp" doesn't match `[A-Z][0-9A-Z_]+|_[0-9a-z_]+`
CMakeLists.txt:17,06: [C0103] Invalid directory variable name "exercise_cpp" doesn't match `[A-Z][0-9A-Z_]+|_[0-9a-z_]+`
CMakeLists.txt:61,70: [C0307] Bad indentation:
                                               )
  ^----BodyNode: 1:0->IfBlockNode: 59:0->BodyNode: 59:11->StatementNode: 60:2->TreeNode: 61:70

CMakeLists.txt:66,02: [C0113] Missing COMMENT in statement which allows it

Summary
=======
files scanned: 1
found lint:
  Convention: 4


real	0m0.147s
user	0m0.110s
sys	0m0.038s

===============================================================================

Running: clang-format-16 -style=file -i ./hello_world.cpp ./hello_world_test.cpp ./hello_world.h

real	0m0.024s
user	0m0.010s
sys	0m0.014s

===============================================================================

Running: ../../.github/citools/cpp/clang-check
clang-check-16 ./hello_world.cpp ./hello_world_test.cpp ./hello_world.h -- --std=c++17 -x c++

real	0m0.540s
user	0m0.509s
sys	0m0.031s


real	0m0.542s
user	0m0.510s
sys	0m0.032s

===============================================================================

Running: ../../.github/citools/cpp/clang-tidy | head -n 100
33313 warnings generated.
143486 warnings generated.
176792 warnings generated.
Suppressed 176789 warnings (176779 in non-user code, 10 NOLINT).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.

real	0m13.057s
user	0m12.988s
sys	0m0.068s
Running: clang-tidy-16 ./hello_world.cpp ./hello_world_test.cpp ./hello_world.h -checks=*,-llvm-header-guard,-llvmlibc-restrict-system-libc-headers -- --std=c++17 -x c++
/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/hello_world.cpp:3:1: warning: do not use namespace using-directives; use using-declarations instead [google-build-using-namespace]
using namespace std;
^
/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/hello_world.cpp:3:17: warning: declaration must be declared within the '__llvm_libc' namespace [llvmlibc-implementation-in-namespace]
using namespace std;
                ^
/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/hello_world.cpp:5:11: warning: '__llvm_libc' needs to be the outermost namespace [llvmlibc-implementation-in-namespace]
namespace hello_world {
          ^
/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/hello_world.cpp:7:8: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
string hello() { return "Hello, World!"; }
~~~~~~ ^
auto           -> string
/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/hello_world.cpp:7:25: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
string hello() { return "Hello, World!"; }
                        ^
/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/basic_string.h:525:39: note: default parameter was declared here
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
                                      ^
/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/hello_world.h:12:11: warning: '__llvm_libc' needs to be the outermost namespace [llvmlibc-implementation-in-namespace]
namespace hello_world {
          ^
/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/hello_world.h:18:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::string hello();
~~~~~~~~~~~ ^
auto                -> std::string
/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/hello_world_test.cpp:14:13: warning: 'hello' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    REQUIRE(hello_world::hello() == "Hello, World!");
            ^
/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/hello_world.h:18:13: note: resolves to this declaration
std::string hello();
            ^
/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/hello_world_test.cpp:14:34: warning: 'operator==<char, std::char_traits<char>, std::allocator<char>>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    REQUIRE(hello_world::hello() == "Hello, World!");
                                 ^
/usr/lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/bits/basic_string.h:6185:5: note: resolves to this declaration
    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/hello_world_test.cpp:14:34: warning: 'operator==<char[14]>' must resolve to a function declared within the '__llvm_libc' namespace [llvmlibc-callee-namespace]
    REQUIRE(hello_world::hello() == "Hello, World!");
                                 ^
/home/vpayno/git_vpayno/exercism-workspace/cpp/hello-world/test/catch.hpp:2342:14: note: resolves to this declaration
        auto operator == ( RhsT const& rhs ) -> BinaryExpr<LhsT, RhsT const&> const {
             ^


real	0m13.059s
user	0m12.991s
sys	0m0.068s

===============================================================================

