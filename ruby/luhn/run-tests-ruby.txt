Running automated test file(s):


===============================================================================

Running: ../../.github/citools/ruby/ruby-lint-rubycritic

Running RubyCritic

Ruby version:

	ruby 3.1.1p18 (2022-02-18 revision 53f5fc4236) [x86_64-linux]
	rbenv 1.2.0-11-ge4f61e6


 ==============================================================================

Running: rubycritic --path .rubycritic --format console --no-browser .

running flay smells

running flog smells
[32m.[0m[32m.[0m
running reek smells
[32m.[0m[32m.[0m
running complexity
[32m.[0m[32m.[0m
running attributes
[32m.[0m[32m.[0m
running churn
[32m.[0m[32m.[0m
running simple_cov
[32m.[0m[32m.[0m
/home/vpayno/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/rubycritic-4.6.1/lib/rubycritic/generators/text/list.rb:13: warning: Passing safe_level with the 2nd argument of ERB.new is deprecated. Do not use it, and specify other arguments as keyword arguments.
/home/vpayno/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/rubycritic-4.6.1/lib/rubycritic/generators/text/list.rb:13: warning: Passing trim_mode with the 3rd argument of ERB.new is deprecated. Use keyword argument like ERB.new(str, trim_mode: ...) instead.
Luhn:
  Rating:       A
  Churn:        0
  Complexity:   37.93
  Duplication:  0
  Smells:       4
    * (HighComplexity) Luhn::valid? has a flog score of 27
      - luhn.rb:6
    * (DuplicateMethodCall) Luhn#self.steps calls 'digits[index]' 3 times
      - luhn.rb:22
      - luhn.rb:24
    * (TooManyStatements) Luhn#self.steps has approx 7 statements
      - luhn.rb:17
    * (TooManyStatements) Luhn#self.valid? has approx 6 statements
      - luhn.rb:6

LuhnTest:
  Rating:       B
  Churn:        0
  Complexity:   52.8
  Duplication:  0
  Smells:       4
    * (IrresponsibleModule) LuhnTest has no descriptive comment
      - luhn_test.rb:28
    * (TooManyMethods) LuhnTest has at least 22 methods
      - luhn_test.rb:28
    * (UncommunicativeMethodName) LuhnTest#test_input_digit_9_is_correctly_converted_to_output_digit_9 has the name 'test_input_digit_9_is_correctly_converted_to_output_digit_9'
      - luhn_test.rb:109
    * (UncommunicativeMethodName) LuhnTest#test_invalid_long_number_with_a_remainder_divisible_by_5 has the name 'test_invalid_long_number_with_a_remainder_divisible_by_5'
      - luhn_test.rb:69
Score: 88.66

real	0m0.716s
user	0m0.578s
sys	0m0.131s


 ==============================================================================

Exit code: 0

real	0m0.812s
user	0m0.619s
sys	0m0.190s

real	0m0.815s
user	0m0.620s
sys	0m0.192s

===============================================================================

Running: ../../.github/citools/ruby/ruby-lint-formatter

Running Ruby Formatter

Ruby version:

	ruby 3.1.1p18 (2022-02-18 revision 53f5fc4236) [x86_64-linux]
	rbenv 1.2.0-11-ge4f61e6


 ==============================================================================

Running: rubocop -a .

Inspecting 2 files
.C

Offenses:

luhn_test.rb:28:1: C: Style/Documentation: Missing top-level documentation comment for class LuhnTest.
class LuhnTest < Minitest::Test
^^^^^^^^^^^^^^
luhn_test.rb:31:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    refute Luhn.valid?("1")
                       ^^^
luhn_test.rb:36:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    refute Luhn.valid?("0")
                       ^^^
luhn_test.rb:41:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert Luhn.valid?("059")
                       ^^^^^
luhn_test.rb:46:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert Luhn.valid?("59")
                       ^^^^
luhn_test.rb:51:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert Luhn.valid?("055 444 285")
                       ^^^^^^^^^^^^^
luhn_test.rb:56:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    refute Luhn.valid?("055 444 286")
                       ^^^^^^^^^^^^^
luhn_test.rb:61:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    refute Luhn.valid?("8273 1232 7352 0569")
                       ^^^^^^^^^^^^^^^^^^^^^
luhn_test.rb:66:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    refute Luhn.valid?("1 2345 6789 1234 5678 9012")
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
luhn_test.rb:69:7: C: Naming/VariableNumber: Use normalcase for method name numbers.
  def test_invalid_long_number_with_a_remainder_divisible_by_5
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
luhn_test.rb:71:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    refute Luhn.valid?("1 2345 6789 1234 5678 9013")
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
luhn_test.rb:76:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert Luhn.valid?("095 245 88")
                       ^^^^^^^^^^^^
luhn_test.rb:81:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert Luhn.valid?("234 567 891 234")
                       ^^^^^^^^^^^^^^^^^
luhn_test.rb:86:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    refute Luhn.valid?("059a")
                       ^^^^^^
luhn_test.rb:91:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    refute Luhn.valid?("055-444-285")
                       ^^^^^^^^^^^^^
luhn_test.rb:96:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    refute Luhn.valid?("055# 444$ 285")
                       ^^^^^^^^^^^^^^^
luhn_test.rb:101:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    refute Luhn.valid?(" 0")
                       ^^^^
luhn_test.rb:106:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert Luhn.valid?("0000 0")
                       ^^^^^^^^
luhn_test.rb:109:7: C: Naming/VariableNumber: Use normalcase for method name numbers.
  def test_input_digit_9_is_correctly_converted_to_output_digit_9
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
luhn_test.rb:111:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert Luhn.valid?("091")
                       ^^^^^
luhn_test.rb:116:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert Luhn.valid?("9999999999 9999999999 9999999999 9999999999")
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
luhn_test.rb:121:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert Luhn.valid?("109")
                       ^^^^^
luhn_test.rb:126:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    refute Luhn.valid?("055b 444 285")
                       ^^^^^^^^^^^^^^
luhn_test.rb:131:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    refute Luhn.valid?(":9")
                       ^^^^
luhn_test.rb:136:24: C: [Corrected] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    refute Luhn.valid?("59%59")
                       ^^^^^^^

2 files inspected, 25 offenses detected, 22 offenses corrected

real	0m1.016s
user	0m0.884s
sys	0m0.224s


 ==============================================================================

Exit code: -1

real	0m1.096s
user	0m0.925s
sys	0m0.266s

real	0m1.098s
user	0m0.927s
sys	0m0.266s

===============================================================================

Running: ../../.github/citools/ruby/ruby-test-with-coverage

Running Ruby Tests With Coverage

Ruby version:

	ruby 3.1.1p18 (2022-02-18 revision 53f5fc4236) [x86_64-linux]
	rbenv 1.2.0-11-ge4f61e6


 ==============================================================================

Running: rm -rf ./coverage


real	0m0.002s
user	0m0.001s
sys	0m0.001s


 ==============================================================================

Running: ruby ./luhn_test.rb -v

Run options: -v --seed 32810

# Running:

LuhnTest#test_single_digit_strings_can_not_be_valid = 0.00 s = .
LuhnTest#test_a_simple_valid_sin_that_becomes_invalid_if_reversed = 0.00 s = .
LuhnTest#test_valid_strings_with_punctuation_included_become_invalid = 0.00 s = .
LuhnTest#test_invalid_credit_card = 0.00 s = .
LuhnTest#test_invalid_long_number_with_a_remainder_divisible_by_5 = 0.00 s = .
LuhnTest#test_very_long_input_is_valid = 0.00 s = .
LuhnTest#test_using_ascii_value_for_doubled_non_digit_isnt_allowed = 0.00 s = .
LuhnTest#test_invalid_long_number_with_an_even_remainder = 0.00 s = .
LuhnTest#test_valid_luhn_with_an_odd_number_of_digits_and_non_zero_first_digit = 0.00 s = .
LuhnTest#test_valid_number_with_an_odd_number_of_spaces = 0.00 s = .
LuhnTest#test_using_ascii_value_for_non_doubled_non_digit_isnt_allowed = 0.00 s = .
LuhnTest#test_valid_number_with_an_even_number_of_digits = 0.00 s = .
LuhnTest#test_valid_strings_with_a_non_digit_added_at_the_end_become_invalid = 0.00 s = .
LuhnTest#test_a_simple_valid_sin_that_remains_valid_if_reversed = 0.00 s = .
LuhnTest#test_single_zero_with_space_is_invalid = 0.00 s = .
LuhnTest#test_valid_strings_with_symbols_included_become_invalid = 0.00 s = .
LuhnTest#test_non_numeric_non_space_char_in_the_middle_with_a_sum_thats_divisible_by_10_isnt_allowed = 0.00 s = .
LuhnTest#test_input_digit_9_is_correctly_converted_to_output_digit_9 = 0.00 s = .
LuhnTest#test_invalid_canadian_sin = 0.00 s = .
LuhnTest#test_a_valid_canadian_sin = 0.00 s = .
LuhnTest#test_a_single_zero_is_invalid = 0.00 s = .
LuhnTest#test_more_than_a_single_zero_is_valid = 0.00 s = .

Finished in 0.006073s, 3622.4695 runs/s, 3622.4695 assertions/s.

22 runs, 22 assertions, 0 failures, 0 errors, 0 skips
Coverage report generated for test:exercism to /home/vpayno/git_vpayno/exercism-workspace/ruby/luhn/coverage/coverage.xml. 17 / 17 LOC (100.00%) covered

real	0m0.202s
user	0m0.135s
sys	0m0.067s


 ==============================================================================

Coverage: 100.0%

 ==============================================================================

Exit code: 0

real	0m0.289s
user	0m0.177s
sys	0m0.116s

real	0m0.291s
user	0m0.177s
sys	0m0.118s

===============================================================================

Running: misspell .

real	0m0.027s
user	0m0.024s
sys	0m0.015s

===============================================================================

/home/vpayno/git_vpayno/exercism-workspace/ruby

===============================================================================

