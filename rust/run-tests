#!/bin/bash

print_ruler()
{
	printf "\n"
	printf "=%.0s" {1..79}; printf "\n"
	printf "\n"
} # print_ruler()

main()
{
	printf "Running automated test file(s):\n\n"

	print_ruler

	# https://doc.rust-lang.org/cargo/commands/cargo-check.html

	echo Running: cargo check --release
	time cargo check --release

	print_ruler

	# https://github.com/rust-lang/rust-clippy

	echo Running: cargo clippy --release
	time cargo clippy --release

	print_ruler

	# https://github.com/RustSec/rustsec/tree/main/cargo-audit

	echo Running: cargo audit
	time cargo audit

	print_ruler

	echo rm -fv ./*.profraw ./*.profdata
	rm -fv ./*.profraw ./*.profdata

	print_ruler

	# https://github.com/xd009642/tarpaulin

	# don't use --verbose, it exposes environment variables
	# echo Running: cargo tarpaulin --release --timeout=300 --bins --verbose
	# time cargo tarpaulin --release --timeout=300 --bins --verbose
	echo Running: cargo tarpaulin --release --timeout=300
	time cargo tarpaulin --release --timeout=300

	print_ruler

	echo RUSTFLAGS="\"-C instrument-coverage\""
	export RUSTFLAGS="-C instrument-coverage"

	print_ruler

	# echo RUSTDOCFLAGS="-C instrument-coverage -Z unstable-options --persist-doctests target/debug/doctestbins"
	# export RUSTDOCFLAGS="-C instrument-coverage -Z unstable-options --persist-doctests target/debug/doctestbins"
	echo RUSTDOCFLAGS="\"-C instrument-coverage\""
	export RUSTDOCFLAGS="-C instrument-coverage"

	print_ruler

	# https://doc.rust-lang.org/cargo/commands/cargo-test.html

	echo Running: cargo test
	time cargo test

	print_ruler

	# https://doc.rust-lang.org/rustc/instrument-coverage.html

	echo Running: llvm-profdata-14 merge -sparse default_*.profraw -o json5format.profdata
	time llvm-profdata-14 merge -sparse default_*.profraw -o json5format.profdata

	print_ruler

	# shellcheck disable=SC2046
	echo llvm-cov-14 report \
		$( \
		for file in \
			$( \
			RUSTFLAGS="-C instrument-coverage" \
			RUSTDOCFLAGS="-C instrument-coverage -Z unstable-options --persist-doctests target/debug/doctestbins" \
				cargo test --no-run --message-format=json \
				| jq -r "select(.profile.test == true) | .filenames[]" \
				| grep -v dSYM - \
			) \
			target/debug/doctestbins/*/rust_out; \
		do \
			[[ -x $file ]] && printf "%s %s " -object "${file}"; \
		done \
		) \
		--instr-profile=json5format.profdata --summary-only

	# shellcheck disable=SC2046,SC2086
	time llvm-cov-14 report \
		$( \
		for file in \
			$( \
			RUSTFLAGS="-C instrument-coverage" \
			RUSTDOCFLAGS="-C instrument-coverage -Z unstable-options --persist-doctests target/debug/doctestbins" \
				cargo test --no-run --message-format=json \
				| jq -r "select(.profile.test == true) | .filenames[]" \
				| grep -v dSYM - \
			) \
			target/debug/doctestbins/*/rust_out; \
		do \
			[[ -x $file ]] && printf "%s %s " -object "${file}"; \
		done \
		) \
		--instr-profile=json5format.profdata --summary-only

	print_ruler

	echo unset RUSTFLAGS
	unset RUSTFLAGS

	print_ruler

	echo unset RUSTDOCFLAGS
	unset RUSTDOCFLAGS

	print_ruler

	# go install github.com/client9/misspell/cmd/misspell@latest
	# still looking for a working version for rust

	echo Running: misspell .
	time misspell .

	print_ruler

	# https://doc.rust-lang.org/cargo/commands/cargo-doc.html

	echo Running: cargo doc
	time cargo doc

	print_ruler

	echo Running: cargo clean
	time cargo clean

	print_ruler
} # main()

time main "$@" |& tee ./run-tests-rust.txt
