#!/bin/bash

shopt -s nullglob

if [[ ! -d .exercism ]]; then
	printf "ERROR: Run from inside a project directory.\n\n"
	exit 1
fi

declare package_name
declare project_dir

get_rust_package_name() {
	toml get Cargo.toml package | jq -r .name
} # get_rust_package_name()

package_name="$(get_rust_package_name)"
project_dir="$(basename "${PWD}")"

if ! grep -q ./"${project_dir}"/README.md ../README.md; then

	cat >>../README.md <<EOF
- [${project_dir}](./${project_dir}/README.md)
EOF

fi

if ! grep -q ./"${package_name}"-doc.md ./README.md; then

	# Two empty spaces because the file is missing a trailing new line.
	cat >>./README.md <<EOF


### My Solution

- [my solution]($(printf "%s\n" ./src/*[.]rs | grep -v "test[.]rs"))
EOF

	cat >>./README.md <<EOF
- [run-tests](./run-tests-rust.txt)
EOF

fi

printf "\n"
git add ../README.md ./README.md
git diff --cached ../README.md ./README.md
printf "\n"

sed -r -i -e '/#\[ignore\]$/d' ./tests/*.rs
sed -r -i -e 's/#\[ignore\]\s+//g' ./tests/*.rs
git add ./tests/*.rs
git diff --cached ./tests/*.rs
printf "\n"

{
	printf "[workspace]\n"
	printf "resolver = \"%d\"\n" 2
	printf "members = [\n"
	for d in ./*; do
		if [[ -d $d ]]; then
			printf "    \"%s\",\n" "$d"
		fi
	done
	printf "]\n"
} >../Cargo.toml
git add ../Cargo.toml
printf "\n"
