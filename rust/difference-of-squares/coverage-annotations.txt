    1|       |//! Exercise Url: <https://exercism.org/tracks/rust/exercises/difference-of-squares>
    2|       |
    3|       |/// Find the square of a sum of numbers.
    4|       |///
    5|       |/// <https://en.wikipedia.org/wiki/Sum-of-squares_optimization>
    6|       |///
    7|       |/// Example
    8|       |/// ```rust
    9|       |/// use difference_of_squares::*;
   10|       |///
   11|       |/// let want: u32 = 25_502_500;
   12|       |/// let got: u32 = square_of_sum(100);
   13|       |///
   14|       |/// assert_eq!(got, want);
   15|       |/// ```
   16|     18|pub fn square_of_sum(number: u32) -> u32 {
   17|     18|    u32::pow(number * (number + 1) / 2, 2)
   18|     18|}
  ------------------
  | difference_of_squares::square_of_sum:
  |   16|     18|pub fn square_of_sum(number: u32) -> u32 {
  |   17|     18|    u32::pow(number * (number + 1) / 2, 2)
  |   18|     18|}
  ------------------
  | Unexecuted instantiation: difference_of_squares::square_of_sum
  ------------------
   19|       |
   20|       |/// Find the sum of square numbers.
   21|       |///
   22|       |/// <https://en.wikipedia.org/wiki/Sum-of-squares_optimization>
   23|       |///
   24|       |/// Example
   25|       |/// ```rust
   26|       |/// use difference_of_squares::*;
   27|       |///
   28|       |/// let want: u32 = 338_350;
   29|       |/// let got: u32 = sum_of_squares(100);
   30|       |///
   31|       |/// assert_eq!(got, want);
   32|       |/// ```
   33|     18|pub fn sum_of_squares(number: u32) -> u32 {
   34|     18|    number * (number + 1) * (2 * number + 1) / 6
   35|     18|}
  ------------------
  | difference_of_squares::sum_of_squares:
  |   33|     18|pub fn sum_of_squares(number: u32) -> u32 {
  |   34|     18|    number * (number + 1) * (2 * number + 1) / 6
  |   35|     18|}
  ------------------
  | Unexecuted instantiation: difference_of_squares::sum_of_squares
  ------------------
   36|       |
   37|       |/// Find difference of squares.
   38|       |///
   39|       |/// <https://en.wikipedia.org/wiki/Sum-of-squares_optimization>
   40|       |///
   41|       |/// Example
   42|       |/// ```rust
   43|       |/// use difference_of_squares::*;
   44|       |///
   45|       |/// let want: u32 = square_of_sum(100) - sum_of_squares(100);
   46|       |/// let got: u32 = difference(100);
   47|       |///
   48|       |/// assert_eq!(got, want);
   49|       |/// ```
   50|      9|pub fn difference(number: u32) -> u32 {
   51|      9|    square_of_sum(number) - sum_of_squares(number)
   52|      9|}
  ------------------
  | difference_of_squares::difference:
  |   50|      9|pub fn difference(number: u32) -> u32 {
  |   51|      9|    square_of_sum(number) - sum_of_squares(number)
  |   52|      9|}
  ------------------
  | Unexecuted instantiation: difference_of_squares::difference
  ------------------