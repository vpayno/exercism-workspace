Running automated test file(s):


===============================================================================

Running: make clean
rm -rf *.o *.out *.out.dSYM

real	0m0.004s
user	0m0.001s
sys	0m0.003s

===============================================================================

Running: make test | ansifilter
Compiling tests.out
test_allergies.c:348:test_not_allergic_to_anything_for_eggs:PASS
test_allergies.c:349:test_allergic_only_to_eggs:PASS
test_allergies.c:350:test_allergic_to_eggs_and_something_else:PASS
test_allergies.c:351:test_allergic_to_something_but_not_eggs:PASS
test_allergies.c:352:test_allergic_to_everything_for_eggs:PASS
test_allergies.c:354:test_not_allergic_to_anything_for_peanuts:PASS
test_allergies.c:355:test_allergic_only_to_peanuts:PASS
test_allergies.c:356:test_allergic_to_peanuts_and_something_else:PASS
test_allergies.c:357:test_allergic_to_something_but_not_peanuts:PASS
test_allergies.c:358:test_allergic_to_everything_for_peanuts:PASS
test_allergies.c:360:test_not_allergic_to_anything_for_shellfish:PASS
test_allergies.c:361:test_allergic_only_to_shellfish:PASS
test_allergies.c:362:test_allergic_to_shellfish_and_something_else:PASS
test_allergies.c:363:test_allergic_to_something_but_not_shellfish:PASS
test_allergies.c:364:test_allergic_to_everything_for_shellfish:PASS
test_allergies.c:366:test_not_allergic_to_anything_for_strawberries:PASS
test_allergies.c:367:test_allergic_only_to_strawberries:PASS
test_allergies.c:368:test_allergic_to_strawberries_and_something_else:PASS
test_allergies.c:369:test_allergic_to_something_but_not_strawberries:PASS
test_allergies.c:370:test_allergic_to_everything_for_strawberries:PASS
test_allergies.c:372:test_not_allergic_to_anything_for_tomatoes:PASS
test_allergies.c:373:test_allergic_only_to_tomatoes:PASS
test_allergies.c:374:test_allergic_to_tomatoes_and_something_else:PASS
test_allergies.c:375:test_allergic_to_something_but_not_tomatoes:PASS
test_allergies.c:376:test_allergic_to_everything_for_tomatoes:PASS
test_allergies.c:378:test_not_allergic_to_anything_for_chocolate:PASS
test_allergies.c:379:test_allergic_only_to_chocolate:PASS
test_allergies.c:380:test_allergic_to_chocolate_and_something_else:PASS
test_allergies.c:381:test_allergic_to_something_but_not_chocolate:PASS
test_allergies.c:382:test_allergic_to_everything_for_chocolate:PASS
test_allergies.c:384:test_not_allergic_to_anything_for_pollen:PASS
test_allergies.c:385:test_allergic_only_to_pollen:PASS
test_allergies.c:386:test_allergic_to_pollen_and_something_else:PASS
test_allergies.c:387:test_allergic_to_something_but_not_pollen:PASS
test_allergies.c:388:test_allergic_to_everything_for_pollen:PASS
test_allergies.c:390:test_not_allergic_to_anything_for_cats:PASS
test_allergies.c:391:test_allergic_only_to_cats:PASS
test_allergies.c:392:test_allergic_to_cats_and_something_else:PASS
test_allergies.c:393:test_allergic_to_something_but_not_cats:PASS
test_allergies.c:394:test_allergic_to_everything_for_cats:PASS
test_allergies.c:396:test_no_allergies:PASS
test_allergies.c:397:test_just_eggs:PASS
test_allergies.c:398:test_just_peanuts:PASS
test_allergies.c:399:test_just_strawberries:PASS
test_allergies.c:400:test_eggs_and_peanuts:PASS
test_allergies.c:401:test_more_than_eggs_but_not_peanuts:PASS
test_allergies.c:402:test_lots_of_stuff:PASS
test_allergies.c:403:test_everything:PASS
test_allergies.c:404:test_no_allergen_score_parts:PASS
test_allergies.c:405:test_no_allergen_score_parts_without_highest_valid_score:PASS

-----------------------
50 Tests 0 Failures 0 Ignored 
OK

real	0m0.132s
user	0m0.100s
sys	0m0.034s

===============================================================================

Running: make memcheck | ansifilter
Compiling memcheck
test_allergies.c:348:test_not_allergic_to_anything_for_eggs:PASS
test_allergies.c:349:test_allergic_only_to_eggs:PASS
test_allergies.c:350:test_allergic_to_eggs_and_something_else:PASS
test_allergies.c:351:test_allergic_to_something_but_not_eggs:PASS
test_allergies.c:352:test_allergic_to_everything_for_eggs:PASS
test_allergies.c:354:test_not_allergic_to_anything_for_peanuts:PASS
test_allergies.c:355:test_allergic_only_to_peanuts:PASS
test_allergies.c:356:test_allergic_to_peanuts_and_something_else:PASS
test_allergies.c:357:test_allergic_to_something_but_not_peanuts:PASS
test_allergies.c:358:test_allergic_to_everything_for_peanuts:PASS
test_allergies.c:360:test_not_allergic_to_anything_for_shellfish:PASS
test_allergies.c:361:test_allergic_only_to_shellfish:PASS
test_allergies.c:362:test_allergic_to_shellfish_and_something_else:PASS
test_allergies.c:363:test_allergic_to_something_but_not_shellfish:PASS
test_allergies.c:364:test_allergic_to_everything_for_shellfish:PASS
test_allergies.c:366:test_not_allergic_to_anything_for_strawberries:PASS
test_allergies.c:367:test_allergic_only_to_strawberries:PASS
test_allergies.c:368:test_allergic_to_strawberries_and_something_else:PASS
test_allergies.c:369:test_allergic_to_something_but_not_strawberries:PASS
test_allergies.c:370:test_allergic_to_everything_for_strawberries:PASS
test_allergies.c:372:test_not_allergic_to_anything_for_tomatoes:PASS
test_allergies.c:373:test_allergic_only_to_tomatoes:PASS
test_allergies.c:374:test_allergic_to_tomatoes_and_something_else:PASS
test_allergies.c:375:test_allergic_to_something_but_not_tomatoes:PASS
test_allergies.c:376:test_allergic_to_everything_for_tomatoes:PASS
test_allergies.c:378:test_not_allergic_to_anything_for_chocolate:PASS
test_allergies.c:379:test_allergic_only_to_chocolate:PASS
test_allergies.c:380:test_allergic_to_chocolate_and_something_else:PASS
test_allergies.c:381:test_allergic_to_something_but_not_chocolate:PASS
test_allergies.c:382:test_allergic_to_everything_for_chocolate:PASS
test_allergies.c:384:test_not_allergic_to_anything_for_pollen:PASS
test_allergies.c:385:test_allergic_only_to_pollen:PASS
test_allergies.c:386:test_allergic_to_pollen_and_something_else:PASS
test_allergies.c:387:test_allergic_to_something_but_not_pollen:PASS
test_allergies.c:388:test_allergic_to_everything_for_pollen:PASS
test_allergies.c:390:test_not_allergic_to_anything_for_cats:PASS
test_allergies.c:391:test_allergic_only_to_cats:PASS
test_allergies.c:392:test_allergic_to_cats_and_something_else:PASS
test_allergies.c:393:test_allergic_to_something_but_not_cats:PASS
test_allergies.c:394:test_allergic_to_everything_for_cats:PASS
test_allergies.c:396:test_no_allergies:PASS
test_allergies.c:397:test_just_eggs:PASS
test_allergies.c:398:test_just_peanuts:PASS
test_allergies.c:399:test_just_strawberries:PASS
test_allergies.c:400:test_eggs_and_peanuts:PASS
test_allergies.c:401:test_more_than_eggs_but_not_peanuts:PASS
test_allergies.c:402:test_lots_of_stuff:PASS
test_allergies.c:403:test_everything:PASS
test_allergies.c:404:test_no_allergen_score_parts:PASS
test_allergies.c:405:test_no_allergen_score_parts_without_highest_valid_score:PASS

-----------------------
50 Tests 0 Failures 0 Ignored 
OK
Memory check passed

real	0m0.150s
user	0m0.120s
sys	0m0.032s

===============================================================================

Running: clang-check-16 ./allergies.c ./test_allergies.c ./allergies.h --

real	0m0.035s
user	0m0.023s
sys	0m0.012s

===============================================================================

Running: clang-tidy-16 ./allergies.c ./test_allergies.c ./allergies.h -checks=*,-llvm-header-guard,-llvmlibc-restrict-system-libc-headers -- | head -n 100
776 warnings generated.
4249 warnings generated.
5024 warnings generated.
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/allergies.c:11:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
    for (allergen_t allergen = ALLERGEN_EGGS; allergen < ALLERGEN_COUNT;
    ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/allergies.h:19:9: warning: accessing fields in struct 'allergen_list_t' is inefficient due to poor alignment; currently aligned to 4 bytes, but recommended alignment is 16 bytes [altera-struct-pack-align]
typedef struct {
        ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/allergies.h:19:9: note: use "__attribute__((aligned(16)))" to align struct 'allergen_list_t' to 16 bytes
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test_allergies.c:10:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
    TEST_ASSERT_FALSE(is_allergic_to(ALLERGEN_EGGS, 0));
    ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity.h:128:100: note: expanded from macro 'TEST_ASSERT_FALSE'
#define TEST_ASSERT_FALSE(condition)                                                               UNITY_TEST_ASSERT(      !(condition), __LINE__, " Expected FALSE Was TRUE")
                                                                                                   ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity_internals.h:775:98: note: expanded from macro 'UNITY_TEST_ASSERT'
#define UNITY_TEST_ASSERT(condition, line, message)                                              do {if (condition) {} else {UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), (message));}} while(0)
                                                                                                 ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test_allergies.c:16:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
    TEST_ASSERT_TRUE(is_allergic_to(ALLERGEN_EGGS, 1));
    ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity.h:126:100: note: expanded from macro 'TEST_ASSERT_TRUE'
#define TEST_ASSERT_TRUE(condition)                                                                UNITY_TEST_ASSERT(       (condition), __LINE__, " Expected TRUE Was FALSE")
                                                                                                   ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity_internals.h:775:98: note: expanded from macro 'UNITY_TEST_ASSERT'
#define UNITY_TEST_ASSERT(condition, line, message)                                              do {if (condition) {} else {UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), (message));}} while(0)
                                                                                                 ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test_allergies.c:22:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
    TEST_ASSERT_TRUE(is_allergic_to(ALLERGEN_EGGS, 3));
    ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity.h:126:100: note: expanded from macro 'TEST_ASSERT_TRUE'
#define TEST_ASSERT_TRUE(condition)                                                                UNITY_TEST_ASSERT(       (condition), __LINE__, " Expected TRUE Was FALSE")
                                                                                                   ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity_internals.h:775:98: note: expanded from macro 'UNITY_TEST_ASSERT'
#define UNITY_TEST_ASSERT(condition, line, message)                                              do {if (condition) {} else {UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), (message));}} while(0)
                                                                                                 ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test_allergies.c:28:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
    TEST_ASSERT_FALSE(is_allergic_to(ALLERGEN_EGGS, 2));
    ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity.h:128:100: note: expanded from macro 'TEST_ASSERT_FALSE'
#define TEST_ASSERT_FALSE(condition)                                                               UNITY_TEST_ASSERT(      !(condition), __LINE__, " Expected FALSE Was TRUE")
                                                                                                   ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity_internals.h:775:98: note: expanded from macro 'UNITY_TEST_ASSERT'
#define UNITY_TEST_ASSERT(condition, line, message)                                              do {if (condition) {} else {UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), (message));}} while(0)
                                                                                                 ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test_allergies.c:34:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
    TEST_ASSERT_TRUE(is_allergic_to(ALLERGEN_EGGS, 255));
    ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity.h:126:100: note: expanded from macro 'TEST_ASSERT_TRUE'
#define TEST_ASSERT_TRUE(condition)                                                                UNITY_TEST_ASSERT(       (condition), __LINE__, " Expected TRUE Was FALSE")
                                                                                                   ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity_internals.h:775:98: note: expanded from macro 'UNITY_TEST_ASSERT'
#define UNITY_TEST_ASSERT(condition, line, message)                                              do {if (condition) {} else {UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), (message));}} while(0)
                                                                                                 ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test_allergies.c:40:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
    TEST_ASSERT_FALSE(is_allergic_to(ALLERGEN_PEANUTS, 0));
    ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity.h:128:100: note: expanded from macro 'TEST_ASSERT_FALSE'
#define TEST_ASSERT_FALSE(condition)                                                               UNITY_TEST_ASSERT(      !(condition), __LINE__, " Expected FALSE Was TRUE")
                                                                                                   ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity_internals.h:775:98: note: expanded from macro 'UNITY_TEST_ASSERT'
#define UNITY_TEST_ASSERT(condition, line, message)                                              do {if (condition) {} else {UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), (message));}} while(0)
                                                                                                 ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test_allergies.c:46:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
    TEST_ASSERT_TRUE(is_allergic_to(ALLERGEN_PEANUTS, 2));
    ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity.h:126:100: note: expanded from macro 'TEST_ASSERT_TRUE'
#define TEST_ASSERT_TRUE(condition)                                                                UNITY_TEST_ASSERT(       (condition), __LINE__, " Expected TRUE Was FALSE")
                                                                                                   ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity_internals.h:775:98: note: expanded from macro 'UNITY_TEST_ASSERT'
#define UNITY_TEST_ASSERT(condition, line, message)                                              do {if (condition) {} else {UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), (message));}} while(0)
                                                                                                 ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test_allergies.c:52:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
    TEST_ASSERT_TRUE(is_allergic_to(ALLERGEN_EGGS, 7));
    ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity.h:126:100: note: expanded from macro 'TEST_ASSERT_TRUE'
#define TEST_ASSERT_TRUE(condition)                                                                UNITY_TEST_ASSERT(       (condition), __LINE__, " Expected TRUE Was FALSE")
                                                                                                   ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity_internals.h:775:98: note: expanded from macro 'UNITY_TEST_ASSERT'
#define UNITY_TEST_ASSERT(condition, line, message)                                              do {if (condition) {} else {UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), (message));}} while(0)
                                                                                                 ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test_allergies.c:58:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
    TEST_ASSERT_FALSE(is_allergic_to(ALLERGEN_PEANUTS, 5));
    ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity.h:128:100: note: expanded from macro 'TEST_ASSERT_FALSE'
#define TEST_ASSERT_FALSE(condition)                                                               UNITY_TEST_ASSERT(      !(condition), __LINE__, " Expected FALSE Was TRUE")
                                                                                                   ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity_internals.h:775:98: note: expanded from macro 'UNITY_TEST_ASSERT'
#define UNITY_TEST_ASSERT(condition, line, message)                                              do {if (condition) {} else {UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), (message));}} while(0)
                                                                                                 ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test_allergies.c:64:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
    TEST_ASSERT_TRUE(is_allergic_to(ALLERGEN_PEANUTS, 255));
    ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity.h:126:100: note: expanded from macro 'TEST_ASSERT_TRUE'
#define TEST_ASSERT_TRUE(condition)                                                                UNITY_TEST_ASSERT(       (condition), __LINE__, " Expected TRUE Was FALSE")
                                                                                                   ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test-framework/unity_internals.h:775:98: note: expanded from macro 'UNITY_TEST_ASSERT'
#define UNITY_TEST_ASSERT(condition, line, message)                                              do {if (condition) {} else {UNITY_TEST_FAIL((UNITY_LINE_TYPE)(line), (message));}} while(0)
                                                                                                 ^
/home/vpayno/git_vpayno/exercism-workspace/c/allergies/test_allergies.c:70:5: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
    TEST_ASSERT_FALSE(is_allergic_to(ALLERGEN_SHELLFISH, 0));
    ^

real	0m0.205s
user	0m0.182s
sys	0m0.025s

===============================================================================

Running: clang-format-16 -style=file -i ./allergies.c ./test_allergies.c ./allergies.h

real	0m0.025s
user	0m0.012s
sys	0m0.012s

===============================================================================

