#!/bin/bash

shopt -s nullglob

if [[ ! -d .exercism ]]; then
	printf "ERROR: Run from inside a project directory.\n\n"
	exit 1
fi

declare package_name
declare project_dir

get_c_package_name() {
	basename "${PWD}"
} # get_c_package_name()

package_name="$(get_c_package_name)"
project_dir="$(basename "${PWD}")"

if ! grep -q ./"${project_dir}"/README.md ../README.md; then

	cat >>../README.md <<EOF
- [${project_dir}](./${project_dir}/README.md)
EOF

fi

if ! grep -q 'My Solution' ./README.md; then
	if ! grep -q ./"${package_name}"-doc.md ./README.md; then

		# Two empty spaces because the file is missing a trailing new line.
		cat >>./README.md <<EOF


### My Solution

- [my solution]($(printf "%s\n" ./*[.]c | grep -v -E "test.*[.]c"))
EOF

		cat >>./README.md <<EOF
- [run-tests](./run-tests-c.txt)
EOF

	fi
fi

printf "\n"
git add ../README.md ./README.md
git diff --cached ../README.md ./README.md

if ! grep -q '// TEST_IGNORE' ./test_*.c; then
	sed -r -i -e 's:(TEST_IGNORE):// \1:g' ./test_*.c
fi

if [[ ! -f ./compile_commands.json ]]; then
	jq . >./compile_commands.json <<EOF
[
      {
            "directory": ".",
            "arguments": [
                  "/usr/bin/clang-16",
                  "-Irelative",
                  "-DSOMEDEF=With spaces, quotes and -es.",
                  "-c",
                  "-o",
                  "${package_name}.o",
                  "${package_name}.c"
            ],
            "file": "${package_name}.c"
      }
]
EOF
fi

git add .
git status .
