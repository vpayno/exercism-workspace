#!/bin/bash
#
# .github/citools/common/gh-setup-env
#

# shellcheck disable=SC1091
source ../../.github/citools/includes/wrapper-library || exit

declare -i retval=0

main() {
	printf "Setup GitHub Environment\n\n"

	if [[ -z ${GITHUB_PATH} || -z ${GITHUB_ENV} ]]; then
		printf "Skipping since we aren't running directly in a GH CI Workflow.\n"
		return
	fi

	print_ruler

	printf "Adding Go paths to GITHUB_PATH...\n"
	printf "%s\n" "/usr/local/go/bin" | tee -a "${GITHUB_PATH}"

	print_ruler

	printf "Adding Go paths to GITHUB_ENV...\n"
	printf "%s=%s\n" "GOPATH" "/usr/local/go" | tee -a "${GITHUB_ENV}"
	printf "%s=%s\n" "GOBIN" "/usr/local/go/bin" | tee -a "${GITHUB_ENV}"
	printf "%s=%s\n" "GOSRC" "/usr/local/go/src" | tee -a "${GITHUB_ENV}"

	if [ "${HOSTTYPE}" = x86_64 ]; then
		printf "%s=%s\n" "GOARCH" "amd64" | tee -a "${GITHUB_ENV}"
	elif [ "${HOSTTYPE}" = i686 ]; then
		printf "%s=%s\n" "GOARCH" "i386" | tee -a "${GITHUB_ENV}"
	elif [ "${HOSTTYPE}" = aarch64 ]; then
		printf "%s=%s\n" "GOARCH" "arm64" | tee -a "${GITHUB_ENV}"
	fi

	print_ruler

	printf "Adding Rust paths to GITHUB_PATH...\n"
	printf "%s\n" "/usr/local/cargo/bin" | tee -a "${GITHUB_PATH}"

	print_ruler

	printf "Adding Ruby paths to GITHUB_PATH...\n"
	printf "%s\n" "/usr/local/rbenv/bin" "/usr/local/rbenv/shims" | tee -a "${GITHUB_PATH}"

	print_ruler

	tail -n 1000 -v "${GITHUB_PATH}"

	print_ruler

	echo Exit code: "${retval}"
	return "${retval}"
}

time main "${@}"
