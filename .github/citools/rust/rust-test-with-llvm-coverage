#!/bin/bash

print_ruler() {
	printf "\n"
	printf "=%.0s" {1..79}
	printf "\n"
	printf "\n"
} # print_ruler()

get_rust_package_name() {
	toml get Cargo.toml package | jq -r .name
} # get_rust_package_name()

declare PACKAGE_NAME
PACKAGE_NAME="$(get_rust_package_name)"

printf "\nRunning Rust Tests With LLVM Coverage\n\n"

echo Running: cargo clean
time cargo clean

print_ruler

echo cargo llvm-cov clean --workspace
cargo llvm-cov clean --workspace

print_ruler

echo rm -fv ./*.profraw ./*.profdata
rm -fv ./*.profraw ./*.profdata

print_ruler

echo RUSTFLAGS="\"-C instrument-coverage\""
export RUSTFLAGS="-C instrument-coverage"

echo RUSTDOCFLAGS="\"-C instrument-coverage\""
export RUSTDOCFLAGS="-C instrument-coverage"

print_ruler

# https://doc.rust-lang.org/cargo/commands/cargo-test.html

echo Running: cargo test
time cargo test

print_ruler

# https://doc.rust-lang.org/rustc/instrument-coverage.html

echo Running: llvm-profdata-16 merge -sparse default_*.profraw -o "${PACKAGE_NAME}.profdata"
time llvm-profdata-16 merge -sparse default_*.profraw -o "${PACKAGE_NAME}.profdata"

print_ruler

echo cargo llvm-cov
cargo llvm-cov

print_ruler

echo cargo llvm-cov --text
cargo llvm-cov --text

print_ruler

echo cargo llvm-cov --all-features --workspace --lcov --output-path report.lcov
cargo llvm-cov --all-features --workspace --lcov --output-path report.lcov
printf "\n"
echo lcov --summary report.lcov
lcov --summary report.lcov

print_ruler

echo rm -fv ./*.profraw ./*.profdata
rm -fv ./*.profraw ./*.profdata

print_ruler

echo cargo llvm-cov clean --workspace
cargo llvm-cov clean --workspace

print_ruler
