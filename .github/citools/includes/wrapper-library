#!/bin/bash
#
# .github/citools/includes/wrapper-library
#

set -o pipefail

md_code_tag() {
	if [[ -n ${GITHUB_STEP_SUMMARY} ]]; then
		printf "\`\`\`%s\n" "${1}"

		if [[ -z ${1} ]]; then
			printf "\n"
		fi
	fi
} # md_code_tag()

run_command() {
	# md_code_tag text
	echo Running: "${@}"
	printf "\n"
	# shellcheck disable=SC2154
	time "${@}" || ((retval--))
	printf "\n"
	# md_code_tag
} # run_command()

print_ruler() {
	printf "\n "
	printf "=%.0s" {1..78}
	printf "\n"
	printf "\n"
} # print_ruler()

get_rust_package_name() {
	toml get Cargo.toml package | jq -r .name
} # get_rust_package_name()

show_tool_versions_rust() {
	# md_code_tag text
	printf "Rust version:\n"
	printf "\n"
	rustc --version | paste /dev/null -
	printf "\n"
	# md_code_tag

	# md_code_tag text
	printf "Installed cargo crates:\n"
	printf "\n"
	cargo install --list | paste /dev/null -
	printf "\n"
	# md_code_tag

	# md_code_tag text
	rustup --version
	printf "\n"
	# md_code_tag

	# md_code_tag text
	printf "Installed rustup components:\n"
	printf "\n"
	rustup component list | grep '(installed)' | paste /dev/null -
	printf "\n"
	# md_code_tag

	# md_code_tag text
	printf "Environment variables:\n"
	printf "\n"
	printf "%s=%s\n" "PATH" "${PATH}"
	printf "\n"
	printf "%s=%s\n" "CARGO_REGISTRIES_CRATES_IO_PROTOCOL" "${CARGO_REGISTRIES_CRATES_IO_PROTOCOL}" "RUSTC_WRAPPER" "${RUSTC_WRAPPER}"
	printf "\n"
	# md_code_tag
} # show_tool_versions_rust()
