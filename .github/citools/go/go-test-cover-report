#!/bin/bash
#
# .github/citools/go/go-test-cover-report
#

# go install golang.org/x/tools/cmd/cover@latest
# go install github.com/rakyll/gotest@latest
# go install github.com/axw/gocov/gocov@latest

# shellcheck disable=SC1091
source ../../.github/citools/includes/wrapper-library || exit

declare -i retval=0

cover_annotate() {
	echo Running: gocov convert coverage.out '|' gocov annotate -ceiling=100 - '|' tee coverage-annotations.txt
	time gocov convert coverage.out | gocov annotate -ceiling=100 - | tee coverage-annotations.txt
} # cover_annotate()

main() {
	printf "\nRunning Go Test, Coverage & Reports\n\n"

	show_tool_versions_go_short

	print_ruler

	run_command go clean ./...

	print_ruler

	run_command gotest -v -covermode=count -coverprofile coverage.out ./...

	print_ruler

	run_command go tool cover -func=coverage.out

	print_ruler

	run_command go tool cover -html coverage.out -o coverage.html

	print_ruler

	run_command cover_annotate

	print_ruler

	run_command gotest -v -race -covermode=atomic ./...

	print_ruler

	echo Exit code: "${retval}"
	return "${retval}"
}

time main "${@}"
