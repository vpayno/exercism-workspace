name: Tcl Workflow

on:
  pull_request:

jobs:
  stage1:
    name: Change Check

    runs-on: 'ubuntu-latest'

    outputs:
      docs_changed: ${{ steps.check_file_changed.outputs.docs_changed }}

    steps:
    - name: Checkout Repo
      id: checkout-repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.ref }}
        submodules: recursive

    - name: Get Change List
      id: check_file_changed
      shell: pwsh
      run: |
        # https://www.meziantou.net/executing-github-actions-jobs-or-steps-only-when-specific-files-change.htm#conditional-jobs

        # Diff HEAD with the previous commit then output to stdout.
        echo "=== Which files changed? ===" | Out-String -Stream
        ([string[]] $diff = git diff --name-only HEAD^ HEAD)

        # Check if the files are present in the changed file list (added, modified, deleted) then output to stdout.
        echo "=== Which Tcl files changed? ===" | Out-String -Stream
        ([string[]] $SourceDiff = $diff | Where-Object { $_ -match '^.*[.]tcl$' })

        # Did Tcl files change?
        echo "=== Did Tcl files change? ===" | Out-String -Stream
        ([string[]] $HasDiff = $SourceDiff.Length -gt 0)

        # Set the output named "docs_changed"
        Write-Host "::set-output name=docs_changed::$HasDiff"

  stage2:
    name: Tcl Checks
    strategy:
      matrix:
        os: ["ubuntu-latest"]

    runs-on: "${{ matrix.os }}"

    needs: [ stage1 ]
    if: needs.stage1.outputs.docs_changed == 'True'

    steps:
    - name: Checkout Repo
      id: checkout-repo
      uses: actions/checkout@v3

    - name: Set up Tcl
      id: setup-tcl
      run: |
        sudo apt install -y tcl

    - name: Show Tcl version
      id: tcl-version
      run: |
        tclsh <<< 'puts [info patchlevel];exit 0'
        tclsh <<< 'puts $tcl_version;exit 0'

    - name: Install Tcl Tools
      id: install-tcl-tools
      run: |
        ./.github/citools/tcl/nagelfar -h | grep -- Version

    - name: CD to Tcl Dir
      id: cd-to-tcl-dir
      run: |
        pwd
        ls
        cd ./tcl
        pwd
        ls

    - name: Analysing the code with lint
      id: tcl-lint
      run: |
        cd ./tcl
        ./for_each ../../.github/citools/tcl/tcl-check

    - name: Testing with Tcl test
      id: tcl-test-run
      run: |
        cd ./tcl
        ./for_each ../../.github/citools/tcl/tcl-test
