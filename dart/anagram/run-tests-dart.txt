Running automated test file(s):


===============================================================================

dart pub global activate dart_style
Package dart_style is currently active at version 2.2.5.
Resolving dependencies...
The package dart_style is already activated at newest available version.
To recompile executables, first run `dart pub global deactivate dart_style`.
Installed executables dartfmt and dartformat.
Activated dart_style 2.2.5.

real	0m0.841s
user	0m0.843s
sys	0m0.216s

===============================================================================

Running: dart analyze ./lib
Analyzing lib...
No issues found!

real	0m0.634s
user	0m0.741s
sys	0m0.216s

===============================================================================

Running: dart analyze ./test
Analyzing test...
No issues found!

real	0m0.705s
user	0m0.853s
sys	0m0.204s

===============================================================================

rm -rf ./coverage

real	0m0.001s
user	0m0.000s
sys	0m0.001s

===============================================================================

Running: dart test --run-skipped --no-color .
00:00 +0: loading ./test/anagram_test.dart                                                                                                                                                             00:00 +0: ./test/anagram_test.dart: Anagram no matches                                                                                                                                                 00:00 +1: ./test/anagram_test.dart: Anagram no matches                                                                                                                                                 00:00 +1: ./test/anagram_test.dart: Anagram detects two anagrams                                                                                                                                       00:00 +1 -1: ./test/anagram_test.dart: Anagram detects two anagrams [E]                                                                                                                                
  Expected: ['lemons', 'melons']
    Actual: []
     Which: at location [0] is [] which shorter than expected
  
  package:matcher              expect
  test/anagram_test.dart 17:7  main.<fn>.<fn>
  

To run this test again: /home/vpayno/git_remote/flutter/bin/cache/dart-sdk/bin/dart test ./test/anagram_test.dart -p vm --plain-name 'Anagram detects two anagrams'
00:00 +1 -1: ./test/anagram_test.dart: Anagram does not detect anagram subsets                                                                                                                         00:00 +2 -1: ./test/anagram_test.dart: Anagram does not detect anagram subsets                                                                                                                         00:00 +2 -1: ./test/anagram_test.dart: Anagram detects anagram                                                                                                                                         00:00 +2 -2: ./test/anagram_test.dart: Anagram detects anagram [E]                                                                                                                                     
  Expected: ['inlets']
    Actual: []
     Which: at location [0] is [] which shorter than expected
  
  package:matcher              expect
  test/anagram_test.dart 28:7  main.<fn>.<fn>
  

To run this test again: /home/vpayno/git_remote/flutter/bin/cache/dart-sdk/bin/dart test ./test/anagram_test.dart -p vm --plain-name 'Anagram detects anagram'
00:00 +2 -2: ./test/anagram_test.dart: Anagram detects three anagrams                                                                                                                                  00:00 +2 -3: ./test/anagram_test.dart: Anagram detects three anagrams [E]                                                                                                                              
  Expected: ['gallery', 'regally', 'largely']
    Actual: []
     Which: at location [0] is [] which shorter than expected
  
  package:matcher              expect
  test/anagram_test.dart 40:7  main.<fn>.<fn>
  

To run this test again: /home/vpayno/git_remote/flutter/bin/cache/dart-sdk/bin/dart test ./test/anagram_test.dart -p vm --plain-name 'Anagram detects three anagrams'
00:00 +2 -3: ./test/anagram_test.dart: Anagram detects multiple anagrams with different case                                                                                                           00:00 +2 -4: ./test/anagram_test.dart: Anagram detects multiple anagrams with different case [E]                                                                                                       
  Expected: ['Eons', 'ONES']
    Actual: []
     Which: at location [0] is [] which shorter than expected
  
  package:matcher              expect
  test/anagram_test.dart 45:7  main.<fn>.<fn>
  

To run this test again: /home/vpayno/git_remote/flutter/bin/cache/dart-sdk/bin/dart test ./test/anagram_test.dart -p vm --plain-name 'Anagram detects multiple anagrams with different case'
00:00 +2 -4: ./test/anagram_test.dart: Anagram does not detect non-anagrams with identical checksum                                                                                                    00:00 +3 -4: ./test/anagram_test.dart: Anagram does not detect non-anagrams with identical checksum                                                                                                    00:00 +3 -4: ./test/anagram_test.dart: Anagram detects anagrams case-insensitively                                                                                                                     00:00 +3 -5: ./test/anagram_test.dart: Anagram detects anagrams case-insensitively [E]                                                                                                                 
  Expected: ['Carthorse']
    Actual: []
     Which: at location [0] is [] which shorter than expected
  
  package:matcher              expect
  test/anagram_test.dart 56:7  main.<fn>.<fn>
  

To run this test again: /home/vpayno/git_remote/flutter/bin/cache/dart-sdk/bin/dart test ./test/anagram_test.dart -p vm --plain-name 'Anagram detects anagrams case-insensitively'
00:00 +3 -5: ./test/anagram_test.dart: Anagram detects anagrams using case-insensitive subject                                                                                                         00:00 +3 -6: ./test/anagram_test.dart: Anagram detects anagrams using case-insensitive subject [E]                                                                                                     
  Expected: ['carthorse']
    Actual: []
     Which: at location [0] is [] which shorter than expected
  
  package:matcher              expect
  test/anagram_test.dart 62:7  main.<fn>.<fn>
  

To run this test again: /home/vpayno/git_remote/flutter/bin/cache/dart-sdk/bin/dart test ./test/anagram_test.dart -p vm --plain-name 'Anagram detects anagrams using case-insensitive subject'
00:00 +3 -6: ./test/anagram_test.dart: Anagram detects anagrams using case-insensitive possible matches                                                                                                00:00 +3 -7: ./test/anagram_test.dart: Anagram detects anagrams using case-insensitive possible matches [E]                                                                                            
  Expected: ['Carthorse']
    Actual: []
     Which: at location [0] is [] which shorter than expected
  
  package:matcher              expect
  test/anagram_test.dart 68:7  main.<fn>.<fn>
  

To run this test again: /home/vpayno/git_remote/flutter/bin/cache/dart-sdk/bin/dart test ./test/anagram_test.dart -p vm --plain-name 'Anagram detects anagrams using case-insensitive possible matches'
00:00 +3 -7: ./test/anagram_test.dart: Anagram does not detect an anagram if the original word is repeated                                                                                             00:00 +4 -7: ./test/anagram_test.dart: Anagram does not detect an anagram if the original word is repeated                                                                                             00:00 +4 -7: ./test/anagram_test.dart: Anagram anagrams must use all letters exactly once                                                                                                              00:00 +5 -7: ./test/anagram_test.dart: Anagram anagrams must use all letters exactly once                                                                                                              00:00 +5 -7: ./test/anagram_test.dart: Anagram words are not anagrams of themselves                                                                                                                    00:00 +6 -7: ./test/anagram_test.dart: Anagram words are not anagrams of themselves                                                                                                                    00:00 +6 -7: ./test/anagram_test.dart: Anagram words are not anagrams of themselves even if letter case is partially different                                                                         00:00 +7 -7: ./test/anagram_test.dart: Anagram words are not anagrams of themselves even if letter case is partially different                                                                         00:00 +7 -7: ./test/anagram_test.dart: Anagram words are not anagrams of themselves even if letter case is completely different                                                                        00:00 +8 -7: ./test/anagram_test.dart: Anagram words are not anagrams of themselves even if letter case is completely different                                                                        00:00 +8 -7: ./test/anagram_test.dart: Anagram words other than themselves can be anagrams                                                                                                             00:00 +8 -8: ./test/anagram_test.dart: Anagram words other than themselves can be anagrams [E]                                                                                                         
  Expected: ['Silent']
    Actual: []
     Which: at location [0] is [] which shorter than expected
  
  package:matcher               expect
  test/anagram_test.dart 103:7  main.<fn>.<fn>
  

To run this test again: /home/vpayno/git_remote/flutter/bin/cache/dart-sdk/bin/dart test ./test/anagram_test.dart -p vm --plain-name 'Anagram words other than themselves can be anagrams'
00:00 +8 -8: Some tests failed.                                                                                                                                                                        

Consider enabling the flag chain-stack-traces to receive more detailed exceptions.
For example, 'dart test --chain-stack-traces'.

real	0m1.076s
user	0m1.187s
sys	0m0.386s

===============================================================================

dart pub global activate coverage
Package coverage is currently active at version 1.6.3.
Resolving dependencies...
The package coverage is already activated at newest available version.
To recompile executables, first run `dart pub global deactivate coverage`.
Installed executables collect_coverage, format_coverage and test_with_coverage.
Activated coverage 1.6.3.

real	0m1.636s
user	0m0.679s
sys	0m0.189s

===============================================================================

Running: dart pub global run coverage:test_with_coverage
The Dart VM service is listening on http://127.0.0.1:8181/
The Dart DevTools debugger and profiler is available at: http://127.0.0.1:8181/devtools/#/?uri=ws%3A%2F%2F127.0.0.1%3A8181%2Fws
00:00 [32m+0[0m: [1m[90mloading test/anagram_test.dart[0m[0m                                                                                                                                                               00:00 [32m+0[0m: test/anagram_test.dart: Anagram no matches[0m                                                                                                                                                   00:00 [32m+1[0m: test/anagram_test.dart: Anagram no matches[0m                                                                                                                                                   00:00 [32m+1[0m: test/anagram_test.dart: Anagram detects two anagrams[0m                                                                                                                                         00:00 [32m+1[0m[33m ~1[0m: test/anagram_test.dart: Anagram detects two anagrams[0m                                                                                                                                      00:00 [32m+1[0m[33m ~1[0m: test/anagram_test.dart: Anagram does not detect anagram subsets[0m                                                                                                                           00:00 [32m+1[0m[33m ~2[0m: test/anagram_test.dart: Anagram does not detect anagram subsets[0m                                                                                                                           00:00 [32m+1[0m[33m ~2[0m: test/anagram_test.dart: Anagram detects anagram[0m                                                                                                                                           00:00 [32m+1[0m[33m ~3[0m: test/anagram_test.dart: Anagram detects anagram[0m                                                                                                                                           00:00 [32m+1[0m[33m ~3[0m: test/anagram_test.dart: Anagram detects three anagrams[0m                                                                                                                                    00:00 [32m+1[0m[33m ~4[0m: test/anagram_test.dart: Anagram detects three anagrams[0m                                                                                                                                    00:00 [32m+1[0m[33m ~4[0m: test/anagram_test.dart: Anagram detects multiple anagrams with different case[0m                                                                                                             00:00 [32m+1[0m[33m ~5[0m: test/anagram_test.dart: Anagram detects multiple anagrams with different case[0m                                                                                                             00:00 [32m+1[0m[33m ~5[0m: test/anagram_test.dart: Anagram does not detect non-anagrams with identical checksum[0m                                                                                                      00:00 [32m+1[0m[33m ~6[0m: test/anagram_test.dart: Anagram does not detect non-anagrams with identical checksum[0m                                                                                                      00:00 [32m+1[0m[33m ~6[0m: test/anagram_test.dart: Anagram detects anagrams case-insensitively[0m                                                                                                                       00:00 [32m+1[0m[33m ~7[0m: test/anagram_test.dart: Anagram detects anagrams case-insensitively[0m                                                                                                                       00:00 [32m+1[0m[33m ~7[0m: test/anagram_test.dart: Anagram detects anagrams using case-insensitive subject[0m                                                                                                           00:00 [32m+1[0m[33m ~8[0m: test/anagram_test.dart: Anagram detects anagrams using case-insensitive subject[0m                                                                                                           00:00 [32m+1[0m[33m ~8[0m: test/anagram_test.dart: Anagram detects anagrams using case-insensitive possible matches[0m                                                                                                  00:00 [32m+1[0m[33m ~9[0m: test/anagram_test.dart: Anagram detects anagrams using case-insensitive possible matches[0m                                                                                                  00:00 [32m+1[0m[33m ~9[0m: test/anagram_test.dart: Anagram does not detect an anagram if the original word is repeated[0m                                                                                               00:00 [32m+1[0m[33m ~10[0m: test/anagram_test.dart: Anagram does not detect an anagram if the original word is repeated[0m                                                                                              00:00 [32m+1[0m[33m ~10[0m: test/anagram_test.dart: Anagram anagrams must use all letters exactly once[0m                                                                                                               00:00 [32m+1[0m[33m ~11[0m: test/anagram_test.dart: Anagram anagrams must use all letters exactly once[0m                                                                                                               00:00 [32m+1[0m[33m ~11[0m: test/anagram_test.dart: Anagram words are not anagrams of themselves[0m                                                                                                                     00:00 [32m+1[0m[33m ~12[0m: test/anagram_test.dart: Anagram words are not anagrams of themselves[0m                                                                                                                     00:00 [32m+1[0m[33m ~12[0m: test/anagram_test.dart: Anagram words are not anagrams of themselves even if letter case is partially different[0m                                                                          00:00 [32m+1[0m[33m ~13[0m: test/anagram_test.dart: Anagram words are not anagrams of themselves even if letter case is partially different[0m                                                                          00:00 [32m+1[0m[33m ~13[0m: test/anagram_test.dart: Anagram words are not anagrams of themselves even if letter case is completely different[0m                                                                         00:00 [32m+1[0m[33m ~14[0m: test/anagram_test.dart: Anagram words are not anagrams of themselves even if letter case is completely different[0m                                                                         00:00 [32m+1[0m[33m ~14[0m: test/anagram_test.dart: Anagram words other than themselves can be anagrams[0m                                                                                                              00:00 [32m+1[0m[33m ~15[0m: test/anagram_test.dart: Anagram words other than themselves can be anagrams[0m                                                                                                              00:00 [32m+1[0m[33m ~15[0m: All tests passed![0m                                                                                                                                                                        

real	0m1.947s
user	0m2.039s
sys	0m0.512s

===============================================================================

dart run test --run-skipped --no-color --coverage=./coverage
00:00 +0: loading test/anagram_test.dart                                                                                                                                                               00:00 +0: test/anagram_test.dart: Anagram no matches                                                                                                                                                   00:00 +1: test/anagram_test.dart: Anagram no matches                                                                                                                                                   00:00 +1: test/anagram_test.dart: Anagram detects two anagrams                                                                                                                                         00:00 +1 -1: test/anagram_test.dart: Anagram detects two anagrams [E]                                                                                                                                  
  Expected: ['lemons', 'melons']
    Actual: []
     Which: at location [0] is [] which shorter than expected
  
  package:matcher              expect
  test/anagram_test.dart 17:7  main.<fn>.<fn>
  

To run this test again: /home/vpayno/git_remote/flutter/bin/cache/dart-sdk/bin/dart test test/anagram_test.dart -p vm --plain-name 'Anagram detects two anagrams'
00:00 +1 -1: test/anagram_test.dart: Anagram does not detect anagram subsets                                                                                                                           00:00 +2 -1: test/anagram_test.dart: Anagram does not detect anagram subsets                                                                                                                           00:00 +2 -1: test/anagram_test.dart: Anagram detects anagram                                                                                                                                           00:00 +2 -2: test/anagram_test.dart: Anagram detects anagram [E]                                                                                                                                       
  Expected: ['inlets']
    Actual: []
     Which: at location [0] is [] which shorter than expected
  
  package:matcher              expect
  test/anagram_test.dart 28:7  main.<fn>.<fn>
  

To run this test again: /home/vpayno/git_remote/flutter/bin/cache/dart-sdk/bin/dart test test/anagram_test.dart -p vm --plain-name 'Anagram detects anagram'
00:00 +2 -2: test/anagram_test.dart: Anagram detects three anagrams                                                                                                                                    00:00 +2 -3: test/anagram_test.dart: Anagram detects three anagrams [E]                                                                                                                                
  Expected: ['gallery', 'regally', 'largely']
    Actual: []
     Which: at location [0] is [] which shorter than expected
  
  package:matcher              expect
  test/anagram_test.dart 40:7  main.<fn>.<fn>
  

To run this test again: /home/vpayno/git_remote/flutter/bin/cache/dart-sdk/bin/dart test test/anagram_test.dart -p vm --plain-name 'Anagram detects three anagrams'
00:00 +2 -3: test/anagram_test.dart: Anagram detects multiple anagrams with different case                                                                                                             00:00 +2 -4: test/anagram_test.dart: Anagram detects multiple anagrams with different case [E]                                                                                                         
  Expected: ['Eons', 'ONES']
    Actual: []
     Which: at location [0] is [] which shorter than expected
  
  package:matcher              expect
  test/anagram_test.dart 45:7  main.<fn>.<fn>
  

To run this test again: /home/vpayno/git_remote/flutter/bin/cache/dart-sdk/bin/dart test test/anagram_test.dart -p vm --plain-name 'Anagram detects multiple anagrams with different case'
00:00 +2 -4: test/anagram_test.dart: Anagram does not detect non-anagrams with identical checksum                                                                                                      00:00 +3 -4: test/anagram_test.dart: Anagram does not detect non-anagrams with identical checksum                                                                                                      00:00 +3 -4: test/anagram_test.dart: Anagram detects anagrams case-insensitively                                                                                                                       00:00 +3 -5: test/anagram_test.dart: Anagram detects anagrams case-insensitively [E]                                                                                                                   
  Expected: ['Carthorse']
    Actual: []
     Which: at location [0] is [] which shorter than expected
  
  package:matcher              expect
  test/anagram_test.dart 56:7  main.<fn>.<fn>
  

To run this test again: /home/vpayno/git_remote/flutter/bin/cache/dart-sdk/bin/dart test test/anagram_test.dart -p vm --plain-name 'Anagram detects anagrams case-insensitively'
00:00 +3 -5: test/anagram_test.dart: Anagram detects anagrams using case-insensitive subject                                                                                                           00:00 +3 -6: test/anagram_test.dart: Anagram detects anagrams using case-insensitive subject [E]                                                                                                       
  Expected: ['carthorse']
    Actual: []
     Which: at location [0] is [] which shorter than expected
  
  package:matcher              expect
  test/anagram_test.dart 62:7  main.<fn>.<fn>
  

To run this test again: /home/vpayno/git_remote/flutter/bin/cache/dart-sdk/bin/dart test test/anagram_test.dart -p vm --plain-name 'Anagram detects anagrams using case-insensitive subject'
00:00 +3 -6: test/anagram_test.dart: Anagram detects anagrams using case-insensitive possible matches                                                                                                  00:00 +3 -7: test/anagram_test.dart: Anagram detects anagrams using case-insensitive possible matches [E]                                                                                              
  Expected: ['Carthorse']
    Actual: []
     Which: at location [0] is [] which shorter than expected
  
  package:matcher              expect
  test/anagram_test.dart 68:7  main.<fn>.<fn>
  

To run this test again: /home/vpayno/git_remote/flutter/bin/cache/dart-sdk/bin/dart test test/anagram_test.dart -p vm --plain-name 'Anagram detects anagrams using case-insensitive possible matches'
00:00 +3 -7: test/anagram_test.dart: Anagram does not detect an anagram if the original word is repeated                                                                                               00:00 +4 -7: test/anagram_test.dart: Anagram does not detect an anagram if the original word is repeated                                                                                               00:00 +4 -7: test/anagram_test.dart: Anagram anagrams must use all letters exactly once                                                                                                                00:00 +5 -7: test/anagram_test.dart: Anagram anagrams must use all letters exactly once                                                                                                                00:00 +5 -7: test/anagram_test.dart: Anagram words are not anagrams of themselves                                                                                                                      00:00 +6 -7: test/anagram_test.dart: Anagram words are not anagrams of themselves                                                                                                                      00:00 +6 -7: test/anagram_test.dart: Anagram words are not anagrams of themselves even if letter case is partially different                                                                           00:00 +7 -7: test/anagram_test.dart: Anagram words are not anagrams of themselves even if letter case is partially different                                                                           00:00 +7 -7: test/anagram_test.dart: Anagram words are not anagrams of themselves even if letter case is completely different                                                                          00:00 +8 -7: test/anagram_test.dart: Anagram words are not anagrams of themselves even if letter case is completely different                                                                          00:00 +8 -7: test/anagram_test.dart: Anagram words other than themselves can be anagrams                                                                                                               00:00 +8 -8: test/anagram_test.dart: Anagram words other than themselves can be anagrams [E]                                                                                                           
  Expected: ['Silent']
    Actual: []
     Which: at location [0] is [] which shorter than expected
  
  package:matcher               expect
  test/anagram_test.dart 103:7  main.<fn>.<fn>
  

To run this test again: /home/vpayno/git_remote/flutter/bin/cache/dart-sdk/bin/dart test test/anagram_test.dart -p vm --plain-name 'Anagram words other than themselves can be anagrams'
00:01 +8 -8: Some tests failed.                                                                                                                                                                        

Consider enabling the flag chain-stack-traces to receive more detailed exceptions.
For example, 'dart test --chain-stack-traces'.

real	0m2.027s
user	0m2.349s
sys	0m0.449s

===============================================================================

dart pub global run coverage:format_coverage --packages=.dart_tool/package_config.json --report-on=lib --lcov -o ./coverage/lcov.info -i ./coverage

real	0m0.389s
user	0m0.475s
sys	0m0.140s

===============================================================================

Running: lcov --summary ./coverage/lcov.info
Reading tracefile ./coverage/lcov.info
Summary coverage rate:
  lines......: 92.9% (13 of 14 lines)
  functions..: no data found
  branches...: no data found

real	0m0.036s
user	0m0.030s
sys	0m0.006s

===============================================================================

genhtml -o ./coverage/report ./coverage/lcov.info
Reading data file ./coverage/lcov.info
Found 1 entries.
Found common filename prefix "/home/vpayno/git_vpayno/exercism-workspace/dart/anagram"
Writing .css and .png files.
Generating output.
Processing file lib/anagram.dart
Writing directory view page.
Overall coverage rate:
  lines......: 92.9% (13 of 14 lines)
  functions..: no data found

real	0m0.040s
user	0m0.028s
sys	0m0.012s

===============================================================================

Running: misspell .

real	0m0.070s
user	0m0.167s
sys	0m0.018s

===============================================================================

Running: dart doc .
Documenting anagram...
Initialized dartdoc with 40 libraries
Generating docs for library anagram from package:anagram/anagram.dart...
no issues found
Documented 1 public library in 11.6 seconds
Success! Docs generated into /home/vpayno/git_vpayno/exercism-workspace/dart/anagram/doc/api

real	0m11.824s
user	0m17.422s
sys	0m1.424s

===============================================================================

