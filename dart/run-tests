#!/bin/bash

print_ruler() {
	printf "\n"
	printf "=%.0s" {1..79}
	printf "\n"
	printf "\n"
} # print_ruler()

main() {
	printf "Running automated test file(s):\n\n"

	print_ruler

	# https://github.com/dart-lang/linter

	echo Running: dart analyze .
	time dart analyze .

	print_ruler

	echo rm -rf ./coverage
	time rm -rf ./coverage

	print_ruler

	# https://github.com/dart-lang/test

	echo Running: dart test --run-skipped --no-color .
	time dart test --run-skipped --no-color .

	print_ruler

	echo dart pub global activate coverage
	time dart pub global activate coverage

	print_ruler

	# https://github.com/dart-lang/coverage
	# dart pub global activate coverage
	# note: can't find a way to run skipped tests when testing coverage

	echo Running: dart pub global run coverage:test_with_coverage
	time dart pub global run coverage:test_with_coverage

	print_ruler

	echo dart run test --run-skipped --no-color --coverage=./coverage
	time dart run test --run-skipped --no-color --coverage=./coverage

	print_ruler

	# https://pub.dev/packages/test
	echo dart pub global run coverage:format_coverage --packages=.dart_tool/package_config.json --report-on=lib --lcov -o ./coverage/lcov.info -i ./coverage
	time dart pub global run coverage:format_coverage --packages=.dart_tool/package_config.json --report-on=lib --lcov -o ./coverage/lcov.info -i ./coverage

	print_ruler

	# https://github.com/linux-test-project/lcov

	echo Running: lcov --summary ./coverage/lcov.info
	time lcov --summary ./coverage/lcov.info

	print_ruler

	echo genhtml -o ./coverage/report ./coverage/lcov.info
	time genhtml -o ./coverage/report ./coverage/lcov.info

	print_ruler

	# go install github.com/client9/misspell/cmd/misspell@latest

	echo Running: misspell .
	time misspell .

	print_ruler

	# https://github.com/dart-lang/pana
	# dart pub global activate pana

	#echo Running: dart pub global run pana --no-warning .
	#time dart pub global run pana --no-warning .

	#print_ruler

	# https://github.com/dart-lang/dartdoc

	echo Running: dart doc .
	time dart doc .

	print_ruler
} # main()

time main "$@" |& tee ./run-tests-dart.txt
