Running automated test file(s):


===============================================================================

Running: pylint ./src

--------------------------------------------------------------------
Your code has been rated at 10.00/10 (previous run: 10.00/10, +0.00)


real	0m0.787s
user	0m0.700s
sys	0m0.087s

===============================================================================

Running: ruff check --ignore E501 ./src

real	0m0.095s
user	0m0.037s
sys	0m0.061s

===============================================================================

Running: pyright --stats ./src
Found 3 source files
pyright 1.1.347
0 errors, 0 warnings, 0 informations 
Completed in 0.635sec

Analysis stats
Total files parsed and bound: 22
Total files checked: 3

Timing stats
Find Source Files:    0sec
Read Source Files:    0.01sec
Tokenize:             0.04sec
Parse:                0.04sec
Resolve Imports:      0.06sec
Bind:                 0.04sec
Check:                0.12sec
Detect Cycles:        0sec

real	0m1.522s
user	0m1.341s
sys	0m0.210s

===============================================================================

Running: bandit --verbose --recursive ./src
[main]	INFO	profile include tests: None
[main]	INFO	profile exclude tests: None
[main]	INFO	cli include tests: None
[main]	INFO	cli exclude tests: None
[main]	INFO	running on Python 3.12.1
Run started:2024-01-17 16:44:52.085261
Files in scope (3):
	./src/cater_waiter/__init__.py (score: {SEVERITY: 0, CONFIDENCE: 0})
	./src/cater_waiter/sets.py (score: {SEVERITY: 0, CONFIDENCE: 0})
	./src/cater_waiter/sets_categories_data.py (score: {SEVERITY: 0, CONFIDENCE: 0})
Files excluded (2):
	./src/cater_waiter/__pycache__/__init__.cpython-312.pyc
	./src/cater_waiter/__pycache__/sets.cpython-312.pyc

Test results:
	No issues identified.

Code scanned:
	Total lines of code: 278
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 0
		Medium: 0
		High: 0
	Total issues (by confidence):
		Undefined: 0
		Low: 0
		Medium: 0
		High: 0
Files skipped (0):

real	0m0.315s
user	0m0.238s
sys	0m0.078s

===============================================================================

Running: refurb ./src

real	0m1.175s
user	0m1.092s
sys	0m0.085s

===============================================================================

python -m doctest -v ./src/cater_waiter/__init__.py ./src/cater_waiter/sets_categories_data.py ./src/cater_waiter/sets.py
1 items had no tests:
    __init__
0 tests in 1 items.
0 passed and 0 failed.
Test passed.
1 items had no tests:
    sets_categories_data
0 tests in 1 items.
0 passed and 0 failed.
Test passed.
8 items had no tests:
    sets
    sets.categorize_dish
    sets.check_drinks
    sets.clean_ingredients
    sets.compile_ingredients
    sets.separate_appetizers
    sets.singleton_ingredients
    sets.tag_special_ingredients
0 tests in 8 items.
0 passed and 0 failed.
Test passed.

real	0m0.150s
user	0m0.089s
sys	0m0.064s


===============================================================================

==> .coveragerc <==
[run]
omit = __init__.py, *_test.py

Running: PYTHONPATH=./src pytest --verbose --cov=. --cov-branch --cov-report=term-missing --cov-report=xml:.coverage.xml -p no:randomly ./test
============================= test session starts ==============================
platform linux -- Python 3.12.1, pytest-7.4.3, pluggy-1.3.0 -- /home/vpayno/.pyenv/versions/3.12.1/bin/python
cachedir: .pytest_cache
rootdir: /home/vpayno/git_vpayno/exercism-workspace/python/cater-waiter
configfile: pytest.ini
plugins: anyio-4.2.0, libtmux-0.25.0, pylama-8.4.1, cov-4.1.0, datafiles-3.0.0, docker-2.0.1, subprocess-1.5.0, typeguard-4.1.5
collecting ... collected 7 items

test/sets_test.py::SetsTest::test_categorize_dish PASSED                 [ 14%]
test/sets_test.py::SetsTest::test_check_drinks PASSED                    [ 28%]
test/sets_test.py::SetsTest::test_clean_ingredients PASSED               [ 42%]
test/sets_test.py::SetsTest::test_compile_ingredients PASSED             [ 57%]
test/sets_test.py::SetsTest::test_separate_appetizers PASSED             [ 71%]
test/sets_test.py::SetsTest::test_singleton_ingredients PASSED           [ 85%]
test/sets_test.py::SetsTest::test_tag_special_ingredients PASSED         [100%]

---------- coverage: platform linux, python 3.12.1-final-0 -----------
Name                      Stmts   Miss Branch BrPart  Cover   Missing
---------------------------------------------------------------------
sets.py                      29      2      9      2    89%   73, 92
sets_categories_data.py      14      0      0      0   100%
sets_test_data.py            41      0      4      2    96%   452->exit, 453->exit
---------------------------------------------------------------------
TOTAL                        84      2     13      4    94%
Coverage XML written to file .coverage.xml


============================== 7 passed in 0.21s ===============================

real	0m0.985s
user	0m0.861s
sys	0m0.123s

===============================================================================

Running: coverage report --show-missing
Name                      Stmts   Miss Branch BrPart  Cover   Missing
---------------------------------------------------------------------
sets.py                      29      2      9      2    89%   73, 92
sets_categories_data.py      14      0      0      0   100%
sets_test_data.py            41      0      4      2    96%   452->exit, 453->exit
---------------------------------------------------------------------
TOTAL                        84      2     13      4    94%

real	0m0.213s
user	0m0.156s
sys	0m0.059s

===============================================================================

coverage annotate

real	0m0.211s
user	0m0.146s
sys	0m0.068s

tail -n 10000 ./*,cover | grep -E -C 3 '^> def |^! '
  
> def clean_ingredients(dish_name: str, dish_ingredients: List[str]) -> Tuple[str, Set[str]]:
>     """Remove duplicates from `dish_ingredients`.
--
  
> def check_drinks(drink_name: str, drink_ingredients: List[str]) -> str:
>     """Append "Cocktail" (alcohol)  or "Mocktail" (no alcohol) to `drink_name`, based on `drink_ingredients`.
--
  
> def categorize_dish(dish_name: str, dish_ingredients: List[str]) -> str:
>     """Categorize `dish_name` based on `dish_ingredients`.
--
  
!     return ""  # it would be nicer if we could return an error like in Go or Rust
  
  
> def tag_special_ingredients(dish: Tuple[str, List[str]]) -> Tuple[str, Set[str]]:
>     """Compare `dish` ingredients to `SPECIAL_INGREDIENTS`.
--
  
!     return ("", set())  # it would be nicer if we could return an error like in Go or Rust
  
  
> def compile_ingredients(dishes: List[Set[str]]) -> Set[str]:
>     """Create a master list of ingredients.
--
  
> def separate_appetizers(dishes: List[str], appetizers: List[str]) -> List[str]:
>     """Determine which `dishes` are designated `appetizers` and remove them.
--
  
> def singleton_ingredients(dishes: List[Set[str]], intersection: List[str]) -> Set[str]:
>     """Determine which `dishes` have a singleton ingredient (an ingredient that only appears once across dishes).

===============================================================================

Running: misspell ./src/cater_waiter/__init__.py ./src/cater_waiter/sets_categories_data.py ./src/cater_waiter/sets.py

real	0m0.019s
user	0m0.018s
sys	0m0.011s

===============================================================================

