Running automated test file(s):


===============================================================================

Running: pylint --ignore-patterns (__init__|.*_test).py ./black_jack.py ./black_jack_test.py ./__init__.py

--------------------------------------------------------------------
Your code has been rated at 10.00/10 (previous run: 10.00/10, +0.00)


real	0m0.811s
user	0m0.743s
sys	0m0.071s

===============================================================================

Running: ruff check --ignore E501 ./black_jack.py ./black_jack_test.py ./__init__.py

real	0m0.076s
user	0m0.034s
sys	0m0.046s

===============================================================================

Running: pyright --stats .
No configuration file found.
No pyproject.toml file found.
Assuming Python platform Linux
Searching for source files
Found 3 source files
pyright 1.1.305
0 errors, 0 warnings, 0 informations 
Completed in 0.757sec

Analysis stats
Total files parsed and bound: 81
Total files checked: 3

Timing stats
Find Source Files:    0sec
Read Source Files:    0.01sec
Tokenize:             0.06sec
Parse:                0.07sec
Resolve Imports:      0.09sec
Bind:                 0.07sec
Check:                0.13sec
Detect Cycles:        0sec

real	0m1.613s
user	0m1.683s
sys	0m0.168s

===============================================================================

Running: bandit --verbose --recursive .
[main]	INFO	profile include tests: None
[main]	INFO	profile exclude tests: None
[main]	INFO	cli include tests: None
[main]	INFO	cli exclude tests: None
[main]	INFO	running on Python 3.11.3
Run started:2023-04-28 07:58:24.262823
Files in scope (3):
	./__init__.py (score: {SEVERITY: 0, CONFIDENCE: 0})
	./black_jack.py (score: {SEVERITY: 0, CONFIDENCE: 0})
	./black_jack_test.py (score: {SEVERITY: 0, CONFIDENCE: 0})
Files excluded (17):
	./.black_jack.py.swp
	./.coverage
	./.coverage.xml
	./.coveragerc
	./.exercism/config.json
	./.exercism/metadata.json
	./.mypy_cache/.gitignore
	./.mypy_cache/3.11/@plugins_snapshot.json
	./.mypy_cache/CACHEDIR.TAG
	./HELP.md
	./HINTS.md
	./README.md
	./__pycache__/__init__.cpython-311.pyc
	./__pycache__/black_jack.cpython-311.pyc
	./__pycache__/black_jack_test.cpython-311-pytest-7.3.1.pyc
	./black_jack.py,cover
	./run-tests-python.txt

Test results:
	No issues identified.

Code scanned:
	Total lines of code: 190
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 0
		Medium: 0
		High: 0
	Total issues (by confidence):
		Undefined: 0
		Low: 0
		Medium: 0
		High: 0
Files skipped (0):

real	0m0.250s
user	0m0.198s
sys	0m0.054s

===============================================================================

Running: refurb .

real	0m5.900s
user	0m5.729s
sys	0m0.171s

===============================================================================

==> .coveragerc <==
[run]
omit = __init__.py, *_test.py

Running: pytest --verbose --cov=. --cov-branch --cov-report=term-missing --cov-report=xml:.coverage.xml -p no:randomly
============================= test session starts ==============================
platform linux -- Python 3.11.3, pytest-7.3.1, pluggy-1.0.0 -- /home/vpayno/.pyenv/versions/3.11.3/bin/python
cachedir: .pytest_cache
rootdir: /home/vpayno/git_vpayno/exercism-workspace/python
configfile: pytest.ini
plugins: anyio-3.6.2, libtmux-0.21.1, pylama-8.4.1, cov-4.0.0, datafiles-3.0.0, docker-1.0.1, subprocess-1.5.0, typeguard-2.13.3
collecting ... collected 6 items

black_jack_test.py::BlackJackTest::test_can_double_down PASSED           [ 16%]
black_jack_test.py::BlackJackTest::test_can_split_pairs PASSED           [ 33%]
black_jack_test.py::BlackJackTest::test_higher_card PASSED               [ 50%]
black_jack_test.py::BlackJackTest::test_is_blackjack PASSED              [ 66%]
black_jack_test.py::BlackJackTest::test_value_of_ace PASSED              [ 83%]
black_jack_test.py::BlackJackTest::test_value_of_card PASSED             [100%]

---------- coverage: platform linux, python 3.11.3-final-0 -----------
Name            Stmts   Miss Branch BrPart  Cover   Missing
-----------------------------------------------------------
black_jack.py      73     10     38      3    86%   28-33, 80, 137-140
-----------------------------------------------------------
TOTAL              73     10     38      3    86%
Coverage XML written to file .coverage.xml


============================== 6 passed in 0.05s ===============================

real	0m0.962s
user	0m0.840s
sys	0m0.124s

===============================================================================

Running: coverage report --show-missing
Name            Stmts   Miss Branch BrPart  Cover   Missing
-----------------------------------------------------------
black_jack.py      73     10     38      3    86%   28-33, 80, 137-140
-----------------------------------------------------------
TOTAL              73     10     38      3    86%

real	0m0.150s
user	0m0.107s
sys	0m0.046s

===============================================================================

coverage annotate
The annotate command will be removed in a future version.
Get in touch if you still use it: ned@nedbatchelder.com

real	0m0.144s
user	0m0.098s
sys	0m0.048s

tail -n 10000 ./*,cover | grep -E -C 3 '^> def |^! '
> from typing import List, Tuple
  
  
> def value_of_card(card: str) -> int:
>     """Determine the scoring value of a card.
  
>     :param card: str - given card.
--
>                 return 1
>             case _ if 2 <= int(card) <= 10:
>                 return int(card)
!             case _:
!                 return 0
!     except ValueError as exception:
!         print(f"ERROR: invalid card value {card}")
!         print(f"{exception}")
!         return 0
  
  
> def higher_card(card_one: str, card_two: str) -> str | Tuple[str, str]:
>     """Determine which card has a higher value in the hand.
  
>     :param card_one, card_two: str - cards dealt in hand.  See below for values.
--
>     return card_one, card_two
  
  
> def value_of_ace(card_one: str, card_two: str) -> int:
>     """Calculate the most advantageous value for the ace card.
  
>     :param card_one, card_two: str - card dealt. See below for values.
--
  
>         return 11
  
!     return 1
  
  
> def is_blackjack(card_one: str, card_two: str) -> bool:
>     """Determine if the hand is a 'natural' or 'blackjack'.
  
>     :param card_one, card_two: str - card dealt. See below for values.
--
>     return result == 21
  
  
> def can_split_pairs(card_one: str, card_two: str) -> bool:
>     """Determine if a player can split their hand into two hands.
  
>     :param card_one, card_two: str - cards dealt.
--
>         return False
  
>     if card_two == "A":
!         if value_of_card(card_one) > 9:
!             return True
  
!         return False
  
>     return False
  
  
> def can_double_down(card_one, card_two):
>     """Determine if a blackjack player can place a double down bet.
  
>     :param card_one, card_two: str - first and second cards in hand.

===============================================================================

Running: misspell ./black_jack.py ./black_jack_test.py ./__init__.py

real	0m0.024s
user	0m0.027s
sys	0m0.010s

===============================================================================

