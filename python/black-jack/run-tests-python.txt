Running automated test file(s):


===============================================================================

Running: pylint ./src

-------------------------------------------------------------------
Your code has been rated at 10.00/10 (previous run: 9.62/10, +0.38)


real	0m0.820s
user	0m0.704s
sys	0m0.117s

===============================================================================

Running: ruff check --ignore E501 ./src

real	0m0.083s
user	0m0.030s
sys	0m0.056s

===============================================================================

Running: pyright --stats ./src
Found 2 source files
pyright 1.1.347
0 errors, 0 warnings, 0 informations 
Completed in 0.631sec

Analysis stats
Total files parsed and bound: 20
Total files checked: 2

Timing stats
Find Source Files:    0.01sec
Read Source Files:    0sec
Tokenize:             0.04sec
Parse:                0.04sec
Resolve Imports:      0.05sec
Bind:                 0.06sec
Check:                0.11sec
Detect Cycles:        0sec

real	0m1.562s
user	0m1.289s
sys	0m0.216s

===============================================================================

Running: bandit --verbose --recursive ./src
[main]	INFO	profile include tests: None
[main]	INFO	profile exclude tests: None
[main]	INFO	cli include tests: None
[main]	INFO	cli exclude tests: None
[main]	INFO	running on Python 3.12.1
Run started:2024-01-17 05:09:47.614826
Files in scope (2):
	./src/blackjack/__init__.py (score: {SEVERITY: 0, CONFIDENCE: 0})
	./src/blackjack/black_jack.py (score: {SEVERITY: 0, CONFIDENCE: 0})
Files excluded (0):

Test results:
	No issues identified.

Code scanned:
	Total lines of code: 113
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 0
		Medium: 0
		High: 0
	Total issues (by confidence):
		Undefined: 0
		Low: 0
		Medium: 0
		High: 0
Files skipped (0):

real	0m0.297s
user	0m0.214s
sys	0m0.084s

===============================================================================

Running: refurb ./src
[94msrc/blackjack/black_jack.py[0m[90m:32:15[0m [33m[FURB183][0m[90m:[0m Replace [90m`[91mf"{exception}"[90m`[0m with [90m`[92mstr(exception)[90m`[0m

Run `refurb --explain ERR` to further explain an error. Use `--quiet` to silence this message

real	0m1.136s
user	0m1.038s
sys	0m0.089s

===============================================================================

python -m doctest -v ./src/blackjack/black_jack.py ./src/blackjack/__init__.py
7 items had no tests:
    black_jack
    black_jack.can_double_down
    black_jack.can_split_pairs
    black_jack.higher_card
    black_jack.is_blackjack
    black_jack.value_of_ace
    black_jack.value_of_card
0 tests in 7 items.
0 passed and 0 failed.
Test passed.
1 items had no tests:
    __init__
0 tests in 1 items.
0 passed and 0 failed.
Test passed.

real	0m0.137s
user	0m0.072s
sys	0m0.065s


===============================================================================

==> .coveragerc <==
[run]
omit = __init__.py, *_test.py

Running: PYTHONPATH=./src pytest --verbose --cov=. --cov-branch --cov-report=term-missing --cov-report=xml:.coverage.xml -p no:randomly ./test
============================= test session starts ==============================
platform linux -- Python 3.12.1, pytest-7.4.3, pluggy-1.3.0 -- /home/vpayno/.pyenv/versions/3.12.1/bin/python
cachedir: .pytest_cache
rootdir: /home/vpayno/git_vpayno/exercism-workspace/python/black-jack
configfile: pytest.ini
plugins: anyio-4.2.0, libtmux-0.25.0, pylama-8.4.1, cov-4.1.0, datafiles-3.0.0, docker-2.0.1, subprocess-1.5.0, typeguard-4.1.5
collecting ... collected 6 items

test/black_jack_test.py::BlackJackTest::test_can_double_down PASSED      [ 16%]
test/black_jack_test.py::BlackJackTest::test_can_split_pairs PASSED      [ 33%]
test/black_jack_test.py::BlackJackTest::test_higher_card PASSED          [ 50%]
test/black_jack_test.py::BlackJackTest::test_is_blackjack PASSED         [ 66%]
test/black_jack_test.py::BlackJackTest::test_value_of_ace PASSED         [ 83%]
test/black_jack_test.py::BlackJackTest::test_value_of_card PASSED        [100%]

---------- coverage: platform linux, python 3.12.1-final-0 -----------
Name            Stmts   Miss Branch BrPart  Cover   Missing
-----------------------------------------------------------
black_jack.py      73     10     36      3    86%   28-33, 80, 137-140
-----------------------------------------------------------
TOTAL              73     10     36      3    86%
Coverage XML written to file .coverage.xml


============================== 6 passed in 0.06s ===============================

real	0m0.859s
user	0m0.719s
sys	0m0.141s

===============================================================================

Running: coverage report --show-missing
Name            Stmts   Miss Branch BrPart  Cover   Missing
-----------------------------------------------------------
black_jack.py      73     10     36      3    86%   28-33, 80, 137-140
-----------------------------------------------------------
TOTAL              73     10     36      3    86%

real	0m0.163s
user	0m0.104s
sys	0m0.060s

===============================================================================

coverage annotate

real	0m0.161s
user	0m0.100s
sys	0m0.063s

tail -n 10000 ./*,cover | grep -E -C 3 '^> def |^! '
  
> def value_of_card(card: str) -> int:
>     """Determine the scoring value of a card.
--
>                 return int(card)
!             case _:
!                 return 0
!     except ValueError as exception:
!         print(f"ERROR: invalid card value {card}")
!         print(f"{exception}")
!         return 0
  
  
> def higher_card(card_one: str, card_two: str) -> str | Tuple[str, str]:
>     """Determine which card has a higher value in the hand.
--
  
> def value_of_ace(card_one: str, card_two: str) -> int:
>     """Calculate the most advantageous value for the ace card.
--
  
!     return 1
  
  
> def is_blackjack(card_one: str, card_two: str) -> bool:
>     """Determine if the hand is a 'natural' or 'blackjack'.
--
  
> def can_split_pairs(card_one: str, card_two: str) -> bool:
>     """Determine if a player can split their hand into two hands.
--
>     if card_two == "A":
!         if value_of_card(card_one) > 9:
!             return True
  
!         return False
  
--
  
> def can_double_down(card_one, card_two):
>     """Determine if a blackjack player can place a double down bet.

===============================================================================

Running: misspell ./src/blackjack/black_jack.py ./src/blackjack/__init__.py

real	0m0.020s
user	0m0.023s
sys	0m0.007s

===============================================================================

