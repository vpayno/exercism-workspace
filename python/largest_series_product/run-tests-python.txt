Running automated test file(s):


===============================================================================

Running: pylint --ignore-patterns (__init__|.*_test).py .

real	0m0.443s
user	0m0.367s
sys	0m0.075s

===============================================================================

Running: ruff check --ignore E501 ./__init__.py ./largest_series_product.py ./largest_series_product_test.py

real	0m0.065s
user	0m0.029s
sys	0m0.037s

===============================================================================

Running: pyright --stats .
Found 3 source files
pyright 1.1.316
0 errors, 0 warnings, 0 informations 
Completed in 0.781sec

Analysis stats
Total files parsed and bound: 35
Total files checked: 3

Timing stats
Find Source Files:    0sec
Read Source Files:    0.01sec
Tokenize:             0.06sec
Parse:                0.09sec
Resolve Imports:      0.04sec
Bind:                 0.1sec
Check:                0.14sec
Detect Cycles:        0sec

real	0m1.655s
user	0m1.670s
sys	0m0.192s

===============================================================================

Running: bandit --verbose --recursive .
[main]	INFO	profile include tests: None
[main]	INFO	profile exclude tests: None
[main]	INFO	cli include tests: None
[main]	INFO	cli exclude tests: None
[main]	INFO	running on Python 3.11.3
Run started:2023-06-28 04:33:05.423523
Files in scope (3):
	./__init__.py (score: {SEVERITY: 0, CONFIDENCE: 0})
	./largest_series_product.py (score: {SEVERITY: 0, CONFIDENCE: 0})
	./largest_series_product_test.py (score: {SEVERITY: 0, CONFIDENCE: 0})
Files excluded (15):
	./.coverage
	./.coverage.xml
	./.coveragerc
	./.exercism/config.json
	./.exercism/metadata.json
	./.mypy_cache/.gitignore
	./.mypy_cache/3.11/@plugins_snapshot.json
	./.mypy_cache/CACHEDIR.TAG
	./HELP.md
	./README.md
	./__pycache__/__init__.cpython-311.pyc
	./__pycache__/largest_series_product.cpython-311.pyc
	./__pycache__/largest_series_product_test.cpython-311-pytest-7.3.1.pyc
	./largest_series_product.py,cover
	./run-tests-python.txt

Test results:
	No issues identified.

Code scanned:
	Total lines of code: 91
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 0
		Medium: 0
		High: 0
	Total issues (by confidence):
		Undefined: 0
		Low: 0
		Medium: 0
		High: 0
Files skipped (0):

real	0m0.250s
user	0m0.183s
sys	0m0.065s

===============================================================================

Running: refurb .
./largest_series_product_test.py:15:42 [FURB156]: Replace `0123456789` with `string.digits`
./largest_series_product_test.py:21:42 [FURB156]: Replace `0123456789` with `string.digits`
./largest_series_product_test.py:27:42 [FURB156]: Replace `0123456789` with `string.digits`

Run `refurb --explain ERR` to further explain an error. Use `--quiet` to silence this message

real	0m1.372s
user	0m1.308s
sys	0m0.064s

===============================================================================

==> .coveragerc <==
[run]
omit = __init__.py, *_test.py

Running: pytest --verbose --cov=. --cov-branch --cov-report=term-missing --cov-report=xml:.coverage.xml -p no:randomly
============================= test session starts ==============================
platform linux -- Python 3.11.3, pytest-7.3.1, pluggy-1.0.0 -- /home/vpayno/.pyenv/versions/3.11.3/bin/python
cachedir: .pytest_cache
rootdir: /home/vpayno/git_vpayno/exercism-workspace/python
configfile: pytest.ini
plugins: anyio-3.6.2, libtmux-0.21.1, pylama-8.4.1, cov-4.0.0, datafiles-3.0.0, docker-1.0.1, subprocess-1.5.0, typeguard-2.13.3
collecting ... collected 14 items

largest_series_product_test.py::LargestSeriesProductTest::test_can_find_the_largest_product_of_2 PASSED [  7%]
largest_series_product_test.py::LargestSeriesProductTest::test_can_find_the_largest_product_of_2_with_numbers_in_order PASSED [ 14%]
largest_series_product_test.py::LargestSeriesProductTest::test_can_find_the_largest_product_of_3 PASSED [ 21%]
largest_series_product_test.py::LargestSeriesProductTest::test_can_find_the_largest_product_of_3_with_numbers_in_order PASSED [ 28%]
largest_series_product_test.py::LargestSeriesProductTest::test_can_find_the_largest_product_of_5_with_numbers_in_order PASSED [ 35%]
largest_series_product_test.py::LargestSeriesProductTest::test_can_get_the_largest_product_of_a_big_number PASSED [ 42%]
largest_series_product_test.py::LargestSeriesProductTest::test_euler_big_number PASSED [ 50%]
largest_series_product_test.py::LargestSeriesProductTest::test_finds_the_largest_product_if_span_equals_length PASSED [ 57%]
largest_series_product_test.py::LargestSeriesProductTest::test_rejects_empty_string_and_nonzero_span PASSED [ 64%]
largest_series_product_test.py::LargestSeriesProductTest::test_rejects_invalid_character_in_digits PASSED [ 71%]
largest_series_product_test.py::LargestSeriesProductTest::test_rejects_negative_span PASSED [ 78%]
largest_series_product_test.py::LargestSeriesProductTest::test_rejects_span_longer_than_string_length PASSED [ 85%]
largest_series_product_test.py::LargestSeriesProductTest::test_reports_zero_if_all_spans_include_zero PASSED [ 92%]
largest_series_product_test.py::LargestSeriesProductTest::test_reports_zero_if_the_only_digits_are_zero PASSED [100%]

---------- coverage: platform linux, python 3.11.3-final-0 -----------
Name                        Stmts   Miss Branch BrPart  Cover   Missing
-----------------------------------------------------------------------
largest_series_product.py      27      0     18      1    98%   33->40
-----------------------------------------------------------------------
TOTAL                          27      0     18      1    98%
Coverage XML written to file .coverage.xml


============================== 14 passed in 0.06s ==============================

real	0m0.996s
user	0m0.868s
sys	0m0.126s

===============================================================================

Running: coverage report --show-missing
Name                        Stmts   Miss Branch BrPart  Cover   Missing
-----------------------------------------------------------------------
largest_series_product.py      27      0     18      1    98%   33->40
-----------------------------------------------------------------------
TOTAL                          27      0     18      1    98%

real	0m0.148s
user	0m0.102s
sys	0m0.046s

===============================================================================

coverage annotate
The annotate command will be removed in a future version.
Get in touch if you still use it: ned@nedbatchelder.com

real	0m0.157s
user	0m0.110s
sys	0m0.048s

tail -n 10000 ./*,cover | grep -E -C 3 '^> def |^! '
  
> def largest_product(series: str, size: int) -> int:
>     """Returns the largest product for a contiguous substring of digits of size n.

===============================================================================

Running: misspell ./__init__.py ./largest_series_product.py ./largest_series_product_test.py

real	0m0.024s
user	0m0.024s
sys	0m0.013s

===============================================================================

