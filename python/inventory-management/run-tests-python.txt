Running automated test file(s):


===============================================================================

Running: pylint ./src

--------------------------------------------------------------------
Your code has been rated at 10.00/10 (previous run: 10.00/10, +0.00)


real	0m0.774s
user	0m0.668s
sys	0m0.109s

===============================================================================

Running: ruff check --ignore E501 ./src

real	0m0.098s
user	0m0.041s
sys	0m0.062s

===============================================================================

Running: pyright --stats ./src
Found 2 source files
pyright 1.1.347
0 errors, 0 warnings, 0 informations 
Completed in 0.616sec

Analysis stats
Total files parsed and bound: 20
Total files checked: 2

Timing stats
Find Source Files:    0sec
Read Source Files:    0.01sec
Tokenize:             0.04sec
Parse:                0.05sec
Resolve Imports:      0.06sec
Bind:                 0.05sec
Check:                0.09sec
Detect Cycles:        0sec

real	0m1.524s
user	0m1.281s
sys	0m0.190s

===============================================================================

Running: bandit --verbose --recursive ./src
[main]	INFO	profile include tests: None
[main]	INFO	profile exclude tests: None
[main]	INFO	cli include tests: None
[main]	INFO	cli exclude tests: None
[main]	INFO	running on Python 3.12.1
Run started:2024-01-17 05:46:58.653976
Files in scope (2):
	./src/inventory_management/__init__.py (score: {SEVERITY: 0, CONFIDENCE: 0})
	./src/inventory_management/dicts.py (score: {SEVERITY: 0, CONFIDENCE: 0})
Files excluded (0):

Test results:
	No issues identified.

Code scanned:
	Total lines of code: 45
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 0
		Medium: 0
		High: 0
	Total issues (by confidence):
		Undefined: 0
		Low: 0
		Medium: 0
		High: 0
Files skipped (0):

real	0m0.297s
user	0m0.229s
sys	0m0.069s

===============================================================================

Running: refurb ./src

real	0m1.138s
user	0m1.057s
sys	0m0.082s

===============================================================================

python -m doctest -v ./src/inventory_management/dicts.py ./src/inventory_management/__init__.py
6 items had no tests:
    dicts
    dicts.add_items
    dicts.create_inventory
    dicts.decrement_items
    dicts.list_inventory
    dicts.remove_item
0 tests in 6 items.
0 passed and 0 failed.
Test passed.
1 items had no tests:
    __init__
0 tests in 1 items.
0 passed and 0 failed.
Test passed.

real	0m0.135s
user	0m0.090s
sys	0m0.047s


===============================================================================

==> .coveragerc <==
[run]
omit = __init__.py, *_test.py

Running: PYTHONPATH=./src pytest --verbose --cov=. --cov-branch --cov-report=term-missing --cov-report=xml:.coverage.xml -p no:randomly ./test
============================= test session starts ==============================
platform linux -- Python 3.12.1, pytest-7.4.3, pluggy-1.3.0 -- /home/vpayno/.pyenv/versions/3.12.1/bin/python
cachedir: .pytest_cache
rootdir: /home/vpayno/git_vpayno/exercism-workspace/python/inventory-management
configfile: pytest.ini
plugins: anyio-4.2.0, libtmux-0.25.0, pylama-8.4.1, cov-4.1.0, datafiles-3.0.0, docker-2.0.1, subprocess-1.5.0, typeguard-4.1.5
collecting ... collected 10 items

test/dicts_test.py::InventoryTest::test_add_from_empty_dict PASSED       [ 10%]
test/dicts_test.py::InventoryTest::test_add_multiple_items PASSED        [ 20%]
test/dicts_test.py::InventoryTest::test_add_new_item PASSED              [ 30%]
test/dicts_test.py::InventoryTest::test_add_one_item PASSED              [ 40%]
test/dicts_test.py::InventoryTest::test_create_inventory PASSED          [ 50%]
test/dicts_test.py::InventoryTest::test_decrement_items PASSED           [ 60%]
test/dicts_test.py::InventoryTest::test_list_inventory PASSED            [ 70%]
test/dicts_test.py::InventoryTest::test_not_below_zero PASSED            [ 80%]
test/dicts_test.py::InventoryTest::test_remove_item PASSED               [ 90%]
test/dicts_test.py::InventoryTest::test_remove_item_not_in_inventory PASSED [100%]

---------- coverage: platform linux, python 3.12.1-final-0 -----------
Name       Stmts   Miss Branch BrPart  Cover   Missing
------------------------------------------------------
dicts.py      19      0      2      0   100%
------------------------------------------------------
TOTAL         19      0      2      0   100%
Coverage XML written to file .coverage.xml


============================== 10 passed in 0.07s ==============================

real	0m0.848s
user	0m0.717s
sys	0m0.133s

===============================================================================

Running: coverage report --show-missing
Name       Stmts   Miss Branch BrPart  Cover   Missing
------------------------------------------------------
dicts.py      19      0      2      0   100%
------------------------------------------------------
TOTAL         19      0      2      0   100%

real	0m0.180s
user	0m0.109s
sys	0m0.073s

===============================================================================

coverage annotate

real	0m0.206s
user	0m0.127s
sys	0m0.079s

tail -n 10000 ./*,cover | grep -E -C 3 '^> def |^! '
  
> def create_inventory(items: List[str]) -> Dict[str, int]:
>     """Create a dict that tracks the amount (count) of each element on the `items` list.
--
  
> def add_items(inventory: Dict[str, int], items: List[str]) -> Dict[str, int]:
>     """Add or increment items in inventory using elements from the items `list`.
--
  
> def decrement_items(inventory: Dict[str, int], items: List[str]) -> Dict[str, int]:
>     """Decrement items in inventory using elements from the `items` list.
--
  
> def remove_item(inventory: Dict[str, int], item: str) -> Dict[str, int]:
>     """Remove item from inventory if it matches `item` string.
--
  
> def list_inventory(inventory: Dict[str, int]) -> List[Tuple[str, int]]:
>     """Create a list containing all (item_name, item_count) pairs in inventory.

===============================================================================

Running: misspell ./src/inventory_management/dicts.py ./src/inventory_management/__init__.py

real	0m0.028s
user	0m0.033s
sys	0m0.009s

===============================================================================

