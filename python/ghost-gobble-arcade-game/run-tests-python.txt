Running automated test file(s):


===============================================================================

Running: pylint ./src
************* Module ghost_gobble_arcade_game.arcade_game
src/ghost_gobble_arcade_game/arcade_game.py:25:0: C0301: Line too long (102/100) (line-too-long)

-------------------------------------------------------------------
Your code has been rated at 8.75/10 (previous run: 10.00/10, -1.25)


real	0m0.488s
user	0m0.379s
sys	0m0.111s

===============================================================================

Running: ruff check --ignore E501 ./src

real	0m0.094s
user	0m0.041s
sys	0m0.057s

===============================================================================

Running: pyright --stats ./src
Found 2 source files
pyright 1.1.347
0 errors, 0 warnings, 0 informations 
Completed in 0.523sec

Analysis stats
Total files parsed and bound: 20
Total files checked: 2

Timing stats
Find Source Files:    0sec
Read Source Files:    0.01sec
Tokenize:             0.03sec
Parse:                0.04sec
Resolve Imports:      0.05sec
Bind:                 0.05sec
Check:                0.04sec
Detect Cycles:        0sec

real	0m1.368s
user	0m1.068s
sys	0m0.203s

===============================================================================

Running: bandit --verbose --recursive ./src
[main]	INFO	profile include tests: None
[main]	INFO	profile exclude tests: None
[main]	INFO	cli include tests: None
[main]	INFO	cli exclude tests: None
[main]	INFO	running on Python 3.12.1
Run started:2024-01-17 05:40:06.033282
Files in scope (2):
	./src/ghost_gobble_arcade_game/__init__.py (score: {SEVERITY: 0, CONFIDENCE: 0})
	./src/ghost_gobble_arcade_game/arcade_game.py (score: {SEVERITY: 0, CONFIDENCE: 0})
Files excluded (0):

Test results:
	No issues identified.

Code scanned:
	Total lines of code: 30
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 0
		Medium: 0
		High: 0
	Total issues (by confidence):
		Undefined: 0
		Low: 0
		Medium: 0
		High: 0
Files skipped (0):

real	0m0.301s
user	0m0.223s
sys	0m0.080s

===============================================================================

Running: refurb ./src

real	0m1.145s
user	0m1.066s
sys	0m0.080s

===============================================================================

python -m doctest -v ./src/ghost_gobble_arcade_game/arcade_game.py ./src/ghost_gobble_arcade_game/__init__.py
5 items had no tests:
    arcade_game
    arcade_game.eat_ghost
    arcade_game.lose
    arcade_game.score
    arcade_game.win
0 tests in 5 items.
0 passed and 0 failed.
Test passed.
1 items had no tests:
    __init__
0 tests in 1 items.
0 passed and 0 failed.
Test passed.

real	0m0.128s
user	0m0.073s
sys	0m0.057s


===============================================================================

==> .coveragerc <==
[run]
omit = __init__.py, *_test.py

Running: PYTHONPATH=./src pytest --verbose --cov=. --cov-branch --cov-report=term-missing --cov-report=xml:.coverage.xml -p no:randomly ./test
============================= test session starts ==============================
platform linux -- Python 3.12.1, pytest-7.4.3, pluggy-1.3.0 -- /home/vpayno/.pyenv/versions/3.12.1/bin/python
cachedir: .pytest_cache
rootdir: /home/vpayno/git_vpayno/exercism-workspace/python/ghost-gobble-arcade-game
configfile: pytest.ini
plugins: anyio-4.2.0, libtmux-0.25.0, pylama-8.4.1, cov-4.1.0, datafiles-3.0.0, docker-2.0.1, subprocess-1.5.0, typeguard-4.1.5
collecting ... collected 13 items

test/arcade_game_test.py::GhostGobbleGameTest::test_dont_lose_if_not_touching_a_ghost PASSED [  7%]
test/arcade_game_test.py::GhostGobbleGameTest::test_dont_lose_if_touching_a_ghost_with_a_power_pellet_active PASSED [ 15%]
test/arcade_game_test.py::GhostGobbleGameTest::test_dont_win_if_all_dots_eaten_but_touching_a_ghost PASSED [ 23%]
test/arcade_game_test.py::GhostGobbleGameTest::test_dont_win_if_not_all_dots_eaten PASSED [ 30%]
test/arcade_game_test.py::GhostGobbleGameTest::test_ghost_does_not_get_eaten_because_no_power_pellet_active PASSED [ 38%]
test/arcade_game_test.py::GhostGobbleGameTest::test_ghost_does_not_get_eaten_because_not_touching_ghost PASSED [ 46%]
test/arcade_game_test.py::GhostGobbleGameTest::test_ghost_gets_eaten PASSED [ 53%]
test/arcade_game_test.py::GhostGobbleGameTest::test_lose_if_touching_a_ghost_without_a_power_pellet_active PASSED [ 61%]
test/arcade_game_test.py::GhostGobbleGameTest::test_no_score_when_nothing_eaten PASSED [ 69%]
test/arcade_game_test.py::GhostGobbleGameTest::test_score_when_eating_dot PASSED [ 76%]
test/arcade_game_test.py::GhostGobbleGameTest::test_score_when_eating_power_pellet PASSED [ 84%]
test/arcade_game_test.py::GhostGobbleGameTest::test_win_if_all_dots_eaten PASSED [ 92%]
test/arcade_game_test.py::GhostGobbleGameTest::test_win_if_all_dots_eaten_and_touching_a_ghost_with_a_power_pellet_active PASSED [100%]

---------- coverage: platform linux, python 3.12.1-final-0 -----------
Name             Stmts   Miss Branch BrPart  Cover   Missing
------------------------------------------------------------
arcade_game.py       8      0      0      0   100%
------------------------------------------------------------
TOTAL                8      0      0      0   100%
Coverage XML written to file .coverage.xml


============================== 13 passed in 0.07s ==============================

real	0m0.866s
user	0m0.734s
sys	0m0.134s

===============================================================================

Running: coverage report --show-missing
Name             Stmts   Miss Branch BrPart  Cover   Missing
------------------------------------------------------------
arcade_game.py       8      0      0      0   100%
------------------------------------------------------------
TOTAL                8      0      0      0   100%

real	0m0.149s
user	0m0.098s
sys	0m0.052s

===============================================================================

coverage annotate

real	0m0.160s
user	0m0.102s
sys	0m0.059s

tail -n 10000 ./*,cover | grep -E -C 3 '^> def |^! '
  
> def eat_ghost(power_pellet_active: bool, touching_ghost: bool) -> bool:
>     """Verify that Pac-Man can eat a ghost if he is empowered by a power pellet.
--
  
> def score(touching_power_pellet: bool, touching_dot: bool) -> bool:
>     """Verify that Pac-Man has scored when a power pellet or dot has been eaten.
--
  
> def lose(power_pellet_active: bool, touching_ghost: bool) -> bool:
>     """Trigger the game loop to end (GAME OVER) when Pac-Man touches a ghost without his power pellet.
--
  
> def win(has_eaten_all_dots: bool, power_pellet_active: bool, touching_ghost: bool) -> bool:
>     """Trigger the victory event when all dots have been eaten.

===============================================================================

Running: misspell ./src/ghost_gobble_arcade_game/arcade_game.py ./src/ghost_gobble_arcade_game/__init__.py

real	0m0.023s
user	0m0.020s
sys	0m0.014s

===============================================================================

