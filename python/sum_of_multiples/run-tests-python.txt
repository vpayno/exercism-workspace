Running automated test file(s):


===============================================================================

Running: pylint --ignore-patterns (__init__|.*_test).py .

real	0m0.407s
user	0m0.343s
sys	0m0.065s

===============================================================================

Running: ruff check --ignore E501 ./__init__.py ./sum_of_multiples.py ./sum_of_multiples_test.py

real	0m0.083s
user	0m0.041s
sys	0m0.046s

===============================================================================

Running: pyright --stats .
Found 3 source files
pyright 1.1.316
0 errors, 0 warnings, 0 informations 
Completed in 0.678sec

Analysis stats
Total files parsed and bound: 32
Total files checked: 3

Timing stats
Find Source Files:    0sec
Read Source Files:    0.01sec
Tokenize:             0.05sec
Parse:                0.06sec
Resolve Imports:      0.04sec
Bind:                 0.08sec
Check:                0.1sec
Detect Cycles:        0sec

real	0m1.824s
user	0m1.351s
sys	0m0.128s

===============================================================================

Running: bandit --verbose --recursive .
[main]	INFO	profile include tests: None
[main]	INFO	profile exclude tests: None
[main]	INFO	cli include tests: None
[main]	INFO	cli exclude tests: None
[main]	INFO	running on Python 3.11.3
Run started:2023-06-27 04:40:17.122131
Files in scope (3):
	./__init__.py (score: {SEVERITY: 0, CONFIDENCE: 0})
	./sum_of_multiples.py (score: {SEVERITY: 0, CONFIDENCE: 0})
	./sum_of_multiples_test.py (score: {SEVERITY: 0, CONFIDENCE: 0})
Files excluded (12):
	./.coveragerc
	./.exercism/config.json
	./.exercism/metadata.json
	./.mypy_cache/.gitignore
	./.mypy_cache/3.11/@plugins_snapshot.json
	./.mypy_cache/CACHEDIR.TAG
	./HELP.md
	./README.md
	./__pycache__/__init__.cpython-311.pyc
	./__pycache__/sum_of_multiples.cpython-311.pyc
	./__pycache__/sum_of_multiples_test.cpython-311-pytest-7.3.1.pyc
	./run-tests-python.txt

Test results:
	No issues identified.

Code scanned:
	Total lines of code: 56
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 0
		Medium: 0
		High: 0
	Total issues (by confidence):
		Undefined: 0
		Low: 0
		Medium: 0
		High: 0
Files skipped (0):

real	0m0.231s
user	0m0.179s
sys	0m0.054s

===============================================================================

Running: refurb .

real	0m1.344s
user	0m1.269s
sys	0m0.076s

===============================================================================

==> .coveragerc <==
[run]
omit = __init__.py, *_test.py

Running: pytest --verbose --cov=. --cov-branch --cov-report=term-missing --cov-report=xml:.coverage.xml -p no:randomly
============================= test session starts ==============================
platform linux -- Python 3.11.3, pytest-7.3.1, pluggy-1.0.0 -- /home/vpayno/.pyenv/versions/3.11.3/bin/python
cachedir: .pytest_cache
rootdir: /home/vpayno/git_vpayno/exercism-workspace/python
configfile: pytest.ini
plugins: anyio-3.6.2, libtmux-0.21.1, pylama-8.4.1, cov-4.0.0, datafiles-3.0.0, docker-1.0.1, subprocess-1.5.0, typeguard-2.13.3
collecting ... collected 16 items

sum_of_multiples_test.py::SumOfMultiplesTest::test_a_much_larger_limit PASSED [  6%]
sum_of_multiples_test.py::SumOfMultiplesTest::test_all_numbers_are_multiples_of_1 PASSED [ 12%]
sum_of_multiples_test.py::SumOfMultiplesTest::test_each_multiple_is_only_counted_once PASSED [ 18%]
sum_of_multiples_test.py::SumOfMultiplesTest::test_factors_not_relatively_prime PASSED [ 25%]
sum_of_multiples_test.py::SumOfMultiplesTest::test_more_than_one_factor_with_multiples_within_limit PASSED [ 31%]
sum_of_multiples_test.py::SumOfMultiplesTest::test_more_than_one_multiple_within_limit PASSED [ 37%]
sum_of_multiples_test.py::SumOfMultiplesTest::test_much_larger_factors PASSED [ 43%]
sum_of_multiples_test.py::SumOfMultiplesTest::test_no_factors_means_an_empty_sum PASSED [ 50%]
sum_of_multiples_test.py::SumOfMultiplesTest::test_no_multiples_within_limit PASSED [ 56%]
sum_of_multiples_test.py::SumOfMultiplesTest::test_one_factor_has_multiples_within_limit PASSED [ 62%]
sum_of_multiples_test.py::SumOfMultiplesTest::test_one_factor_is_a_multiple_of_another PASSED [ 68%]
sum_of_multiples_test.py::SumOfMultiplesTest::test_solutions_using_include_exclude_must_extend_to_cardinality_greater_than_3 PASSED [ 75%]
sum_of_multiples_test.py::SumOfMultiplesTest::test_some_pairs_of_factors_relatively_prime_and_some_not PASSED [ 81%]
sum_of_multiples_test.py::SumOfMultiplesTest::test_the_factor_0_does_not_affect_the_sum_of_multiples_of_other_factors PASSED [ 87%]
sum_of_multiples_test.py::SumOfMultiplesTest::test_the_only_multiple_of_0_is_0 PASSED [ 93%]
sum_of_multiples_test.py::SumOfMultiplesTest::test_three_factors PASSED  [100%]

---------- coverage: platform linux, python 3.11.3-final-0 -----------
Name                  Stmts   Miss Branch BrPart  Cover   Missing
-----------------------------------------------------------------
sum_of_multiples.py      11      0      8      0   100%
-----------------------------------------------------------------
TOTAL                    11      0      8      0   100%
Coverage XML written to file .coverage.xml


============================== 16 passed in 0.07s ==============================

real	0m0.996s
user	0m0.872s
sys	0m0.125s

===============================================================================

Running: coverage report --show-missing
Name                  Stmts   Miss Branch BrPart  Cover   Missing
-----------------------------------------------------------------
sum_of_multiples.py      11      0      8      0   100%
-----------------------------------------------------------------
TOTAL                    11      0      8      0   100%

real	0m0.147s
user	0m0.092s
sys	0m0.056s

===============================================================================

coverage annotate
The annotate command will be removed in a future version.
Get in touch if you still use it: ned@nedbatchelder.com

real	0m0.140s
user	0m0.098s
sys	0m0.043s

tail -n 10000 ./*,cover | grep -E -C 3 '^> def |^! '
  
> def sum_of_multiples(limit: int, divisors: List[int]) -> int:
>     """Sum the unique multiples of a number

===============================================================================

Running: misspell ./__init__.py ./sum_of_multiples.py ./sum_of_multiples_test.py

real	0m0.023s
user	0m0.024s
sys	0m0.009s

===============================================================================

