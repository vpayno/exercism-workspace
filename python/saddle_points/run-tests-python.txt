Running automated test file(s):


===============================================================================

Running: pylint --ignore-patterns (__init__|.*_test).py .

real	0m0.399s
user	0m0.334s
sys	0m0.067s

===============================================================================

Running: ruff check --ignore E501 ./__init__.py ./saddle_points.py ./saddle_points_test.py

real	0m0.067s
user	0m0.030s
sys	0m0.039s

===============================================================================

Running: pyright --stats .
Found 3 source files
pyright 1.1.316
0 errors, 0 warnings, 0 informations 
Completed in 0.741sec

Analysis stats
Total files parsed and bound: 32
Total files checked: 3

Timing stats
Find Source Files:    0sec
Read Source Files:    0.01sec
Tokenize:             0.04sec
Parse:                0.06sec
Resolve Imports:      0.03sec
Bind:                 0.08sec
Check:                0.19sec
Detect Cycles:        0sec

real	0m1.743s
user	0m1.440s
sys	0m0.162s

===============================================================================

Running: bandit --verbose --recursive .
[main]	INFO	profile include tests: None
[main]	INFO	profile exclude tests: None
[main]	INFO	cli include tests: None
[main]	INFO	cli exclude tests: None
[main]	INFO	running on Python 3.11.3
Run started:2023-06-29 05:56:23.825913
Files in scope (3):
	./__init__.py (score: {SEVERITY: 0, CONFIDENCE: 0})
	./saddle_points.py (score: {SEVERITY: 0, CONFIDENCE: 0})
	./saddle_points_test.py (score: {SEVERITY: 0, CONFIDENCE: 0})
Files excluded (15):
	./.coverage
	./.coverage.xml
	./.coveragerc
	./.exercism/config.json
	./.exercism/metadata.json
	./.mypy_cache/.gitignore
	./.mypy_cache/3.11/@plugins_snapshot.json
	./.mypy_cache/CACHEDIR.TAG
	./HELP.md
	./README.md
	./__pycache__/__init__.cpython-311.pyc
	./__pycache__/saddle_points.cpython-311.pyc
	./__pycache__/saddle_points_test.cpython-311-pytest-7.3.1.pyc
	./run-tests-python.txt
	./saddle_points.py,cover

Test results:
	No issues identified.

Code scanned:
	Total lines of code: 107
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 0
		Medium: 0
		High: 0
	Total issues (by confidence):
		Undefined: 0
		Low: 0
		Medium: 0
		High: 0
Files skipped (0):

real	0m0.248s
user	0m0.193s
sys	0m0.056s

===============================================================================

Running: refurb .

real	0m1.304s
user	0m1.229s
sys	0m0.076s

===============================================================================

==> .coveragerc <==
[run]
omit = __init__.py, *_test.py

Running: pytest --verbose --cov=. --cov-branch --cov-report=term-missing --cov-report=xml:.coverage.xml -p no:randomly
============================= test session starts ==============================
platform linux -- Python 3.11.3, pytest-7.3.1, pluggy-1.0.0 -- /home/vpayno/.pyenv/versions/3.11.3/bin/python
cachedir: .pytest_cache
rootdir: /home/vpayno/git_vpayno/exercism-workspace/python
configfile: pytest.ini
plugins: anyio-3.6.2, libtmux-0.21.1, pylama-8.4.1, cov-4.0.0, datafiles-3.0.0, docker-1.0.1, subprocess-1.5.0, typeguard-2.13.3
collecting ... collected 10 items

saddle_points_test.py::SaddlePointsTest::test_can_identify_lack_of_saddle_points_when_there_are_none PASSED [ 10%]
saddle_points_test.py::SaddlePointsTest::test_can_identify_multiple_saddle_points_in_a_column PASSED [ 20%]
saddle_points_test.py::SaddlePointsTest::test_can_identify_multiple_saddle_points_in_a_row PASSED [ 30%]
saddle_points_test.py::SaddlePointsTest::test_can_identify_saddle_point_in_bottom_right_corner PASSED [ 40%]
saddle_points_test.py::SaddlePointsTest::test_can_identify_saddle_points_in_a_non_square_matrix PASSED [ 50%]
saddle_points_test.py::SaddlePointsTest::test_can_identify_single_saddle_point PASSED [ 60%]
saddle_points_test.py::SaddlePointsTest::test_can_identify_that_empty_matrix_has_no_saddle_points PASSED [ 70%]
saddle_points_test.py::SaddlePointsTest::test_can_identify_that_saddle_points_in_a_single_column_matrix_are_those_with_the_minimum_value PASSED [ 80%]
saddle_points_test.py::SaddlePointsTest::test_can_identify_that_saddle_points_in_a_single_row_matrix_are_those_with_the_maximum_value PASSED [ 90%]
saddle_points_test.py::SaddlePointsTest::test_irregular_matrix PASSED    [100%]

---------- coverage: platform linux, python 3.11.3-final-0 -----------
Name               Stmts   Miss Branch BrPart  Cover   Missing
--------------------------------------------------------------
saddle_points.py      21      8     12      0    64%   7-18
--------------------------------------------------------------
TOTAL                 21      8     12      0    64%
Coverage XML written to file .coverage.xml


============================== 10 passed in 0.06s ==============================

real	0m0.925s
user	0m0.813s
sys	0m0.112s

===============================================================================

Running: coverage report --show-missing
Name               Stmts   Miss Branch BrPart  Cover   Missing
--------------------------------------------------------------
saddle_points.py      21      8     12      0    64%   7-18
--------------------------------------------------------------
TOTAL                 21      8     12      0    64%

real	0m0.136s
user	0m0.094s
sys	0m0.043s

===============================================================================

coverage annotate
The annotate command will be removed in a future version.
Get in touch if you still use it: ned@nedbatchelder.com

real	0m0.147s
user	0m0.098s
sys	0m0.050s

tail -n 10000 ./*,cover | grep -E -C 3 '^> def |^! '
  
> def rotate_matrix(matrix: List[List[int]]) -> List[List[int]]:
!     rotated_matrix: List[List[int]] = []
  
!     row: List[int] = []
!     col: List[int] = []
  
!     for i in range(len(row)):
!         for row in matrix:
!             col.append(row[i])
  
!         rotated_matrix.append(col)
  
!     return rotated_matrix
  
  
> def saddle_points(matrix: List[List[int]]) -> List[Dict[str, int]]:
>     """Finds the potential trees where you could build your tree house.

===============================================================================

Running: misspell ./__init__.py ./saddle_points.py ./saddle_points_test.py

real	0m0.021s
user	0m0.026s
sys	0m0.006s

===============================================================================

