==============================================================================
gigasecond_spec.lua
==============================================================================
* local gigasecond = require("gigasecond")

* describe("gigasecond", function()
* 	it("test 1", function()
* 		local actual = gigasecond.anniversary(os.time({ year = 2011, month = 3, day = 25, hour = 0, min = 0, sec = 0 }))
* 		local expectedDate = os.date("%x", os.time({ year = 2042, month = 12, day = 1, hour = 0, min = 0, sec = 0 }))
* 		assert.are.equals(expectedDate, actual)
  	end)

* 	it("test 2", function()
* 		local actual = gigasecond.anniversary(os.time({ year = 1977, month = 5, day = 13, hour = 0, min = 0, sec = 0 }))
* 		local expectedDate = os.date("%x", os.time({ year = 2009, month = 1, day = 19 }))
* 		assert.are.equals(expectedDate, actual)
  	end)

* 	it("test 3", function()
* 		local actual = gigasecond.anniversary(os.time({ year = 1959, month = 7, day = 19 }))
* 		local expectedDate = os.date("%x", os.time({ year = 1991, month = 3, day = 27 }))
* 		assert.are.equals(expectedDate, actual)
  	end)

* 	it("test 4", function()
* 		local actual = gigasecond.anniversary(os.time({ year = 1993, month = 8, day = 17 }))
* 		local expectedDate = os.date("%x", os.time({ year = 2025, month = 4, day = 25 }))
* 		assert.are.equals(expectedDate, actual)
  	end)
  end)

==============================================================================
gigasecond.lua
==============================================================================
* local gigasecond = {}

* function gigasecond.anniversary(any_date)
*     return os.date('%x', any_date + 10^9)
  end

* return gigasecond

==============================================================================
Summary
==============================================================================

File                Hits Missed Coverage
----------------------------------------
gigasecond.lua      4    0      100.00%
gigasecond_spec.lua 18   0      100.00%
----------------------------------------
Total               22   0      100.00%
