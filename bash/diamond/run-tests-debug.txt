
[./diamond.sh]

bash ./diamond.sh C

end_letter_index [C] = [3]
for row in 1 .. 3
for col in 1 .. 5

(col, row) = ( 1,  1):
Testing position for letter [A](1)
first_letter_index: [3 - (1 - 1)] = [3]
space_between_letters: [(2 * 1) - 3] = [-1]
.

(col, row) = ( 2,  1):
Testing position for letter [A](1)
first_letter_index: [3 - (1 - 1)] = [3]
space_between_letters: [(2 * 1) - 3] = [-1]
.

(col, row) = ( 3,  1):
Testing position for letter [A](1)
first_letter_index: [3 - (1 - 1)] = [3]
first_letter_index [3] == [3] col
A

(col, row) = ( 4,  1):
Testing position for letter [A](1)
first_letter_index: [3 - (1 - 1)] = [3]
space_between_letters: [(2 * 1) - 3] = [-1]
.

(col, row) = ( 5,  1):
Testing position for letter [A](1)
first_letter_index: [3 - (1 - 1)] = [3]
space_between_letters: [(2 * 1) - 3] = [-1]
.

[__A__]
for col in 1 .. 5

(col, row) = ( 1,  2):
Testing position for letter [B](2)
first_letter_index: [3 - (2 - 1)] = [2]
space_between_letters: [(2 * 2) - 3] = [1]
second_letter_index [2 + 1 + 1] = [4]
.

(col, row) = ( 2,  2):
Testing position for letter [B](2)
first_letter_index: [3 - (2 - 1)] = [2]
first_letter_index [2] == [2] col
B

(col, row) = ( 3,  2):
Testing position for letter [B](2)
first_letter_index: [3 - (2 - 1)] = [2]
space_between_letters: [(2 * 2) - 3] = [1]
second_letter_index [2 + 1 + 1] = [4]
.

(col, row) = ( 4,  2):
Testing position for letter [B](2)
first_letter_index: [3 - (2 - 1)] = [2]
space_between_letters: [(2 * 2) - 3] = [1]
second_letter_index [2 + 1 + 1] = [4]
second_letter_index [4] == [4] col
B

(col, row) = ( 5,  2):
Testing position for letter [B](2)
first_letter_index: [3 - (2 - 1)] = [2]
space_between_letters: [(2 * 2) - 3] = [1]
second_letter_index [2 + 1 + 1] = [4]
.

[_B_B_]
for col in 1 .. 5

(col, row) = ( 1,  3):
Testing position for letter [C](3)
first_letter_index: [3 - (3 - 1)] = [1]
first_letter_index [1] == [1] col
C

(col, row) = ( 2,  3):
Testing position for letter [C](3)
first_letter_index: [3 - (3 - 1)] = [1]
space_between_letters: [(2 * 3) - 3] = [3]
second_letter_index [1 + 3 + 1] = [5]
.

(col, row) = ( 3,  3):
Testing position for letter [C](3)
first_letter_index: [3 - (3 - 1)] = [1]
space_between_letters: [(2 * 3) - 3] = [3]
second_letter_index [1 + 3 + 1] = [5]
.

(col, row) = ( 4,  3):
Testing position for letter [C](3)
first_letter_index: [3 - (3 - 1)] = [1]
space_between_letters: [(2 * 3) - 3] = [3]
second_letter_index [1 + 3 + 1] = [5]
.

(col, row) = ( 5,  3):
Testing position for letter [C](3)
first_letter_index: [3 - (3 - 1)] = [1]
space_between_letters: [(2 * 3) - 3] = [3]
second_letter_index [1 + 3 + 1] = [5]
second_letter_index [5] == [5] col
C

[C___C]
for row in 2 .. 1
for row in 1 .. 1
for col in 1 .. 5

(col, row) = ( 1,  2):
Testing position for letter [B](2)
first_letter_index: [3 - (2 - 1)] = [2]
space_between_letters: [(2 * 2) - 3] = [1]
second_letter_index [2 + 1 + 1] = [4]
.

(col, row) = ( 2,  2):
Testing position for letter [B](2)
first_letter_index: [3 - (2 - 1)] = [2]
first_letter_index [2] == [2] col
B

(col, row) = ( 3,  2):
Testing position for letter [B](2)
first_letter_index: [3 - (2 - 1)] = [2]
space_between_letters: [(2 * 2) - 3] = [1]
second_letter_index [2 + 1 + 1] = [4]
.

(col, row) = ( 4,  2):
Testing position for letter [B](2)
first_letter_index: [3 - (2 - 1)] = [2]
space_between_letters: [(2 * 2) - 3] = [1]
second_letter_index [2 + 1 + 1] = [4]
second_letter_index [4] == [4] col
B

(col, row) = ( 5,  2):
Testing position for letter [B](2)
first_letter_index: [3 - (2 - 1)] = [2]
space_between_letters: [(2 * 2) - 3] = [1]
second_letter_index [2 + 1 + 1] = [4]
.

[_B_B_]
for col in 1 .. 5

(col, row) = ( 1,  1):
Testing position for letter [A](1)
first_letter_index: [3 - (1 - 1)] = [3]
space_between_letters: [(2 * 1) - 3] = [-1]
.

(col, row) = ( 2,  1):
Testing position for letter [A](1)
first_letter_index: [3 - (1 - 1)] = [3]
space_between_letters: [(2 * 1) - 3] = [-1]
.

(col, row) = ( 3,  1):
Testing position for letter [A](1)
first_letter_index: [3 - (1 - 1)] = [3]
first_letter_index [3] == [3] col
A

(col, row) = ( 4,  1):
Testing position for letter [A](1)
first_letter_index: [3 - (1 - 1)] = [3]
space_between_letters: [(2 * 1) - 3] = [-1]
.

(col, row) = ( 5,  1):
Testing position for letter [A](1)
first_letter_index: [3 - (1 - 1)] = [3]
space_between_letters: [(2 * 1) - 3] = [-1]
.

[__A__]

[__A__]
[_B_B_]
[C___C]
[_B_B_]
[__A__]

real	0m0.592s
user	0m0.182s
sys	0m0.384s
